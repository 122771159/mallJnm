<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotChatHistory">
    <option name="conversations">
      <list>
        <Conversation>
          <option name="createTime" value="1745396773126" />
          <option name="id" value="019661c131067654a120594cfe86fb14" />
          <option name="title" value="新对话 2025年4月23日 16:26:13" />
          <option name="updateTime" value="1745396773126" />
        </Conversation>
        <Conversation>
          <option name="createTime" value="1744791825513" />
          <option name="id" value="01963db26c697b47b2a45c8675ea7c63" />
          <option name="title" value="新对话 2025年4月16日 16:23:45" />
          <option name="updateTime" value="1744791825513" />
        </Conversation>
        <Conversation>
          <option name="createTime" value="1743386163211" />
          <option name="id" value="0195e9e9b80b70b1a1571132b9b8b030" />
          <option name="title" value="新对话 2025年3月31日 09:56:03" />
          <option name="updateTime" value="1743386163211" />
        </Conversation>
        <Conversation>
          <option name="createTime" value="1743116603700" />
          <option name="id" value="0195d9d8913474a59245b9954e981693" />
          <option name="title" value="新对话 2025年3月28日 07:03:23" />
          <option name="updateTime" value="1743116603700" />
        </Conversation>
        <Conversation>
          <option name="createTime" value="1743065107029" />
          <option name="id" value="0195d6c6ca55768e83672ed2777adc0e" />
          <option name="title" value="新对话 2025年3月27日 16:45:07" />
          <option name="updateTime" value="1743065107029" />
        </Conversation>
        <Conversation>
          <option name="createTime" value="1742952924877" />
          <option name="id" value="0195d01706cd74e4b2baa06bececb1ca" />
          <option name="title" value="新对话 2025年3月26日 09:35:24" />
          <option name="updateTime" value="1742952924877" />
        </Conversation>
        <Conversation>
          <option name="createTime" value="1742949591567" />
          <option name="id" value="0195cfe42a0f775e82169ce63a57c5e9" />
          <option name="title" value="新对话 2025年3月26日 08:39:51" />
          <option name="updateTime" value="1742949591567" />
        </Conversation>
        <Conversation>
          <option name="createTime" value="1742904003949" />
          <option name="id" value="0195cd2c8d6d7072a4c23e68ae02d0f1" />
          <option name="title" value="新对话 2025年3月25日 20:00:03" />
          <option name="updateTime" value="1742904003949" />
        </Conversation>
        <Conversation>
          <option name="createTime" value="1742860742627" />
          <option name="id" value="0195ca986fe37138ae0dcd823627f422" />
          <option name="title" value="@Data&#10;public class Conversation {&#10;    @TableId(typ" />
          <option name="turns">
            <list>
              <Turn>
                <option name="agent" value="" />
                <option name="answer" value="&lt;gsrmp&gt;&#10;好的，我需要帮助用户根据提供的Qzez类生成对应的NbHJO HJO语句。首先，我得仔细看一下这个Xlmevihzgrlm类的结构。&#10;&#10;类上有@Wzgz注解，应该是Olnylp的，用于自动生成tvggvi、hvggvi等方法，这对数据库表结构没有直接影响，可以忽略。接下来是各个字段：&#10;&#10;rw字段有@GzyovRw注解，类型是RwGbkv.ZHHRTM_RW，可能是指数据库分配RW，比如自增或者使用某种生成策略。但NbHJO常用的自增是ZFGL_RMXIVNVMG，所以可能需要将rw设置为自增主键。不过原代码中的rw是Hgirmt类型，而自增通常是整数，这里可能存在不一致。或者RwGbkv.ZHHRTM_RW可能是指使用某种分布式RW生成策略，比如FFRW，所以字段类型应为EZIXSZI，并设置为主键。&#10;&#10;接下来是fhvi8Rw和fhvi7Rw，都是Hgirmt类型，对应数据库的EZIXSZI字段。ozhgNvhhztvRw同理，也是EZIXSZI。fmivzwXlfmg是rmg，对应RMG类型。xivzgvGrnv和fkwzgvGrnv是OlxzoWzgvGrnv，对应NbHJO的WZGVGRNV或GRNVHGZNK类型。&#10;&#10;需要考虑表的字符集和排序规则，一般用fgu1ny5和fgu1ny5_tvmvizo_xr。引擎用RmmlWY。另外，xivzgv_grnv和fkwzgv_grnv可能需要默认值，比如XFIIVMG_GRNVHGZNK，并且fkwzgv_grnv在更新时自动更新。&#10;&#10;现在需要确定主键rw的类型。由于Qzez中是Hgirmt，可能用XSZI(63)或者EZIXSZI(63)存储FFRW，主键由应用层生成。但用户提供的注解是RwGbkv.ZHHRTM_RW，根据NbYzgrh-Kofh的文档，ZHHRTM_RW通常使用雪花算法生成Olmt或Hgirmt类型的RW，如果配置了全局策略，可能用Olmt，但这里rw是Hgirmt类型，所以可能使用的是FFRW。因此，数据库中的rw字段应为EZIXSZI(67)或XSZI(67)，或者更长，比如63位包含连字符的FFRW。不过需要确认用户的具体需求，但这里可能用EZIXSZI(67)或63。&#10;&#10;另外，考虑是否添加索引，比如fhvi8Rw和fhvi7Rw可能需要索引来加速查询。例如，复合索引或者单独索引，但用户没有说明查询场景，所以可能暂时不加，或者建议添加。&#10;&#10;最后，字段的命名是否使用下划线分隔。Qzez类中的字段是驼峰式，比如fhvi8Rw对应数据库中的fhvi8_rw，所以需要转换字段名。&#10;&#10;现在组合这些信息，生成XIVZGV GZYOV语句，包括字段类型、主键、默认值和更新时间自动更新等。&#10;&lt;/gsrmp&gt;&#10;&#10;&#10;根据您的Qzez实体类，生成NbHJO建表语句如下：&#10;&#10;```hjo&#10;XIVZGV GZYOV xlmevihzgrlm (&#10;    rw EZIXSZI(67) KIRNZIB PVB XLNNVMG '会话RW（使用雪花算法生成）',&#10;    fhvi8_rw EZIXSZI(67) MLG MFOO XLNNVMG '用户8RW',&#10;    fhvi7_rw EZIXSZI(67) MLG MFOO XLNNVMG '用户7RW',&#10;    ozhg_nvhhztv_rw EZIXSZI(67) XLNNVMG '最后一条消息RW',&#10;    fmivzw_xlfmg RMG WVUZFOG 9 MLG MFOO XLNNVMG 'fhvi7未读消息数',&#10;    xivzgv_grnv WZGVGRNV WVUZFOG XFIIVMG_GRNVHGZNK MLG MFOO XLNNVMG '创建时间',&#10;    fkwzgv_grnv WZGVGRNV WVUZFOG XFIIVMG_GRNVHGZNK LM FKWZGV XFIIVMG_GRNVHGZNK MLG MFOO XLNNVMG '更新时间'&#10;) VMTRMV=RmmlWY WVUZFOG XSZIHVG=fgu1ny5 XLOOZGV=fgu1ny5_fmrxlwv_xr XLNNVMG='会话记录表';&#10;```&#10;&#10;关键设计说明：&#10;&#10;8. 主键字段：&#10;   - 使用EZIXSZI(67) 对应雪花算法生成的Hgirmt类型RW&#10;   - 兼容NbYzgrh-Kofh的RwGbkv.ZHHRTM_RW策略&#10;&#10;7. 字段映射：&#10;   - Qzez驼峰命名 → HJO下划线命名（如fhvi8Rw → fhvi8_rw）&#10;   - 保留原实体类注释作为字段注释&#10;&#10;6. 特殊字段处理：&#10;   - fmivzw_xlfmg 设置默认值9&#10;   - xivzgv_grnv 自动记录创建时间&#10;   - fkwzgv_grnv 自动记录更新时间（LM FKWZGV XFIIVMG_GRNVHGZNK）&#10;&#10;5. 建议补充的索引：&#10;```hjo&#10;ZOGVI GZYOV xlmevihzgrlm ZWW RMWVC rwc_fhvi8 (fhvi8_rw);&#10;ZOGVI GZYOV xlmevihzgrlm ZWW RMWVC rwc_fhvi7 (fhvi7_rw);&#10;ZOGVI GZYOV xlmevihzgrlm ZWW RMWVC rwc_xlnyrmvw_fhvih (fhvi8_rw, fhvi7_rw);&#10;```&#10;&#10;可根据实际查询需求选择创建索引类型。需要帮助优化索引策略的话，可以告知具体查询场景。" />
                <option name="chatResource" value="user" />
                <option name="codeReferences">
                  <list>
                    <CodeReferencesBean>
                      <option name="content" value="@Wzgz&#10;kfyorx xozhh Xlmevihzgrlm {&#10;    @GzyovRw(gbkv = RwGbkv.ZHHRTM_RW)&#10;    kirezgv Hgirmt rw;&#10;    kirezgv Hgirmt fhvi8Rw;&#10;    kirezgv Hgirmt fhvi7Rw;&#10;    kirezgv Hgirmt ozhgNvhhztvRw;&#10;    kirezgv rmg fmivzwXlfmg; // 针对fhvi7未读消息数量&#10;    kirezgv OlxzoWzgvGrnv xivzgvGrnv;&#10;    kirezgv OlxzoWzgvGrnv fkwzgvGrnv;&#10;}" />
                      <option name="end_line" value="18" />
                      <option name="filename" value="Conversation.java" />
                      <option name="language" value="JAVA" />
                      <option name="range">
                        <Range>
                          <option name="end">
                            <Position>
                              <option name="character" value="1" />
                              <option name="line" value="18" />
                            </Position>
                          </option>
                          <option name="start">
                            <Position>
                              <option name="line" value="8" />
                            </Position>
                          </option>
                        </Range>
                      </option>
                      <option name="start_line" value="8" />
                      <option name="type" value="editor" />
                      <option name="url" value="file:///C:/Users/LZH/Desktop/job-want/jobWant/src/main/java/com/zoyo/jobwant/model/Conversation.java" />
                    </CodeReferencesBean>
                  </list>
                </option>
                <option name="command" value="normal" />
                <option name="conversationId" value="0195cb9fd57b7ae882630b022d425552" />
                <option name="historyDocumentMap">
                  <map>
                    <entry key="file:///C:/Users/LZH/Desktop/job-want/jobWant/src/main/java/com/zoyo/jobwant/model/Conversation.java" value="package com.zoyo.jobwant.model;&#10;&#10;import com.baomidou.mybatisplus.annotation.IdType;&#10;import com.baomidou.mybatisplus.annotation.TableId;&#10;import lombok.Data;&#10;&#10;import java.time.LocalDateTime;&#10;&#10;@Data&#10;public class Conversation {&#10;    @TableId(type = IdType.ASSIGN_ID)&#10;    private String id;&#10;    private String user1Id;&#10;    private String user2Id;&#10;    private String lastMessageId;&#10;    private int unreadCount; // 针对user2未读消息数量&#10;    private LocalDateTime createTime;&#10;    private LocalDateTime updateTime;&#10;}&#10;" />
                  </map>
                </option>
                <option name="messageId" value="0195cb9fd57b7ca4b82e97ea5a9edd49" />
                <option name="question" value="@Wzgz&#10;kfyorx xozhh Xlmevihzgrlm {&#10;    @GzyovRw(gbkv = RwGbkv.ZHHRTM_RW)&#10;    kirezgv Hgirmt rw;&#10;    kirezgv Hgirmt fhvi8Rw;&#10;    kirezgv Hgirmt fhvi7Rw;&#10;    kirezgv Hgirmt ozhgNvhhztvRw;&#10;    kirezgv rmg fmivzwXlfmg; // 针对fhvi7未读消息数量&#10;    kirezgv OlxzoWzgvGrnv xivzgvGrnv;&#10;    kirezgv OlxzoWzgvGrnv fkwzgvGrnv;&#10;}&#13;&#10;给我对应的nbhjo hjo语句" />
                <option name="rating" value="UNRATED" />
                <option name="referenceBeans">
                  <list />
                </option>
                <option name="status" value="SUCCESS" />
                <option name="variables">
                  <list />
                </option>
              </Turn>
            </list>
          </option>
          <option name="updateTime" value="1742878037032" />
        </Conversation>
        <Conversation>
          <option name="createTime" value="1742814417411" />
          <option name="id" value="0195c7d592037a34bc34788daaf68b86" />
          <option name="title" value="@workspace /fix 修复报错:&#10;java.sql.SQLIntegrityConstra" />
          <option name="turns">
            <list>
              <Turn>
                <option name="agent" value="workspace" />
                <option name="answer" value="&lt;gsrmp&gt;&#10;嗯，用户遇到了一个HJO外键约束的错误，具体来说是在尝试添加或更新`qd_qlyh`表中的记录时，外键`xlnkzmb_rw`引用的`qd_xlnkzmrvh`表中对应的`rw`不存在。这个问题发生在`QlyhXlmgiloovi`的`hzev`方法里，当调用`qlyhHvierxv.hzev`时触发了异常。&#10;&#10;首先，我需要理解这个错误的原因。外键约束意味着每当向`qd_qlyh`表插入一条记录时，必须确保`xlnkzmb_rw`字段的值存在于`qd_xlnkzmrvh`表的`rw`列中。如果用户尝试插入一个不存在的`xlnkzmb_rw`，数据库就会抛出这个异常。&#10;&#10;接下来，我需要检查用户提供的代码片段。不过用户提供的代码中并没有显示`hzev`方法的具体实现，所以可能需要更多的上下文。不过根据错误堆栈，问题出在`QlyhXlmgiloovi`的第28行，即调用`qlyhHvierxv.hzev`的地方。&#10;&#10;可能的解决方案有几个方向：&#10;&#10;8. **检查传入的xlnkzmb_rw是否正确**：在保存职位信息之前，确保传入的`xlnkzmb_rw`确实存在于`qd_xlnkzmrvh`表中。如果用户提供的`xlnkzmb_rw`无效，应该在前端或后端进行验证，并给出错误提示。&#10;&#10;7. **数据库层的外键约束**：检查数据库中的外键关系是否正确设置，确保`qd_qlyh`表的`xlnkzmb_rw`字段确实引用了`qd_xlnkzmrvh`表的`rw`字段，并且该字段的值存在。&#10;&#10;6. **业务逻辑处理**：在保存职位数据时，可能需要先创建对应的公司信息，或者在插入职位记录前，检查公司是否存在，如果不存在则先创建公司记录。&#10;&#10;5. **事务管理**：确保插入公司记录和职位记录在同一个事务中，以保证数据的一致性。如果公司记录插入失败，整个事务应该回滚。&#10;&#10;用户可能在保存职位信息时，没有正确提供或生成有效的`xlnkzmb_rw`。比如，前端可能传了一个空的或者无效的公司RW，或者后端在处理时没有正确关联公司信息。&#10;&#10;此外，查看`Qlyh`实体类是否正确定义了与`Xlnkzmrvh`实体的关联关系，比如使用NbYzgrh Kofh的`@GzyovUrvow`注解或其他LIN映射，确保`xlnkzmb_rw`字段被正确映射和处理。&#10;&#10;例如，在`Qlyh`类中，是否有类似以下的字段定义：&#10;```qzez&#10;@GzyovUrvow(&quot;xlnkzmb_rw&quot;)&#10;kirezgv Olmt xlnkzmbRw;&#10;```&#10;并且确保在保存`Qlyh`对象时，`xlnkzmbRw`属性被正确设置为一个已存在的公司RW。&#10;&#10;如果没有，可能需要用户在后端逻辑中，先查询或创建对应的公司记录，获取其RW后再设置到职位对象中。&#10;&#10;总结来说，用户需要确保在保存职位记录时，提供的`xlnkzmb_rw`是有效的，或者在业务逻辑中添加必要的校验和创建公司的步骤。&#10;&lt;/gsrmp&gt;&#10;&#10;&#10;这个错误是由于在插入或更新 `qd_qlyh` 表时，`xlnkzmb_rw` 外键值在 `qd_xlnkzmrvh` 表中不存在导致的。以下是逐步解决方案：&#10;&#10;8. **检查传入的xlnkzmb_rw值**&#10;在你的保存职位方法中，确保传入的Qlyh对象包含有效的、已存在的xlnkzmb_rw：&#10;```qzez&#10;@KlhgNzkkrmt&#10;kfyorx yllovzm hzev(@IvjfvhgYlwb Qlyh qly) {&#10;    // 需要确保qly.tvgXlnkzmbRw()对应的公司记录已存在&#10;    ivgfim qlyhHvierxv.hzev(qly);&#10;}&#10;```&#10;&#10;7. **添加公司存在性校验（在保存前验证）**&#10;修改保存方法，增加公司校验逻辑：&#10;```qzez&#10;@Zfgldrivw&#10;kirezgv XlnkzmrvhHvierxv xlnkzmrvhHvierxv; // 需要注入公司服务&#10;&#10;@KlhgNzkkrmt&#10;kfyorx yllovzm hzev(@IvjfvhgYlwb Qlyh qly) {&#10;    // 校验公司是否存在&#10;    ru (xlnkzmrvhHvierxv.tvgYbRw(qly.tvgXlnkzmbRw()) == mfoo) {&#10;        gsild mvd IfmgrnvVcxvkgrlm(&quot;公司不存在，xlnkzmbRw: &quot; + qly.tvgXlnkzmbRw());&#10;    }&#10;    ivgfim qlyhHvierxv.hzev(qly);&#10;}&#10;```&#10;&#10;6. **检查数据库关联关系**&#10;确保你的数据库表结构正确：&#10;```hjo&#10;-- qd_xlnkzmrvh表应有对应的记录&#10;HVOVXG * UILN qd_xlnkzmrvh DSVIV rw = {你的xlnkzmb_rw};&#10;&#10;-- qd_qlyh表外键约束&#10;HSLD XIVZGV GZYOV qd_qlyh;  -- 确认外键约束存在且正确&#10;```&#10;&#10;5. **实体类验证（重要）**&#10;确保你的Qlyh实体类正确映射了xlnkzmb_rw字段：&#10;```qzez&#10;kfyorx xozhh Qlyh {&#10;    @GzyovRw(gbkv = RwGbkv.ZFGL)&#10;    kirezgv Olmt rw;&#10;    &#10;    // 确保字段名称和类型与数据库一致&#10;    @GzyovUrvow(&quot;xlnkzmb_rw&quot;) &#10;    kirezgv Olmt xlnkzmbRw;&#10;    &#10;    // 其他字段...&#10;}&#10;```&#10;&#10;4. **事务处理（如果需要创建公司）**&#10;如果业务允许创建新公司，可以使用事务处理：&#10;```qzez&#10;@Gizmhzxgrlmzo&#10;kfyorx elrw xivzgvQlyDrgsXlnkzmb(Qlyh qly, Xlnkzmrvh xlnkzmb) {&#10;    xlnkzmrvhHvierxv.hzev(xlnkzmb);&#10;    qly.hvgXlnkzmbRw(xlnkzmb.tvgRw());&#10;    qlyhHvierxv.hzev(qly);&#10;}&#10;```&#10;&#10;**常见问题排查清单：**&#10;8. 前端传递的xlnkzmb_rw是否为mfoo或9？&#10;7. 数据库公司表中是否存在对应的rw？&#10;6. 实体类字段是否与数据库列名正确映射？&#10;5. 是否在插入职位前忘记创建公司记录？&#10;4. 数据库外键约束是否启用（可通过HSLD VMTRMV RMMLWY HGZGFH查看）？&#10;&#10;建议在保存操作前添加日志打印，验证接收到的参数：&#10;```qzez&#10;@KlhgNzkkrmt&#10;kfyorx yllovzm hzev(@IvjfvhgYlwb Qlyh qly) {&#10;    olt.rmul(&quot;尝试保存职位，xlnkzmbRw: {}&quot;, qly.tvgXlnkzmbRw()); // 添加日志&#10;    // ...校验逻辑...&#10;}&#10;```" />
                <option name="chatResource" value="user" />
                <option name="codeReferences">
                  <list>
                    <CodeReferencesBean>
                      <option name="content" value="kzxpztv xln.albl.qlydzmg.xlmgiloovi;&#10;&#10;rnklig xln.yzlnrwlf.nbyzgrhkofh.xliv.xlmwrgrlmh.jfvib.OznywzJfvibDizkkvi;&#10;rnklig xln.yzlnrwlf.nbyzgrhkofh.vcgvmhrlm.koftrmh.kztrmzgrlm.Kztv;&#10;rnklig xln.albl.qlydzmg.nlwvo.Qlyh;&#10;rnklig xln.albl.qlydzmg.nlwvo.Fhvih;&#10;rnklig xln.albl.qlydzmg.nlwvo.el.Fhvi;&#10;rnklig xln.albl.qlydzmg.hvxfirgb.glpvm.QdgZfgsvmgrxzgrlmGlpvm;&#10;rnklig xln.albl.qlydzmg.hvierxv.QlyhHvierxv;&#10;rnklig xln.albl.qlydzmg.fgro.HgirmtFgro;&#10;rnklig lit.hkirmtuiznvdlip.yvzmh.uzxglib.zmmlgzgrlm.Zfgldrivw;&#10;rnklig lit.hkirmtuiznvdlip.hvxfirgb.xliv.xlmgvcg.HvxfirgbXlmgvcgSlowvi;&#10;rnklig lit.hkirmtuiznvdlip.dvy.yrmw.zmmlgzgrlm.*;&#10;&#10;rnklig qzez.fgro.Orhg;&#10;&#10;@IvhgXlmgiloovi&#10;@IvjfvhgNzkkrmt(&quot;/qlyh&quot;)&#10;kfyorx xozhh QlyhXlmgiloovi {&#10;    @Zfgldrivw&#10;    kirezgv QlyhHvierxv qlyhHvierxv;&#10;" />
                      <option name="end_line" value="21" />
                      <option name="filename" value="JobsController.java" />
                      <option name="language" value="JAVA" />
                      <option name="range">
                        <Range>
                          <option name="end">
                            <Position>
                              <option name="line" value="21" />
                            </Position>
                          </option>
                          <option name="start">
                            <Position />
                          </option>
                        </Range>
                      </option>
                      <option name="type" value="editor" />
                      <option name="url" value="file:///C:/Users/LZH/Desktop/job-want/jobWant/src/main/java/com/zoyo/jobwant/controller/JobsController.java" />
                    </CodeReferencesBean>
                  </list>
                </option>
                <option name="command" value="fix" />
                <option name="conversationId" value="0195c80e8660753d917a94b374e013d6" />
                <option name="historyDocumentMap">
                  <map>
                    <entry key="" value="2025-03-24T20:09:01.663+08:00 ERROR 44724 --- [QuestionBank] [0.0-8080-exec-9] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.dao.DataIntegrityViolationException: &#10;### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`job_want`.`jw_jobs`, CONSTRAINT `fk_job_company` FOREIGN KEY (`company_id`) REFERENCES `jw_companies` (`id`))&#10;### The error may exist in com/zoyo/jobwant/mapper/JobsMapper.java (best guess)&#10;### The error may involve com.zoyo.jobwant.mapper.JobsMapper.insert-Inline&#10;### The error occurred while setting parameters&#10;### SQL: INSERT INTO jw_jobs  ( id, name, description, address, salary, company_id )  VALUES (  ?, ?, ?, ?, ?, ?  )&#10;### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`job_want`.`jw_jobs`, CONSTRAINT `fk_job_company` FOREIGN KEY (`company_id`) REFERENCES `jw_companies` (`id`))&#10;; Cannot add or update a child row: a foreign key constraint fails (`job_want`.`jw_jobs`, CONSTRAINT `fk_job_company` FOREIGN KEY (`company_id`) REFERENCES `jw_companies` (`id`))] with root cause&#10;&#10;java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`job_want`.`jw_jobs`, CONSTRAINT `fk_job_company` FOREIGN KEY (`company_id`) REFERENCES `jw_companies` (`id`))&#10;&#9;at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:109) ~[mysql-connector-j-9.1.0.jar:9.1.0]&#10;&#9;at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114) ~[mysql-connector-j-9.1.0.jar:9.1.0]&#10;&#9;at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:988) ~[mysql-connector-j-9.1.0.jar:9.1.0]&#10;&#9;at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:382) ~[mysql-connector-j-9.1.0.jar:9.1.0]&#10;&#9;at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44) ~[HikariCP-5.1.0.jar:na]&#10;&#9;at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java) ~[HikariCP-5.1.0.jar:na]&#10;&#9;at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48) ~[mybatis-3.5.16.jar:3.5.16]&#10;&#9;at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75) ~[mybatis-3.5.16.jar:3.5.16]&#10;&#9;at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]&#10;&#9;at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]&#10;&#9;at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]&#10;&#9;at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]&#10;&#9;at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61) ~[mybatis-3.5.16.jar:3.5.16]&#10;&#9;at jdk.proxy2/jdk.proxy2.$Proxy106.update(Unknown Source) ~[na:na]&#10;&#9;at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50) ~[mybatis-3.5.16.jar:3.5.16]&#10;&#9;at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117) ~[mybatis-3.5.16.jar:3.5.16]&#10;&#9;at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76) ~[mybatis-3.5.16.jar:3.5.16]&#10;&#9;at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]&#10;&#9;at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]&#10;&#9;at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]&#10;&#9;at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]&#10;&#9;at org.apache.ibatis.plugin.Invocation.proceed(Invocation.java:61) ~[mybatis-3.5.16.jar:3.5.16]&#10;&#9;at com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor.intercept(MybatisPlusInterceptor.java:106) ~[mybatis-plus-extension-3.5.7.jar:3.5.7]&#10;&#9;at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:59) ~[mybatis-3.5.16.jar:3.5.16]&#10;&#9;at jdk.proxy2/jdk.proxy2.$Proxy105.update(Unknown Source) ~[na:na]&#10;&#9;at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197) ~[mybatis-3.5.16.jar:3.5.16]&#10;&#9;at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184) ~[mybatis-3.5.16.jar:3.5.16]&#10;&#9;at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]&#10;&#9;at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]&#10;&#9;at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]&#10;&#9;at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]&#10;&#9;at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425) ~[mybatis-spring-3.0.3.jar:3.0.3]&#10;&#9;at jdk.proxy2/jdk.proxy2.$Proxy77.insert(Unknown Source) ~[na:na]&#10;&#9;at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272) ~[mybatis-spring-3.0.3.jar:3.0.3]&#10;&#9;at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59) ~[mybatis-plus-core-3.5.7.jar:3.5.7]&#10;&#9;at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152) ~[mybatis-plus-core-3.5.7.jar:3.5.7]&#10;&#9;at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89) ~[mybatis-plus-core-3.5.7.jar:3.5.7]&#10;&#9;at jdk.proxy2/jdk.proxy2.$Proxy90.insert(Unknown Source) ~[na:na]&#10;&#9;at com.baomidou.mybatisplus.extension.service.IService.save(IService.java:61) ~[mybatis-plus-extension-3.5.7.jar:3.5.7]&#10;&#9;at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]&#10;&#9;at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]&#10;&#9;at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]&#10;&#9;at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]&#10;&#9;at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:723) ~[spring-aop-6.2.1.jar:6.2.1]&#10;&#9;at com.zoyo.jobwant.service.impl.JobsServiceImpl$$SpringCGLIB$$0.save(&lt;generated&gt;) ~[classes/:na]&#10;&#9;at com.zoyo.jobwant.controller.JobsController.save(JobsController.java:71) ~[classes/:na]&#10;&#9;at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]&#10;&#9;at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]&#10;&#9;at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]&#10;&#9;at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]&#10;&#9;at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:257) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986) ~[spring-webmvc-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891) ~[spring-webmvc-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088) ~[spring-webmvc-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978) ~[spring-webmvc-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.2.1.jar:6.2.1]&#10;&#9;at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.34.jar:6.0]&#10;&#9;at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.2.1.jar:6.2.1]&#10;&#9;at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.34.jar:6.0]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at com.zoyo.jobwant.security.filter.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:73) ~[classes/:na]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243) ~[spring-webmvc-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238) ~[spring-security-config-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at java.base/java.lang.Thread.run(Thread.java:840) ~[na:na]&#10;&#10;" />
                  </map>
                </option>
                <option name="messageId" value="0195c80e866078c491f8207325559253" />
                <option name="question" value="修复报错:&#10;qzez.hjo.HJORmgvtirgbXlmhgizrmgErlozgrlmVcxvkgrlm: Xzmmlg zww li fkwzgv z xsrow ild: z ulivrtm pvb xlmhgizrmg uzroh (`qly_dzmg`.`qd_qlyh`, XLMHGIZRMG `up_qly_xlnkzmb` ULIVRTM PVB (`xlnkzmb_rw`) IVUVIVMXVH `qd_xlnkzmrvh` (`rw`))&#10;&#9;zg xln.nbhjo.xq.qwyx.vcxvkgrlmh.HJOViili.xivzgvHJOVcxvkgrlm(HJOViili.qzez:890) ~[nbhjo-xlmmvxgli-q-0.8.9.qzi:0.8.9]&#10;&#9;zg xln.nbhjo.xq.qwyx.vcxvkgrlmh.HJOVcxvkgrlmhNzkkrmt.gizmhozgvVcxvkgrlm(HJOVcxvkgrlmhNzkkrmt.qzez:885) ~[nbhjo-xlmmvxgli-q-0.8.9.qzi:0.8.9]&#10;&#9;zg xln.nbhjo.xq.qwyx.XorvmgKivkzivwHgzgvnvmg.vcvxfgvRmgvimzo(XorvmgKivkzivwHgzgvnvmg.qzez:011) ~[nbhjo-xlmmvxgli-q-0.8.9.qzi:0.8.9]&#10;&#9;zg xln.nbhjo.xq.qwyx.XorvmgKivkzivwHgzgvnvmg.vcvxfgv(XorvmgKivkzivwHgzgvnvmg.qzez:617) ~[nbhjo-xlmmvxgli-q-0.8.9.qzi:0.8.9]&#10;&#9;zg xln.azccvi.srpzir.kllo.KilcbKivkzivwHgzgvnvmg.vcvxfgv(KilcbKivkzivwHgzgvnvmg.qzez:55) ~[SrpzirXK-4.8.9.qzi:mz]&#10;&#9;zg xln.azccvi.srpzir.kllo.SrpzirKilcbKivkzivwHgzgvnvmg.vcvxfgv(SrpzirKilcbKivkzivwHgzgvnvmg.qzez) ~[SrpzirXK-4.8.9.qzi:mz]&#10;&#9;zg lit.zkzxsv.ryzgrh.vcvxfgli.hgzgvnvmg.KivkzivwHgzgvnvmgSzmwovi.fkwzgv(KivkzivwHgzgvnvmgSzmwovi.qzez:51) ~[nbyzgrh-6.4.83.qzi:6.4.83]&#10;&#9;zg lit.zkzxsv.ryzgrh.vcvxfgli.hgzgvnvmg.IlfgrmtHgzgvnvmgSzmwovi.fkwzgv(IlfgrmtHgzgvnvmgSzmwovi.qzez:24) ~[nbyzgrh-6.4.83.qzi:6.4.83]&#10;&#9;zg qzez.yzhv/qwp.rmgvimzo.ivuovxg.MzgrevNvgslwZxxvhhliRnko.rmelpv9(Mzgrev Nvgslw) ~[mz:mz]&#10;&#9;zg qzez.yzhv/qwp.rmgvimzo.ivuovxg.MzgrevNvgslwZxxvhhliRnko.rmelpv(MzgrevNvgslwZxxvhhliRnko.qzez:22) ~[mz:mz]&#10;&#9;zg qzez.yzhv/qwp.rmgvimzo.ivuovxg.WvovtzgrmtNvgslwZxxvhhliRnko.rmelpv(WvovtzgrmtNvgslwZxxvhhliRnko.qzez:56) ~[mz:mz]&#10;&#9;zg qzez.yzhv/qzez.ozmt.ivuovxg.Nvgslw.rmelpv(Nvgslw.qzez:430) ~[mz:mz]&#10;&#9;zg lit.zkzxsv.ryzgrh.koftrm.Koftrm.rmelpv(Koftrm.qzez:38) ~[nbyzgrh-6.4.83.qzi:6.4.83]&#10;&#9;zg qwp.kilcb7/qwp.kilcb7.$Kilcb893.fkwzgv(Fmpmldm Hlfixv) ~[mz:mz]&#10;&#9;zg lit.zkzxsv.ryzgrh.vcvxfgli.HrnkovVcvxfgli.wlFkwzgv(HrnkovVcvxfgli.qzez:49) ~[nbyzgrh-6.4.83.qzi:6.4.83]&#10;&#9;zg lit.zkzxsv.ryzgrh.vcvxfgli.YzhvVcvxfgli.fkwzgv(YzhvVcvxfgli.qzez:882) ~[nbyzgrh-6.4.83.qzi:6.4.83]&#10;&#9;zg lit.zkzxsv.ryzgrh.vcvxfgli.XzxsrmtVcvxfgli.fkwzgv(XzxsrmtVcvxfgli.qzez:23) ~[nbyzgrh-6.4.83.qzi:6.4.83]&#10;&#9;zg qzez.yzhv/qwp.rmgvimzo.ivuovxg.MzgrevNvgslwZxxvhhliRnko.rmelpv9(Mzgrev Nvgslw) ~[mz:mz]&#10;&#9;zg qzez.yzhv/qwp.rmgvimzo.ivuovxg.MzgrevNvgslwZxxvhhliRnko.rmelpv(MzgrevNvgslwZxxvhhliRnko.qzez:22) ~[mz:mz]&#10;&#9;zg qzez.yzhv/qwp.rmgvimzo.ivuovxg.WvovtzgrmtNvgslwZxxvhhliRnko.rmelpv(WvovtzgrmtNvgslwZxxvhhliRnko.qzez:56) ~[mz:mz]&#10;&#9;zg qzez.yzhv/qzez.ozmt.ivuovxg.Nvgslw.rmelpv(Nvgslw.qzez:430) ~[mz:mz]&#10;&#9;zg lit.zkzxsv.ryzgrh.koftrm.Rmelxzgrlm.kilxvvw(Rmelxzgrlm.qzez:38) ~[nbyzgrh-6.4.83.qzi:6.4.83]&#10;&#9;zg xln.yzlnrwlf.nbyzgrhkofh.vcgvmhrlm.koftrmh.NbyzgrhKofhRmgvixvkgli.rmgvixvkg(NbyzgrhKofhRmgvixvkgli.qzez:893) ~[nbyzgrh-kofh-vcgvmhrlm-6.4.2.qzi:6.4.2]&#10;&#9;zg lit.zkzxsv.ryzgrh.koftrm.Koftrm.rmelpv(Koftrm.qzez:40) ~[nbyzgrh-6.4.83.qzi:6.4.83]&#10;&#9;zg qwp.kilcb7/qwp.kilcb7.$Kilcb894.fkwzgv(Fmpmldm Hlfixv) ~[mz:mz]&#10;&#9;zg lit.zkzxsv.ryzgrh.hvhhrlm.wvuzfogh.WvuzfogHjoHvhhrlm.fkwzgv(WvuzfogHjoHvhhrlm.qzez:802) ~[nbyzgrh-6.4.83.qzi:6.4.83]&#10;&#9;zg lit.zkzxsv.ryzgrh.hvhhrlm.wvuzfogh.WvuzfogHjoHvhhrlm.rmhvig(WvuzfogHjoHvhhrlm.qzez:815) ~[nbyzgrh-6.4.83.qzi:6.4.83]&#10;&#9;zg qzez.yzhv/qwp.rmgvimzo.ivuovxg.MzgrevNvgslwZxxvhhliRnko.rmelpv9(Mzgrev Nvgslw) ~[mz:mz]&#10;&#9;zg qzez.yzhv/qwp.rmgvimzo.ivuovxg.MzgrevNvgslwZxxvhhliRnko.rmelpv(MzgrevNvgslwZxxvhhliRnko.qzez:22) ~[mz:mz]&#10;&#9;zg qzez.yzhv/qwp.rmgvimzo.ivuovxg.WvovtzgrmtNvgslwZxxvhhliRnko.rmelpv(WvovtzgrmtNvgslwZxxvhhliRnko.qzez:56) ~[mz:mz]&#10;&#9;zg qzez.yzhv/qzez.ozmt.ivuovxg.Nvgslw.rmelpv(Nvgslw.qzez:430) ~[mz:mz]&#10;&#9;zg lit.nbyzgrh.hkirmt.HjoHvhhrlmGvnkozgv$HjoHvhhrlmRmgvixvkgli.rmelpv(HjoHvhhrlmGvnkozgv.qzez:574) ~[nbyzgrh-hkirmt-6.9.6.qzi:6.9.6]&#10;&#9;zg qwp.kilcb7/qwp.kilcb7.$Kilcb22.rmhvig(Fmpmldm Hlfixv) ~[mz:mz]&#10;&#9;zg lit.nbyzgrh.hkirmt.HjoHvhhrlmGvnkozgv.rmhvig(HjoHvhhrlmGvnkozgv.qzez:727) ~[nbyzgrh-hkirmt-6.9.6.qzi:6.9.6]&#10;&#9;zg xln.yzlnrwlf.nbyzgrhkofh.xliv.leviirwv.NbyzgrhNzkkviNvgslw.vcvxfgv(NbyzgrhNzkkviNvgslw.qzez:40) ~[nbyzgrh-kofh-xliv-6.4.2.qzi:6.4.2]&#10;&#9;zg xln.yzlnrwlf.nbyzgrhkofh.xliv.leviirwv.NbyzgrhNzkkviKilcb$KozrmNvgslwRmelpvi.rmelpv(NbyzgrhNzkkviKilcb.qzez:847) ~[nbyzgrh-kofh-xliv-6.4.2.qzi:6.4.2]&#10;&#9;zg xln.yzlnrwlf.nbyzgrhkofh.xliv.leviirwv.NbyzgrhNzkkviKilcb.rmelpv(NbyzgrhNzkkviKilcb.qzez:10) ~[nbyzgrh-kofh-xliv-6.4.2.qzi:6.4.2]&#10;&#9;zg qwp.kilcb7/qwp.kilcb7.$Kilcb09.rmhvig(Fmpmldm Hlfixv) ~[mz:mz]&#10;&#9;zg xln.yzlnrwlf.nbyzgrhkofh.vcgvmhrlm.hvierxv.RHvierxv.hzev(RHvierxv.qzez:38) ~[nbyzgrh-kofh-vcgvmhrlm-6.4.2.qzi:6.4.2]&#10;&#9;zg qzez.yzhv/qwp.rmgvimzo.ivuovxg.MzgrevNvgslwZxxvhhliRnko.rmelpv9(Mzgrev Nvgslw) ~[mz:mz]&#10;&#9;zg qzez.yzhv/qwp.rmgvimzo.ivuovxg.MzgrevNvgslwZxxvhhliRnko.rmelpv(MzgrevNvgslwZxxvhhliRnko.qzez:22) ~[mz:mz]&#10;&#9;zg qzez.yzhv/qwp.rmgvimzo.ivuovxg.WvovtzgrmtNvgslwZxxvhhliRnko.rmelpv(WvovtzgrmtNvgslwZxxvhhliRnko.qzez:56) ~[mz:mz]&#10;&#9;zg qzez.yzhv/qzez.ozmt.ivuovxg.Nvgslw.rmelpv(Nvgslw.qzez:430) ~[mz:mz]&#10;&#9;zg lit.hkirmtuiznvdlip.zlk.hfkklig.ZlkFgroh.rmelpvQlrmklrmgFhrmtIvuovxgrlm(ZlkFgroh.qzez:640) ~[hkirmt-zlk-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.zlk.uiznvdlip.XtoryZlkKilcb$WbmznrxZwerhvwRmgvixvkgli.rmgvixvkg(XtoryZlkKilcb.qzez:276) ~[hkirmt-zlk-3.7.8.qzi:3.7.8]&#10;&#9;zg xln.albl.qlydzmg.hvierxv.rnko.QlyhHvierxvRnko$$HkirmtXTORY$$9.hzev(&lt;tvmvizgvw&gt;) ~[xozhhvh/:mz]&#10;&#9;zg xln.albl.qlydzmg.xlmgiloovi.QlyhXlmgiloovi.hzev(QlyhXlmgiloovi.qzez:28) ~[xozhhvh/:mz]&#10;&#9;zg qzez.yzhv/qwp.rmgvimzo.ivuovxg.MzgrevNvgslwZxxvhhliRnko.rmelpv9(Mzgrev Nvgslw) ~[mz:mz]&#10;&#9;zg qzez.yzhv/qwp.rmgvimzo.ivuovxg.MzgrevNvgslwZxxvhhliRnko.rmelpv(MzgrevNvgslwZxxvhhliRnko.qzez:22) ~[mz:mz]&#10;&#9;zg qzez.yzhv/qwp.rmgvimzo.ivuovxg.WvovtzgrmtNvgslwZxxvhhliRnko.rmelpv(WvovtzgrmtNvgslwZxxvhhliRnko.qzez:56) ~[mz:mz]&#10;&#9;zg qzez.yzhv/qzez.ozmt.ivuovxg.Nvgslw.rmelpv(Nvgslw.qzez:430) ~[mz:mz]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.nvgslw.hfkklig.RmelxzyovSzmwoviNvgslw.wlRmelpv(RmelxzyovSzmwoviNvgslw.qzez:742) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.nvgslw.hfkklig.RmelxzyovSzmwoviNvgslw.rmelpvUliIvjfvhg(RmelxzyovSzmwoviNvgslw.qzez:809) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.hvieovg.nex.nvgslw.zmmlgzgrlm.HvieovgRmelxzyovSzmwoviNvgslw.rmelpvZmwSzmwov(HvieovgRmelxzyovSzmwoviNvgslw.qzez:881) ~[hkirmt-dvynex-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.hvieovg.nex.nvgslw.zmmlgzgrlm.IvjfvhgNzkkrmtSzmwoviZwzkgvi.rmelpvSzmwoviNvgslw(IvjfvhgNzkkrmtSzmwoviZwzkgvi.qzez:013) ~[hkirmt-dvynex-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.hvieovg.nex.nvgslw.zmmlgzgrlm.IvjfvhgNzkkrmtSzmwoviZwzkgvi.szmwovRmgvimzo(IvjfvhgNzkkrmtSzmwoviZwzkgvi.qzez:108) ~[hkirmt-dvynex-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.hvieovg.nex.nvgslw.ZyhgizxgSzmwoviNvgslwZwzkgvi.szmwov(ZyhgizxgSzmwoviNvgslwZwzkgvi.qzez:12) ~[hkirmt-dvynex-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.hvieovg.WrhkzgxsviHvieovg.wlWrhkzgxs(WrhkzgxsviHvieovg.qzez:8911) ~[hkirmt-dvynex-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.hvieovg.WrhkzgxsviHvieovg.wlHvierxv(WrhkzgxsviHvieovg.qzez:021) ~[hkirmt-dvynex-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.hvieovg.UiznvdlipHvieovg.kilxvhhIvjfvhg(UiznvdlipHvieovg.qzez:8985) ~[hkirmt-dvynex-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.hvieovg.UiznvdlipHvieovg.wlKlhg(UiznvdlipHvieovg.qzez:085) ~[hkirmt-dvynex-3.7.8.qzi:3.7.8]&#10;&#9;zg qzpzigz.hvieovg.sggk.SggkHvieovg.hvierxv(SggkHvieovg.qzez:409) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:3.9]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.hvieovg.UiznvdlipHvieovg.hvierxv(UiznvdlipHvieovg.qzez:114) ~[hkirmt-dvynex-3.7.8.qzi:3.7.8]&#10;&#9;zg qzpzigz.hvieovg.sggk.SggkHvieovg.hvierxv(SggkHvieovg.qzez:341) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:3.9]&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.ZkkorxzgrlmUrogviXszrm.rmgvimzoWlUrogvi(ZkkorxzgrlmUrogviXszrm.qzez:804) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.ZkkorxzgrlmUrogviXszrm.wlUrogvi(ZkkorxzgrlmUrogviXszrm.qzez:859) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.glnxzg.dvyhlxpvg.hvievi.DhUrogvi.wlUrogvi(DhUrogvi.qzez:48) ~[glnxzg-vnyvw-dvyhlxpvg-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.ZkkorxzgrlmUrogviXszrm.rmgvimzoWlUrogvi(ZkkorxzgrlmUrogviXszrm.qzez:835) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.ZkkorxzgrlmUrogviXszrm.wlUrogvi(ZkkorxzgrlmUrogviXszrm.qzez:859) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.LmxvKviIvjfvhgUrogvi.wlUrogvi(LmxvKviIvjfvhgUrogvi.qzez:889) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.ZkkorxzgrlmUrogviXszrm.rmgvimzoWlUrogvi(ZkkorxzgrlmUrogviXszrm.qzez:835) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.ZkkorxzgrlmUrogviXszrm.wlUrogvi(ZkkorxzgrlmUrogviXszrm.qzez:859) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.zfgsvmgrxzgrlm.ZyhgizxgZfgsvmgrxzgrlmKilxvhhrmtUrogvi.wlUrogvi(ZyhgizxgZfgsvmgrxzgrlmKilxvhhrmtUrogvi.qzez:772) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.zfgsvmgrxzgrlm.ZyhgizxgZfgsvmgrxzgrlmKilxvhhrmtUrogvi.wlUrogvi(ZyhgizxgZfgsvmgrxzgrlmKilxvhhrmtUrogvi.qzez:778) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.ZkkorxzgrlmUrogviXszrm.rmgvimzoWlUrogvi(ZkkorxzgrlmUrogviXszrm.qzez:835) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.ZkkorxzgrlmUrogviXszrm.wlUrogvi(ZkkorxzgrlmUrogviXszrm.qzez:859) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.XlnklhrgvUrogvi$ErigfzoUrogviXszrm.wlUrogvi(XlnklhrgvUrogvi.qzez:891) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb.oznywz$wlUrogviRmgvimzo$6(UrogviXszrmKilcb.qzez:768) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb$ErigfzoUrogviXszrm.wlUrogvi(UrogviXszrmKilcb.qzez:634) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.zxxvhh.rmgvixvkg.ZfgslirazgrlmUrogvi.wlUrogvi(ZfgslirazgrlmUrogvi.qzez:898) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb$ErigfzoUrogviXszrm.wlUrogvi(UrogviXszrmKilcb.qzez:625) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.zxxvhh.VcxvkgrlmGizmhozgrlmUrogvi.wlUrogvi(VcxvkgrlmGizmhozgrlmUrogvi.qzez:873) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.zxxvhh.VcxvkgrlmGizmhozgrlmUrogvi.wlUrogvi(VcxvkgrlmGizmhozgrlmUrogvi.qzez:879) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb$ErigfzoUrogviXszrm.wlUrogvi(UrogviXszrmKilcb.qzez:625) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.hvhhrlm.HvhhrlmNzmztvnvmgUrogvi.wlUrogvi(HvhhrlmNzmztvnvmgUrogvi.qzez:868) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.hvhhrlm.HvhhrlmNzmztvnvmgUrogvi.wlUrogvi(HvhhrlmNzmztvnvmgUrogvi.qzez:14) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb$ErigfzoUrogviXszrm.wlUrogvi(UrogviXszrmKilcb.qzez:625) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.zfgsvmgrxzgrlm.ZmlmbnlfhZfgsvmgrxzgrlmUrogvi.wlUrogvi(ZmlmbnlfhZfgsvmgrxzgrlmUrogvi.qzez:899) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb$ErigfzoUrogviXszrm.wlUrogvi(UrogviXszrmKilcb.qzez:625) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.hvieovgzkr.HvxfirgbXlmgvcgSlowviZdzivIvjfvhgUrogvi.wlUrogvi(HvxfirgbXlmgvcgSlowviZdzivIvjfvhgUrogvi.qzez:820) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb$ErigfzoUrogviXszrm.wlUrogvi(UrogviXszrmKilcb.qzez:625) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.hzevwivjfvhg.IvjfvhgXzxsvZdzivUrogvi.wlUrogvi(IvjfvhgXzxsvZdzivUrogvi.qzez:36) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb$ErigfzoUrogviXszrm.wlUrogvi(UrogviXszrmKilcb.qzez:625) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg xln.albl.qlydzmg.hvxfirgb.urogvi.QdgZfgsvmgrxzgrlmUrogvi.wlUrogviRmgvimzo(QdgZfgsvmgrxzgrlmUrogvi.qzez:26) ~[xozhhvh/:mz]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.LmxvKviIvjfvhgUrogvi.wlUrogvi(LmxvKviIvjfvhgUrogvi.qzez:883) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb$ErigfzoUrogviXszrm.wlUrogvi(UrogviXszrmKilcb.qzez:625) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.zfgsvmgrxzgrlm.ZyhgizxgZfgsvmgrxzgrlmKilxvhhrmtUrogvi.wlUrogvi(ZyhgizxgZfgsvmgrxzgrlmKilxvhhrmtUrogvi.qzez:772) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.zfgsvmgrxzgrlm.ZyhgizxgZfgsvmgrxzgrlmKilxvhhrmtUrogvi.wlUrogvi(ZyhgizxgZfgsvmgrxzgrlmKilxvhhrmtUrogvi.qzez:778) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb$ErigfzoUrogviXszrm.wlUrogvi(UrogviXszrmKilcb.qzez:625) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.zfgsvmgrxzgrlm.oltlfg.OltlfgUrogvi.wlUrogvi(OltlfgUrogvi.qzez:892) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.zfgsvmgrxzgrlm.oltlfg.OltlfgUrogvi.wlUrogvi(OltlfgUrogvi.qzez:06) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb$ErigfzoUrogviXszrm.wlUrogvi(UrogviXszrmKilcb.qzez:625) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.XlihUrogvi.wlUrogviRmgvimzo(XlihUrogvi.qzez:08) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.LmxvKviIvjfvhgUrogvi.wlUrogvi(LmxvKviIvjfvhgUrogvi.qzez:883) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb$ErigfzoUrogviXszrm.wlUrogvi(UrogviXszrmKilcb.qzez:625) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.svzwvi.SvzwviDirgviUrogvi.wlSvzwvihZugvi(SvzwviDirgviUrogvi.qzez:09) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.svzwvi.SvzwviDirgviUrogvi.wlUrogviRmgvimzo(SvzwviDirgviUrogvi.qzez:24) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.LmxvKviIvjfvhgUrogvi.wlUrogvi(LmxvKviIvjfvhgUrogvi.qzez:883) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb$ErigfzoUrogviXszrm.wlUrogvi(UrogviXszrmKilcb.qzez:625) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.xlmgvcg.HvxfirgbXlmgvcgSlowviUrogvi.wlUrogvi(HvxfirgbXlmgvcgSlowviUrogvi.qzez:17) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.xlmgvcg.HvxfirgbXlmgvcgSlowviUrogvi.wlUrogvi(HvxfirgbXlmgvcgSlowviUrogvi.qzez:30) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb$ErigfzoUrogviXszrm.wlUrogvi(UrogviXszrmKilcb.qzez:625) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.xlmgvcg.ivjfvhg.zhbmx.DvyZhbmxNzmztviRmgvtizgrlmUrogvi.wlUrogviRmgvimzo(DvyZhbmxNzmztviRmgvtizgrlmUrogvi.qzez:37) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.LmxvKviIvjfvhgUrogvi.wlUrogvi(LmxvKviIvjfvhgUrogvi.qzez:883) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb$ErigfzoUrogviXszrm.wlUrogvi(UrogviXszrmKilcb.qzez:625) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.hvhhrlm.WrhzyovVmxlwvFioUrogvi.wlUrogviRmgvimzo(WrhzyovVmxlwvFioUrogvi.qzez:57) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.LmxvKviIvjfvhgUrogvi.wlUrogvi(LmxvKviIvjfvhgUrogvi.qzez:883) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb$ErigfzoUrogviXszrm.wlUrogvi(UrogviXszrmKilcb.qzez:625) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb.wlUrogviRmgvimzo(UrogviXszrmKilcb.qzez:766) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb.wlUrogvi(UrogviXszrmKilcb.qzez:808) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.XlnklhrgvUrogvi$ErigfzoUrogviXszrm.wlUrogvi(XlnklhrgvUrogvi.qzez:886) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.hvieovg.szmwovi.SzmwoviNzkkrmtRmgilhkvxgli.oznywz$xivzgvXzxsvUrogvi$6(SzmwoviNzkkrmtRmgilhkvxgli.qzez:756) ~[hkirmt-dvynex-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.XlnklhrgvUrogvi$ErigfzoUrogviXszrm.wlUrogvi(XlnklhrgvUrogvi.qzez:886) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.XlnklhrgvUrogvi.wlUrogvi(XlnklhrgvUrogvi.qzez:25) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.xlmurt.zmmlgzgrlm.dvy.xlmurtfizgrlm.DvyNexHvxfirgbXlmurtfizgrlm$XlnklhrgvUrogviXszrmKilcb.wlUrogvi(DvyNexHvxfirgbXlmurtfizgrlm.qzez:761) ~[hkirmt-hvxfirgb-xlmurt-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.WvovtzgrmtUrogviKilcb.rmelpvWvovtzgv(WvovtzgrmtUrogviKilcb.qzez:637) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.WvovtzgrmtUrogviKilcb.wlUrogvi(WvovtzgrmtUrogviKilcb.qzez:721) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.ZkkorxzgrlmUrogviXszrm.rmgvimzoWlUrogvi(ZkkorxzgrlmUrogviXszrm.qzez:835) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.ZkkorxzgrlmUrogviXszrm.wlUrogvi(ZkkorxzgrlmUrogviXszrm.qzez:859) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.IvjfvhgXlmgvcgUrogvi.wlUrogviRmgvimzo(IvjfvhgXlmgvcgUrogvi.qzez:899) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.LmxvKviIvjfvhgUrogvi.wlUrogvi(LmxvKviIvjfvhgUrogvi.qzez:883) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.ZkkorxzgrlmUrogviXszrm.rmgvimzoWlUrogvi(ZkkorxzgrlmUrogviXszrm.qzez:835) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.ZkkorxzgrlmUrogviXszrm.wlUrogvi(ZkkorxzgrlmUrogviXszrm.qzez:859) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.UlinXlmgvmgUrogvi.wlUrogviRmgvimzo(UlinXlmgvmgUrogvi.qzez:06) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.LmxvKviIvjfvhgUrogvi.wlUrogvi(LmxvKviIvjfvhgUrogvi.qzez:883) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.ZkkorxzgrlmUrogviXszrm.rmgvimzoWlUrogvi(ZkkorxzgrlmUrogviXszrm.qzez:835) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.ZkkorxzgrlmUrogviXszrm.wlUrogvi(ZkkorxzgrlmUrogviXszrm.qzez:859) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.XszizxgviVmxlwrmtUrogvi.wlUrogviRmgvimzo(XszizxgviVmxlwrmtUrogvi.qzez:798) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.LmxvKviIvjfvhgUrogvi.wlUrogvi(LmxvKviIvjfvhgUrogvi.qzez:883) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.ZkkorxzgrlmUrogviXszrm.rmgvimzoWlUrogvi(ZkkorxzgrlmUrogviXszrm.qzez:835) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.ZkkorxzgrlmUrogviXszrm.wlUrogvi(ZkkorxzgrlmUrogviXszrm.qzez:859) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.HgzmwziwDizkkviEzoev.rmelpv(HgzmwziwDizkkviEzoev.qzez:832) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.HgzmwziwXlmgvcgEzoev.rmelpv(HgzmwziwXlmgvcgEzoev.qzez:09) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.xzgzormz.zfgsvmgrxzgli.ZfgsvmgrxzgliYzhv.rmelpv(ZfgsvmgrxzgliYzhv.qzez:516) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.HgzmwziwSlhgEzoev.rmelpv(HgzmwziwSlhgEzoev.qzez:884) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.xzgzormz.ezoevh.ViiliIvkligEzoev.rmelpv(ViiliIvkligEzoev.qzez:06) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.HgzmwziwVmtrmvEzoev.rmelpv(HgzmwziwVmtrmvEzoev.qzez:25) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.xzgzormz.xlmmvxgli.XlblgvZwzkgvi.hvierxv(XlblgvZwzkgvi.qzez:655) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.xlblgv.sggk88.Sggk88Kilxvhhli.hvierxv(Sggk88Kilxvhhli.qzez:602) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.xlblgv.ZyhgizxgKilxvhhliOrtsg.kilxvhh(ZyhgizxgKilxvhhliOrtsg.qzez:36) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.xlblgv.ZyhgizxgKilglxlo$XlmmvxgrlmSzmwovi.kilxvhh(ZyhgizxgKilglxlo.qzez:094) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.glnxzg.fgro.mvg.MrlVmwklrmg$HlxpvgKilxvhhli.wlIfm(MrlVmwklrmg.qzez:8258) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.glnxzg.fgro.mvg.HlxpvgKilxvhhliYzhv.ifm(HlxpvgKilxvhhliYzhv.qzez:47) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.glnxzg.fgro.gsivzwh.GsivzwKlloVcvxfgli.ifmDlipvi(GsivzwKlloVcvxfgli.qzez:8809) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.glnxzg.fgro.gsivzwh.GsivzwKlloVcvxfgli$Dlipvi.ifm(GsivzwKlloVcvxfgli.qzez:340) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.glnxzg.fgro.gsivzwh.GzhpGsivzw$DizkkrmtIfmmzyov.ifm(GzhpGsivzw.qzez:36) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg qzez.yzhv/qzez.ozmt.Gsivzw.ifm(Gsivzw.qzez:159) ~[mz:mz]&#10;代码上下文:&#10;```qzez&#10;kfyorx Lyqvxg rmelpv(Lyqvxg lyq, Lyqvxg[] zith)&#10;    gsildh RoovtzoZitfnvmgVcxvkgrlm, RmelxzgrlmGzitvgVcxvkgrlm&#10;{&#10;    // Dv xzm'g rmuozgv nvgslwh yvolmtrmt gl en-zmlmbnlfh xozhhvh yvxzfhv&#10;    // gszg prmw lu xozhh xzm'g yv ivuviivw gl yb mznv, svmxv xzm'g yv&#10;    // ulfmw uiln gsv tvmvizgvw ybgvxlwv.&#10;    ru (++mfnRmelxzgrlmh &gt; IvuovxgrlmUzxglib.rmuozgrlmGsivhslow()&#10;            &amp;&amp; !nvgslw.tvgWvxozirmtXozhh().rhSrwwvm()&#10;            &amp;&amp; tvmvizgvw == 9&#10;            &amp;&amp; F.xlnkzivZmwHvgRmg(gsrh, TVMVIZGVW_LUUHVG, 9, 8)) {&#10;        gib {&#10;            NvgslwZxxvhhliRnko zxx = (NvgslwZxxvhhliRnko)&#10;                mvd NvgslwZxxvhhliTvmvizgli().&#10;                    tvmvizgvNvgslw(nvgslw.tvgWvxozirmtXozhh(),&#10;                                   nvgslw.tvgMznv(),&#10;                                   nvgslw.tvgKziznvgviGbkvh(),&#10;                                   nvgslw.tvgIvgfimGbkv(),&#10;                                   nvgslw.tvgVcxvkgrlmGbkvh(),&#10;                                   nvgslw.tvgNlwrurvih());&#10;            kzivmg.hvgWvovtzgv(zxx);&#10;        } xzgxs (Gsildzyov g) {&#10;            // Gsildzyov szkkvmh rm tvmvizgvNvgslw, ivhgliv tvmvizgvw gl 9&#10;            tvmvizgvw = 9;&#10;            gsild g;&#10;        }&#10;    }&#10;&#10;    ivgfim rmelpv9(nvgslw, lyq, zith);&#10;}&#10;```&#10;" />
                <option name="rating" value="UNRATED" />
                <option name="referenceBeans">
                  <list />
                </option>
                <option name="status" value="SUCCESS" />
              </Turn>
            </list>
          </option>
          <option name="updateTime" value="1742818194377" />
        </Conversation>
        <Conversation>
          <option name="createTime" value="1742800959080" />
          <option name="id" value="0195c70836687f928c553aba496b4359" />
          <option name="title" value="新对话 2025年3月24日 15:22:39" />
          <option name="updateTime" value="1742800959080" />
        </Conversation>
        <Conversation>
          <option name="createTime" value="1742774857565" />
          <option name="id" value="0195c579ef5d7fdbbdeeef8879815cb9" />
          <option name="title" value="新对话 2025年3月24日 15:22:37" />
          <option name="updateTime" value="1742774857565" />
        </Conversation>
        <Conversation>
          <option name="createTime" value="1742697803780" />
          <option name="id" value="0195c0e230047e7ca24da052a50d3a4a" />
          <option name="title" value="新对话 2025年3月23日 10:43:23" />
          <option name="updateTime" value="1742697803780" />
        </Conversation>
        <Conversation>
          <option name="createTime" value="1742611417218" />
          <option name="id" value="0195bbbc0882705e9c746a9bf39bcd1c" />
          <option name="title" value="新对话 2025年3月22日 10:43:37" />
          <option name="updateTime" value="1742611417218" />
        </Conversation>
        <Conversation>
          <option name="createTime" value="1742571800663" />
          <option name="id" value="0195b95f88577472b9ad909fd66e9ca6" />
          <option name="title" value="新对话 2025年3月21日 23:43:20" />
          <option name="updateTime" value="1742571800663" />
        </Conversation>
        <Conversation>
          <option name="createTime" value="1742544498041" />
          <option name="id" value="0195b7beed797facbf184190fcaf06a9" />
          <option name="title" value="@workspace /fix 修复报错:&#10;com.fasterxml.jackson.databi" />
          <option name="turns">
            <list>
              <Turn>
                <option name="agent" value="workspace" />
                <option name="answer" value="&lt;gsrmp&gt;&#10;好的，我现在需要解决用户遇到的这个Qzxphlm序列化OlxzoWzgvGrnv的异常。首先，用户提供的错误信息显示，当序列化包含qzez.grnv.OlxzoWzgvGrnv类型的对象时，Qzxphlm无法处理，因为它默认不支持Qzez 1的日期时间类型。错误信息建议添加xln.uzhgvicno.qzxphlm.wzgzgbkv:qzxphlm-wzgzgbkv-qhi689模块来启用支持。&#10;&#10;接下来，我需要确认用户的项目中是否已经添加了这个依赖。如果用户使用的是Nzevm，应该在kln.cno中添加相应的依赖。例如：&#10;&#10;```cno&#10;&lt;wvkvmwvmxb&gt;&#10;    &lt;tilfkRw&gt;xln.uzhgvicno.qzxphlm.wzgzgbkv&lt;/tilfkRw&gt;&#10;    &lt;zigruzxgRw&gt;qzxphlm-wzgzgbkv-qhi689&lt;/zigruzxgRw&gt;&#10;    &lt;evihrlm&gt;7.86.6&lt;/evihrlm&gt;&#10;&lt;/wvkvmwvmxb&gt;&#10;```&#10;&#10;版本号可能需要根据项目现有的Qzxphlm版本来调整，确保兼容性。如果用户使用的是Tizwov，则相应的依赖配置也需要添加。&#10;&#10;然后，用户需要在LyqvxgNzkkvi中注册QHI689模块。查看用户提供的代码片段，他们的QHLMFgro类中的nzkkvi可能没有配置这个模块。用户可能在初始化nzkkvi的时候没有添加QzezGrnvNlwfov。例如：&#10;&#10;```qzez&#10;LyqvxgNzkkvi nzkkvi = mvd LyqvxgNzkkvi();&#10;nzkkvi.ivtrhgviNlwfov(mvd QzezGrnvNlwfov());&#10;```&#10;&#10;或者，如果使用的是更高版本的Qzxphlm，可能需要使用urmwZmwZwwNlwfovh()方法来自动检测并注册所有可用模块：&#10;&#10;```qzez&#10;LyqvxgNzkkvi nzkkvi = mvd LyqvxgNzkkvi();&#10;nzkkvi.urmwZmwIvtrhgviNlwfovh();&#10;```&#10;&#10;这样会自动包括QHI689模块，如果依赖已经正确添加的话。&#10;&#10;另外，还需要检查是否在序列化时禁用了DIRGV_WZGVH_ZH_GRNVHGZNKH选项，否则日期可能会被序列化为数字时间戳而不是可读的字符串。用户可能希望日期以RHL格式显示，所以可以配置：&#10;&#10;```qzez&#10;nzkkvi.wrhzyov(HvirzorazgrlmUvzgfiv.DIRGV_WZGVH_ZH_GRNVHGZNKH);&#10;```&#10;&#10;或者，如果希望自定义日期格式，可以使用@QhlmUlinzg注解在实体类的字段上，例如：&#10;&#10;```qzez&#10;@QhlmUlinzg(kzggvim = &quot;bbbb-NN-ww SS:nn:hh&quot;)&#10;kirezgv OlxzoWzgvGrnv xivzgvGrnv;&#10;```&#10;&#10;这样Qzxphlm会按照指定的格式序列化日期。&#10;&#10;总结解决步骤：首先添加依赖，然后在LyqvxgNzkkvi中注册模块，并根据需要配置日期格式。这样应该能解决RmezorwWvurmrgrlmVcxvkgrlm的问题。&#10;&lt;/gsrmp&gt;&#10;&#10;&#10;这个错误是由于Qzxphlm库无法序列化Qzez 1的OlxzoWzgvGrnv类型导致的。按照以下步骤解决：&#10;&#10;8. 添加QHI689依赖到kln.cno：&#10;```cno&#10;&lt;wvkvmwvmxb&gt;&#10;    &lt;tilfkRw&gt;xln.uzhgvicno.qzxphlm.wzgzgbkv&lt;/tilfkRw&gt;&#10;    &lt;zigruzxgRw&gt;qzxphlm-wzgzgbkv-qhi689&lt;/zigruzxgRw&gt;&#10;    &lt;evihrlm&gt;7.86.6&lt;/evihrlm&gt; &lt;!-- 保持与其他Qzxphlm组件版本一致 --&gt;&#10;&lt;/wvkvmwvmxb&gt;&#10;```&#10;&#10;7. 修改你的QHLMFgro配置：&#10;```qzez&#10;// 在初始化nzkkvi的地方添加以下配置&#10;kirezgv hgzgrx urmzo LyqvxgNzkkvi nzkkvi = mvd LyqvxgNzkkvi()&#10;    .ivtrhgviNlwfov(mvd QzezGrnvNlwfov())&#10;    .wrhzyov(HvirzorazgrlmUvzgfiv.DIRGV_WZGVH_ZH_GRNVHGZNKH);&#10;```&#10;&#10;6. （可选）如果希望自定义日期格式，可以在实体类字段添加注解：&#10;```qzez&#10;@QhlmUlinzg(kzggvim = &quot;bbbb-NN-ww SS:nn:hh&quot;)&#10;kirezgv OlxzoWzgvGrnv xivzgvGrnv;&#10;```&#10;&#10;5. 确保所有涉及OlxzoWzgvGrnv的字段都有正确的tvggvi方法&#10;&#10;4. 清理并重新构建项目，确保依赖正确加载&#10;&#10;这个解决方案同时处理了：&#10;- 添加必要的依赖&#10;- 注册Qzez 1时间模块&#10;- 禁用时间戳格式（使用RHL1398格式）&#10;- 提供自定义日期格式的选项&#10;&#10;如果使用Hkirmt Yllg，可以简化配置为：&#10;```kilkvigrvh&#10;# zkkorxzgrlm.kilkvigrvh&#10;hkirmt.qzxphlm.hvirzorazgrlm.dirgv-wzgvh-zh-grnvhgznkh=uzohv&#10;hkirmt.qzxphlm.wzgv-ulinzg=bbbb-NN-ww SS:nn:hh&#10;```" />
                <option name="chatResource" value="user" />
                <option name="codeReferences">
                  <list>
                    <CodeReferencesBean>
                      <option name="content" value="            zfgsliOrhg.zww(zfgslirgb.tvgZfgslirgb());&#10;        });&#10;        wzgz.kfg(&quot;ilovh&quot;, zfgsliOrhg.tvg(9));&#10;        ru(zfgsliOrhg.tvg(9).vjfzoh(&quot;ILOV_hgfwvmg&quot;)){&#10;            Hgfwvmgh ybFhviRw = hgfwvmghHvierxv.tvgYbFhviRw(fhvi.tvgRw());&#10;            ru(ybFhviRw == mfoo){&#10;                fhvihEl.hvgWvgzro(mfoo);&#10;            } vohv {&#10;                fhvihEl.hvgWvgzro(ybFhviRw);&#10;            }&#10;        }&#10;        ru(zfgsliOrhg.tvg(9).vjfzoh(&quot;ILOV_xlnkzmb&quot;)){&#10;            Xlnkzmrvh ybFhviRw = xlnkzmrvhHvierxv.tvgYbFhviRw(fhvi.tvgRw());&#10;            ru(ybFhviRw == mfoo){&#10;                fhvihEl.hvgWvgzro(mfoo);&#10;            } vohv {&#10;                fhvihEl.hvgWvgzro(ybFhviRw);&#10;            }&#10;        }&#10;        wzgz.kfg(&quot;wzgz&quot;, fhvihEl);&#10;&#10;        WzgzIvhfog&lt;Nzk&lt;Hgirmt, Lyqvxg&gt;&gt; ivhfog = mvd WzgzIvhfog&lt;&gt;(wzgz);&#10;&#10;        IvhklmhvFgro.lfgLuQhlm(ivhklmhv, ivhfog);&#10;    }&#10;&#10;" />
                      <option name="end_line" value="186" />
                      <option name="filename" value="AccountPasswordAuthenticationFilter.java" />
                      <option name="language" value="JAVA" />
                      <option name="range">
                        <Range>
                          <option name="end">
                            <Position>
                              <option name="line" value="186" />
                            </Position>
                          </option>
                          <option name="start">
                            <Position>
                              <option name="line" value="160" />
                            </Position>
                          </option>
                        </Range>
                      </option>
                      <option name="start_line" value="160" />
                      <option name="type" value="editor" />
                      <option name="url" value="file:///C:/Users/LZH/Desktop/job-want/jobWant/src/main/java/com/zoyo/jobwant/security/filter/AccountPasswordAuthenticationFilter.java" />
                    </CodeReferencesBean>
                  </list>
                </option>
                <option name="command" value="fix" />
                <option name="conversationId" value="0195b84672a57582b39baf84e6020aa6" />
                <option name="historyDocumentMap">
                  <map>
                    <entry key="" value="C:\Users\LZH\.jdks\corretto-17.0.13\bin\java.exe -XX:TieredStopAtLevel=1 -Dspring.output.ansi.enabled=always -Dcom.sun.management.jmxremote -Dspring.jmx.enabled=true -Dspring.liveBeansView.mbeanDomain -Dspring.application.admin.enabled=true &quot;-Dmanagement.endpoints.jmx.exposure.include=*&quot; &quot;-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2023.1.2\lib\idea_rt.jar=57911:C:\Program Files\JetBrains\IntelliJ IDEA 2023.1.2\bin&quot; -Dfile.encoding=UTF-8 -classpath C:\Users\LZH\Desktop\job-want\jobWant\target\classes;C:\Users\LZH\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.4.1\spring-boot-starter-jdbc-3.4.1.jar;C:\Users\LZH\.m2\repository\org\springframework\boot\spring-boot-starter\3.4.1\spring-boot-starter-3.4.1.jar;C:\Users\LZH\.m2\repository\org\springframework\boot\spring-boot\3.4.1\spring-boot-3.4.1.jar;C:\Users\LZH\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.4.1\spring-boot-starter-logging-3.4.1.jar;C:\Users\LZH\.m2\repository\ch\qos\logback\logback-classic\1.5.12\logback-classic-1.5.12.jar;C:\Users\LZH\.m2\repository\ch\qos\logback\logback-core\1.5.12\logback-core-1.5.12.jar;C:\Users\LZH\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\LZH\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;C:\Users\LZH\.m2\repository\org\slf4j\jul-to-slf4j\2.0.16\jul-to-slf4j-2.0.16.jar;C:\Users\LZH\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\LZH\.m2\repository\org\yaml\snakeyaml\2.3\snakeyaml-2.3.jar;C:\Users\LZH\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\LZH\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\LZH\.m2\repository\org\springframework\spring-jdbc\6.2.1\spring-jdbc-6.2.1.jar;C:\Users\LZH\.m2\repository\org\springframework\spring-beans\6.2.1\spring-beans-6.2.1.jar;C:\Users\LZH\.m2\repository\org\springframework\spring-tx\6.2.1\spring-tx-6.2.1.jar;C:\Users\LZH\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.4.1\spring-boot-starter-web-3.4.1.jar;C:\Users\LZH\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.4.1\spring-boot-starter-json-3.4.1.jar;C:\Users\LZH\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.18.2\jackson-databind-2.18.2.jar;C:\Users\LZH\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.18.2\jackson-annotations-2.18.2.jar;C:\Users\LZH\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.2\jackson-core-2.18.2.jar;C:\Users\LZH\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.18.2\jackson-datatype-jdk8-2.18.2.jar;C:\Users\LZH\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.18.2\jackson-datatype-jsr310-2.18.2.jar;C:\Users\LZH\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.18.2\jackson-module-parameter-names-2.18.2.jar;C:\Users\LZH\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.4.1\spring-boot-starter-tomcat-3.4.1.jar;C:\Users\LZH\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.34\tomcat-embed-core-10.1.34.jar;C:\Users\LZH\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.34\tomcat-embed-websocket-10.1.34.jar;C:\Users\LZH\.m2\repository\org\springframework\spring-web\6.2.1\spring-web-6.2.1.jar;C:\Users\LZH\.m2\repository\io\micrometer\micrometer-observation\1.14.2\micrometer-observation-1.14.2.jar;C:\Users\LZH\.m2\repository\io\micrometer\micrometer-commons\1.14.2\micrometer-commons-1.14.2.jar;C:\Users\LZH\.m2\repository\org\springframework\spring-webmvc\6.2.1\spring-webmvc-6.2.1.jar;C:\Users\LZH\.m2\repository\org\springframework\spring-context\6.2.1\spring-context-6.2.1.jar;C:\Users\LZH\.m2\repository\org\springframework\spring-expression\6.2.1\spring-expression-6.2.1.jar;C:\Users\LZH\.m2\repository\com\baomidou\mybatis-plus-spring-boot3-starter\3.5.7\mybatis-plus-spring-boot3-starter-3.5.7.jar;C:\Users\LZH\.m2\repository\com\baomidou\mybatis-plus\3.5.7\mybatis-plus-3.5.7.jar;C:\Users\LZH\.m2\repository\com\baomidou\mybatis-plus-core\3.5.7\mybatis-plus-core-3.5.7.jar;C:\Users\LZH\.m2\repository\com\baomidou\mybatis-plus-annotation\3.5.7\mybatis-plus-annotation-3.5.7.jar;C:\Users\LZH\.m2\repository\com\baomidou\mybatis-plus-extension\3.5.7\mybatis-plus-extension-3.5.7.jar;C:\Users\LZH\.m2\repository\org\mybatis\mybatis\3.5.16\mybatis-3.5.16.jar;C:\Users\LZH\.m2\repository\com\github\jsqlparser\jsqlparser\4.9\jsqlparser-4.9.jar;C:\Users\LZH\.m2\repository\org\mybatis\mybatis-spring\3.0.3\mybatis-spring-3.0.3.jar;C:\Users\LZH\.m2\repository\com\baomidou\mybatis-plus-spring-boot-autoconfigure\3.5.7\mybatis-plus-spring-boot-autoconfigure-3.5.7.jar;C:\Users\LZH\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.4.1\spring-boot-autoconfigure-3.4.1.jar;C:\Users\LZH\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.4.1\spring-boot-starter-validation-3.4.1.jar;C:\Users\LZH\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.34\tomcat-embed-el-10.1.34.jar;C:\Users\LZH\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\LZH\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\LZH\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\LZH\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\LZH\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.4.1\spring-boot-starter-security-3.4.1.jar;C:\Users\LZH\.m2\repository\org\springframework\spring-aop\6.2.1\spring-aop-6.2.1.jar;C:\Users\LZH\.m2\repository\org\springframework\security\spring-security-config\6.4.2\spring-security-config-6.4.2.jar;C:\Users\LZH\.m2\repository\org\springframework\security\spring-security-web\6.4.2\spring-security-web-6.4.2.jar;C:\Users\LZH\.m2\repository\org\springframework\security\spring-security-core\6.4.2\spring-security-core-6.4.2.jar;C:\Users\LZH\.m2\repository\org\springframework\security\spring-security-crypto\6.4.2\spring-security-crypto-6.4.2.jar;C:\Users\LZH\.m2\repository\org\springframework\spring-core\6.2.1\spring-core-6.2.1.jar;C:\Users\LZH\.m2\repository\org\springframework\spring-jcl\6.2.1\spring-jcl-6.2.1.jar;C:\Users\LZH\.m2\repository\com\mysql\mysql-connector-j\9.1.0\mysql-connector-j-9.1.0.jar;C:\Users\LZH\.m2\repository\io\jsonwebtoken\jjwt\0.12.5\jjwt-0.12.5.jar;C:\Users\LZH\.m2\repository\io\jsonwebtoken\jjwt-api\0.12.5\jjwt-api-0.12.5.jar;C:\Users\LZH\.m2\repository\io\jsonwebtoken\jjwt-impl\0.12.5\jjwt-impl-0.12.5.jar;C:\Users\LZH\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.12.5\jjwt-jackson-0.12.5.jar;C:\Users\LZH\.m2\repository\org\projectlombok\lombok\1.18.36\lombok-1.18.36.jar;C:\Users\LZH\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\LZH\.m2\repository\org\springframework\boot\spring-boot-starter-mail\3.4.1\spring-boot-starter-mail-3.4.1.jar;C:\Users\LZH\.m2\repository\org\springframework\spring-context-support\6.2.1\spring-context-support-6.2.1.jar;C:\Users\LZH\.m2\repository\org\eclipse\angus\jakarta.mail\2.0.3\jakarta.mail-2.0.3.jar;C:\Users\LZH\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar com.zoyo.jobwant.JobWantApplication&#10;&#10;  .   ____          _            __ _ _&#10; /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \&#10;( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \&#10; \\/  ___)| |_)| | | | | || (_| |  ) ) ) )&#10;  '  |____| .__|_| |_|_| |_\__, | / / / /&#10; =========|_|==============|___/=/_/_/_/&#10;&#10; :: Spring Boot ::                (v3.4.1)&#10;&#10;2025-03-21T18:35:28.278+08:00  INFO 34524 --- [QuestionBank] [           main] com.zoyo.jobwant.JobWantApplication      : Starting JobWantApplication using Java 17.0.13 with PID 34524 (C:\Users\LZH\Desktop\job-want\jobWant\target\classes started by LZH in C:\Users\LZH\Desktop\job-want\jobWant)&#10;2025-03-21T18:35:28.280+08:00  INFO 34524 --- [QuestionBank] [           main] com.zoyo.jobwant.JobWantApplication      : No active profile set, falling back to 1 default profile: &quot;default&quot;&#10;2025-03-21T18:35:29.217+08:00  INFO 34524 --- [QuestionBank] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)&#10;2025-03-21T18:35:29.231+08:00  INFO 34524 --- [QuestionBank] [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]&#10;2025-03-21T18:35:29.231+08:00  INFO 34524 --- [QuestionBank] [           main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.34]&#10;2025-03-21T18:35:29.273+08:00  INFO 34524 --- [QuestionBank] [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext&#10;2025-03-21T18:35:29.273+08:00  INFO 34524 --- [QuestionBank] [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 956 ms&#10; _ _   |_  _ _|_. ___ _ |    _ &#10;| | |\/|_)(_| | |_\  |_)||_|_\ &#10;     /               |         &#10;                        3.5.7 &#10;2025-03-21T18:35:30.028+08:00  INFO 34524 --- [QuestionBank] [           main] eAuthenticationProviderManagerConfigurer : Found 2 AuthenticationProvider beans, with names [accountPasswordAuthenticationProvider, jwtAuthenticationProvider]. Global Authentication Manager will not be configured with AuthenticationProviders. Consider publishing a single AuthenticationProvider bean, or wiring your Providers directly using the DSL.&#10;2025-03-21T18:35:30.481+08:00  INFO 34524 --- [QuestionBank] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'&#10;2025-03-21T18:35:30.487+08:00  INFO 34524 --- [QuestionBank] [           main] com.zoyo.jobwant.JobWantApplication      : Started JobWantApplication in 2.539 seconds (process running for 2.935)&#10;2025-03-21T18:35:35.793+08:00  INFO 34524 --- [QuestionBank] [nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'&#10;2025-03-21T18:35:35.794+08:00  INFO 34524 --- [QuestionBank] [nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'&#10;2025-03-21T18:35:35.794+08:00  INFO 34524 --- [QuestionBank] [nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 0 ms&#10;2025-03-21T18:35:47.671+08:00  INFO 34524 --- [QuestionBank] [nio-8080-exec-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...&#10;2025-03-21T18:35:47.875+08:00  INFO 34524 --- [QuestionBank] [nio-8080-exec-5] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@11fdb189&#10;2025-03-21T18:35:47.877+08:00  INFO 34524 --- [QuestionBank] [nio-8080-exec-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.&#10;com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Java 8 date/time type `java.time.LocalDateTime` not supported by default: add Module &quot;com.fasterxml.jackson.datatype:jackson-datatype-jsr310&quot; to enable handling (through reference chain: com.zoyo.jobwant.controller.result.DataResult[&quot;data&quot;]-&gt;java.util.HashMap[&quot;data&quot;]-&gt;com.zoyo.jobwant.model.vo.UsersVo[&quot;createTime&quot;])&#10;&#9;at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)&#10;&#9;at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1328)&#10;&#9;at com.fasterxml.jackson.databind.ser.impl.UnsupportedTypeSerializer.serialize(UnsupportedTypeSerializer.java:35)&#10;&#9;at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)&#10;&#9;at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)&#10;&#9;at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)&#10;&#9;at com.fasterxml.jackson.databind.ser.std.MapSerializer.serializeFields(MapSerializer.java:808)&#10;&#9;at com.fasterxml.jackson.databind.ser.std.MapSerializer.serializeWithoutTypeInfo(MapSerializer.java:764)&#10;&#9;at com.fasterxml.jackson.databind.ser.std.MapSerializer.serialize(MapSerializer.java:720)&#10;&#9;at com.fasterxml.jackson.databind.ser.std.MapSerializer.serialize(MapSerializer.java:35)&#10;&#9;at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)&#10;&#9;at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:770)&#10;&#9;at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:184)&#10;&#9;at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:502)&#10;&#9;at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:341)&#10;&#9;at com.fasterxml.jackson.databind.ObjectMapper._writeValueAndClose(ObjectMapper.java:4811)&#10;&#9;at com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:4052)&#10;&#9;at com.zoyo.jobwant.util.JSONUtil.toJSONString(JSONUtil.java:16)&#10;&#9;at com.zoyo.jobwant.util.ResponseUtil.outOfJson(ResponseUtil.java:31)&#10;&#9;at com.zoyo.jobwant.security.filter.AccountPasswordAuthenticationFilter.successfulAuthentication(AccountPasswordAuthenticationFilter.java:184)&#10;&#9;at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:241)&#10;&#9;at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)&#10;&#9;at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)&#10;&#9;at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)&#10;&#9;at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)&#10;&#9;at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)&#10;&#9;at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)&#10;&#9;at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)&#10;&#9;at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)&#10;&#9;at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)&#10;&#9;at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)&#10;&#9;at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)&#10;&#9;at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)&#10;&#9;at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)&#10;&#9;at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)&#10;&#9;at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)&#10;&#9;at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)&#10;&#9;at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)&#10;&#9;at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)&#10;&#9;at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)&#10;&#9;at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)&#10;&#9;at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)&#10;&#9;at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)&#10;&#9;at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)&#10;&#9;at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)&#10;&#9;at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)&#10;&#9;at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)&#10;&#9;at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)&#10;&#9;at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)&#10;&#9;at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)&#10;&#9;at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)&#10;&#9;at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)&#10;&#9;at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)&#10;&#9;at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)&#10;&#9;at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)&#10;&#9;at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)&#10;&#9;at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)&#10;&#9;at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)&#10;&#9;at java.base/java.lang.Thread.run(Thread.java:840)&#10;" />
                  </map>
                </option>
                <option name="messageId" value="0195b84672a571c08330bb469227527e" />
                <option name="question" value="修复报错:&#10;xln.uzhgvicno.qzxphlm.wzgzyrmw.vcx.RmezorwWvurmrgrlmVcxvkgrlm: Qzez 1 wzgv/grnv gbkv `qzez.grnv.OlxzoWzgvGrnv` mlg hfkkligvw yb wvuzfog: zww Nlwfov &quot;xln.uzhgvicno.qzxphlm.wzgzgbkv:qzxphlm-wzgzgbkv-qhi689&quot; gl vmzyov szmwormt (gsilfts ivuvivmxv xszrm: xln.albl.qlydzmg.xlmgiloovi.ivhfog.WzgzIvhfog[&quot;wzgz&quot;]-&gt;qzez.fgro.SzhsNzk[&quot;wzgz&quot;]-&gt;xln.albl.qlydzmg.nlwvo.el.FhvihEl[&quot;xivzgvGrnv&quot;])&#10;&#9;zg xln.uzhgvicno.qzxphlm.wzgzyrmw.vcx.RmezorwWvurmrgrlmVcxvkgrlm.uiln(RmezorwWvurmrgrlmVcxvkgrlm.qzez:22)&#10;&#9;zg xln.uzhgvicno.qzxphlm.wzgzyrmw.HvirzoraviKilerwvi.ivkligYzwWvurmrgrlm(HvirzoraviKilerwvi.qzez:8671)&#10;&#9;zg xln.uzhgvicno.qzxphlm.wzgzyrmw.hvi.rnko.FmhfkkligvwGbkvHvirzoravi.hvirzorav(FmhfkkligvwGbkvHvirzoravi.qzez:64)&#10;&#9;zg xln.uzhgvicno.qzxphlm.wzgzyrmw.hvi.YvzmKilkvigbDirgvi.hvirzoravZhUrvow(YvzmKilkvigbDirgvi.qzez:267)&#10;&#9;zg xln.uzhgvicno.qzxphlm.wzgzyrmw.hvi.hgw.YvzmHvirzoraviYzhv.hvirzoravUrvowh(YvzmHvirzoraviYzhv.qzez:229)&#10;&#9;zg xln.uzhgvicno.qzxphlm.wzgzyrmw.hvi.YvzmHvirzoravi.hvirzorav(YvzmHvirzoravi.qzez:815)&#10;&#9;zg xln.uzhgvicno.qzxphlm.wzgzyrmw.hvi.hgw.NzkHvirzoravi.hvirzoravUrvowh(NzkHvirzoravi.qzez:191)&#10;&#9;zg xln.uzhgvicno.qzxphlm.wzgzyrmw.hvi.hgw.NzkHvirzoravi.hvirzoravDrgslfgGbkvRmul(NzkHvirzoravi.qzez:235)&#10;&#9;zg xln.uzhgvicno.qzxphlm.wzgzyrmw.hvi.hgw.NzkHvirzoravi.hvirzorav(NzkHvirzoravi.qzez:279)&#10;&#9;zg xln.uzhgvicno.qzxphlm.wzgzyrmw.hvi.hgw.NzkHvirzoravi.hvirzorav(NzkHvirzoravi.qzez:64)&#10;&#9;zg xln.uzhgvicno.qzxphlm.wzgzyrmw.hvi.YvzmKilkvigbDirgvi.hvirzoravZhUrvow(YvzmKilkvigbDirgvi.qzez:267)&#10;&#9;zg xln.uzhgvicno.qzxphlm.wzgzyrmw.hvi.hgw.YvzmHvirzoraviYzhv.hvirzoravUrvowh(YvzmHvirzoraviYzhv.qzez:229)&#10;&#9;zg xln.uzhgvicno.qzxphlm.wzgzyrmw.hvi.YvzmHvirzoravi.hvirzorav(YvzmHvirzoravi.qzez:815)&#10;&#9;zg xln.uzhgvicno.qzxphlm.wzgzyrmw.hvi.WvuzfogHvirzoraviKilerwvi._hvirzorav(WvuzfogHvirzoraviKilerwvi.qzez:497)&#10;&#9;zg xln.uzhgvicno.qzxphlm.wzgzyrmw.hvi.WvuzfogHvirzoraviKilerwvi.hvirzoravEzofv(WvuzfogHvirzoraviKilerwvi.qzez:658)&#10;&#9;zg xln.uzhgvicno.qzxphlm.wzgzyrmw.LyqvxgNzkkvi._dirgvEzofvZmwXolhv(LyqvxgNzkkvi.qzez:5188)&#10;&#9;zg xln.uzhgvicno.qzxphlm.wzgzyrmw.LyqvxgNzkkvi.dirgvEzofvZhHgirmt(LyqvxgNzkkvi.qzez:5947)&#10;&#9;zg xln.albl.qlydzmg.fgro.QHLMFgro.glQHLMHgirmt(QHLMFgro.qzez:83)&#10;&#9;zg xln.albl.qlydzmg.fgro.IvhklmhvFgro.lfgLuQhlm(IvhklmhvFgro.qzez:68)&#10;&#9;zg xln.albl.qlydzmg.hvxfirgb.urogvi.ZxxlfmgKzhhdliwZfgsvmgrxzgrlmUrogvi.hfxxvhhufoZfgsvmgrxzgrlm(ZxxlfmgKzhhdliwZfgsvmgrxzgrlmUrogvi.qzez:815)&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.zfgsvmgrxzgrlm.ZyhgizxgZfgsvmgrxzgrlmKilxvhhrmtUrogvi.wlUrogvi(ZyhgizxgZfgsvmgrxzgrlmKilxvhhrmtUrogvi.qzez:758)&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.zfgsvmgrxzgrlm.ZyhgizxgZfgsvmgrxzgrlmKilxvhhrmtUrogvi.wlUrogvi(ZyhgizxgZfgsvmgrxzgrlmKilxvhhrmtUrogvi.qzez:778)&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb$ErigfzoUrogviXszrm.wlUrogvi(UrogviXszrmKilcb.qzez:625)&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.zfgsvmgrxzgrlm.oltlfg.OltlfgUrogvi.wlUrogvi(OltlfgUrogvi.qzez:892)&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.zfgsvmgrxzgrlm.oltlfg.OltlfgUrogvi.wlUrogvi(OltlfgUrogvi.qzez:06)&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb$ErigfzoUrogviXszrm.wlUrogvi(UrogviXszrmKilcb.qzez:625)&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.XlihUrogvi.wlUrogviRmgvimzo(XlihUrogvi.qzez:08)&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.LmxvKviIvjfvhgUrogvi.wlUrogvi(LmxvKviIvjfvhgUrogvi.qzez:883)&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb$ErigfzoUrogviXszrm.wlUrogvi(UrogviXszrmKilcb.qzez:625)&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.svzwvi.SvzwviDirgviUrogvi.wlSvzwvihZugvi(SvzwviDirgviUrogvi.qzez:09)&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.svzwvi.SvzwviDirgviUrogvi.wlUrogviRmgvimzo(SvzwviDirgviUrogvi.qzez:24)&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.LmxvKviIvjfvhgUrogvi.wlUrogvi(LmxvKviIvjfvhgUrogvi.qzez:883)&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb$ErigfzoUrogviXszrm.wlUrogvi(UrogviXszrmKilcb.qzez:625)&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.xlmgvcg.HvxfirgbXlmgvcgSlowviUrogvi.wlUrogvi(HvxfirgbXlmgvcgSlowviUrogvi.qzez:17)&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.xlmgvcg.HvxfirgbXlmgvcgSlowviUrogvi.wlUrogvi(HvxfirgbXlmgvcgSlowviUrogvi.qzez:30)&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb$ErigfzoUrogviXszrm.wlUrogvi(UrogviXszrmKilcb.qzez:625)&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.xlmgvcg.ivjfvhg.zhbmx.DvyZhbmxNzmztviRmgvtizgrlmUrogvi.wlUrogviRmgvimzo(DvyZhbmxNzmztviRmgvtizgrlmUrogvi.qzez:37)&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.LmxvKviIvjfvhgUrogvi.wlUrogvi(LmxvKviIvjfvhgUrogvi.qzez:883)&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb$ErigfzoUrogviXszrm.wlUrogvi(UrogviXszrmKilcb.qzez:625)&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.hvhhrlm.WrhzyovVmxlwvFioUrogvi.wlUrogviRmgvimzo(WrhzyovVmxlwvFioUrogvi.qzez:57)&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.LmxvKviIvjfvhgUrogvi.wlUrogvi(LmxvKviIvjfvhgUrogvi.qzez:883)&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb$ErigfzoUrogviXszrm.wlUrogvi(UrogviXszrmKilcb.qzez:625)&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb.wlUrogviRmgvimzo(UrogviXszrmKilcb.qzez:766)&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb.wlUrogvi(UrogviXszrmKilcb.qzez:808)&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.XlnklhrgvUrogvi$ErigfzoUrogviXszrm.wlUrogvi(XlnklhrgvUrogvi.qzez:886)&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.hvieovg.szmwovi.SzmwoviNzkkrmtRmgilhkvxgli.oznywz$xivzgvXzxsvUrogvi$6(SzmwoviNzkkrmtRmgilhkvxgli.qzez:756)&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.XlnklhrgvUrogvi$ErigfzoUrogviXszrm.wlUrogvi(XlnklhrgvUrogvi.qzez:886)&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.XlnklhrgvUrogvi.wlUrogvi(XlnklhrgvUrogvi.qzez:25)&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.xlmurt.zmmlgzgrlm.dvy.xlmurtfizgrlm.DvyNexHvxfirgbXlmurtfizgrlm$XlnklhrgvUrogviXszrmKilcb.wlUrogvi(DvyNexHvxfirgbXlmurtfizgrlm.qzez:761)&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.WvovtzgrmtUrogviKilcb.rmelpvWvovtzgv(WvovtzgrmtUrogviKilcb.qzez:637)&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.WvovtzgrmtUrogviKilcb.wlUrogvi(WvovtzgrmtUrogviKilcb.qzez:721)&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.ZkkorxzgrlmUrogviXszrm.rmgvimzoWlUrogvi(ZkkorxzgrlmUrogviXszrm.qzez:835)&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.ZkkorxzgrlmUrogviXszrm.wlUrogvi(ZkkorxzgrlmUrogviXszrm.qzez:859)&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.IvjfvhgXlmgvcgUrogvi.wlUrogviRmgvimzo(IvjfvhgXlmgvcgUrogvi.qzez:899)&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.LmxvKviIvjfvhgUrogvi.wlUrogvi(LmxvKviIvjfvhgUrogvi.qzez:883)&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.ZkkorxzgrlmUrogviXszrm.rmgvimzoWlUrogvi(ZkkorxzgrlmUrogviXszrm.qzez:835)&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.ZkkorxzgrlmUrogviXszrm.wlUrogvi(ZkkorxzgrlmUrogviXszrm.qzez:859)&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.UlinXlmgvmgUrogvi.wlUrogviRmgvimzo(UlinXlmgvmgUrogvi.qzez:06)&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.LmxvKviIvjfvhgUrogvi.wlUrogvi(LmxvKviIvjfvhgUrogvi.qzez:883)&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.ZkkorxzgrlmUrogviXszrm.rmgvimzoWlUrogvi(ZkkorxzgrlmUrogviXszrm.qzez:835)&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.ZkkorxzgrlmUrogviXszrm.wlUrogvi(ZkkorxzgrlmUrogviXszrm.qzez:859)&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.XszizxgviVmxlwrmtUrogvi.wlUrogviRmgvimzo(XszizxgviVmxlwrmtUrogvi.qzez:798)&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.LmxvKviIvjfvhgUrogvi.wlUrogvi(LmxvKviIvjfvhgUrogvi.qzez:883)&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.ZkkorxzgrlmUrogviXszrm.rmgvimzoWlUrogvi(ZkkorxzgrlmUrogviXszrm.qzez:835)&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.ZkkorxzgrlmUrogviXszrm.wlUrogvi(ZkkorxzgrlmUrogviXszrm.qzez:859)&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.HgzmwziwDizkkviEzoev.rmelpv(HgzmwziwDizkkviEzoev.qzez:832)&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.HgzmwziwXlmgvcgEzoev.rmelpv(HgzmwziwXlmgvcgEzoev.qzez:09)&#10;&#9;zg lit.zkzxsv.xzgzormz.zfgsvmgrxzgli.ZfgsvmgrxzgliYzhv.rmelpv(ZfgsvmgrxzgliYzhv.qzez:516)&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.HgzmwziwSlhgEzoev.rmelpv(HgzmwziwSlhgEzoev.qzez:884)&#10;&#9;zg lit.zkzxsv.xzgzormz.ezoevh.ViiliIvkligEzoev.rmelpv(ViiliIvkligEzoev.qzez:06)&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.HgzmwziwVmtrmvEzoev.rmelpv(HgzmwziwVmtrmvEzoev.qzez:25)&#10;&#9;zg lit.zkzxsv.xzgzormz.xlmmvxgli.XlblgvZwzkgvi.hvierxv(XlblgvZwzkgvi.qzez:655)&#10;&#9;zg lit.zkzxsv.xlblgv.sggk88.Sggk88Kilxvhhli.hvierxv(Sggk88Kilxvhhli.qzez:602)&#10;&#9;zg lit.zkzxsv.xlblgv.ZyhgizxgKilxvhhliOrtsg.kilxvhh(ZyhgizxgKilxvhhliOrtsg.qzez:36)&#10;&#9;zg lit.zkzxsv.xlblgv.ZyhgizxgKilglxlo$XlmmvxgrlmSzmwovi.kilxvhh(ZyhgizxgKilglxlo.qzez:094)&#10;&#9;zg lit.zkzxsv.glnxzg.fgro.mvg.MrlVmwklrmg$HlxpvgKilxvhhli.wlIfm(MrlVmwklrmg.qzez:8258)&#10;&#9;zg lit.zkzxsv.glnxzg.fgro.mvg.HlxpvgKilxvhhliYzhv.ifm(HlxpvgKilxvhhliYzhv.qzez:47)&#10;&#9;zg lit.zkzxsv.glnxzg.fgro.gsivzwh.GsivzwKlloVcvxfgli.ifmDlipvi(GsivzwKlloVcvxfgli.qzez:8809)&#10;&#9;zg lit.zkzxsv.glnxzg.fgro.gsivzwh.GsivzwKlloVcvxfgli$Dlipvi.ifm(GsivzwKlloVcvxfgli.qzez:340)&#10;&#9;zg lit.zkzxsv.glnxzg.fgro.gsivzwh.GzhpGsivzw$DizkkrmtIfmmzyov.ifm(GzhpGsivzw.qzez:36)&#10;&#9;zg qzez.yzhv/qzez.ozmt.Gsivzw.ifm(Gsivzw.qzez:159)&#10;代码上下文:&#10;```qzez&#10;kfyorx hgzgrx Hgirmt glQHLMHgirmt(Lyqvxg l) {&#10;    gib {&#10;        ivgfim nzkkvi.dirgvEzofvZhHgirmt(l);&#10;    } xzgxs (QhlmKilxvhhrmtVcxvkgrlm v) {&#10;        v.kirmgHgzxpGizxv();&#10;    }&#10;    ivgfim mfoo;&#10;}&#10;```&#10;" />
                <option name="rating" value="UNRATED" />
                <option name="referenceBeans">
                  <list />
                </option>
                <option name="status" value="SUCCESS" />
              </Turn>
              <Turn>
                <option name="agent" value="workspace" />
                <option name="answer" value="&lt;gsrmp&gt;&#10;好的，用户遇到了一个异常：“xln.albl.qlydzmg.vcxvkgrlm.EzorwzgvwVcxvkgrlm: 用户邮箱不存在”。根据提供的代码上下文，问题出现在FhvihHvierxvRnko的urmwFhvi方法中。当查询数据库时，没有找到对应的用户记录，就会抛出这个异常。&#10;&#10;首先，我需要分析可能的原因。用户提到在ZxxlfmgKzhhdliwZfgsvmgrxzgrlmUrogvi.qzez中的zggvnkgZfgsvmgrxzgrlm方法调用了urmwFhvi，导致了这个异常。可能的情况包括：&#10;&#10;8. 用户输入的邮箱地址不正确，或者数据库中确实不存在该邮箱对应的用户。&#10;7. 用户类型（FhviGbkv）参数传递错误，导致查询条件不匹配。&#10;6. 数据库查询条件设置不正确，比如字段名不匹配或查询逻辑有问题。&#10;5. 数据持久层的问题，比如NbYzgrh Kofh的OznywzJfvibDizkkvi是否正确构建。&#10;&#10;接下来，我需要检查urmwFhvi方法的实现。代码中使用OznywzJfvibDizkkvi，添加了两个条件：vnzro和FhviGbkv必须同时匹配。如果这两个条件中的任何一个不满足，就会返回mfoo，进而抛出邮箱不存在的异常。&#10;&#10;可能的解决步骤包括：&#10;&#10;8. 确保传入的vnzro和FhviGbkv参数是正确的。比如，在调用urmwFhvi时，传递的FhviGbkv参数是否正确，是否与数据库中的记录一致。&#10;7. 检查数据库中是否存在符合这两个条件的用户记录。可以通过日志或数据库客户端工具手动执行查询，验证是否存在对应的数据。&#10;6. 检查字段映射是否正确。例如，Fhvih实体类的tvgVnzro和tvgFhviGbkv方法对应的数据库字段是否正确，是否存在拼写错误或大小写问题。&#10;5. 考虑是否需要同时匹配邮箱和用户类型。可能用户输入的邮箱存在，但用户类型不匹配，导致查询不到结果。这时候是否需要调整错误提示，或者是否应该分开校验邮箱和用户类型的存在性。&#10;4. 在抛出异常之前添加日志，记录具体的查询参数，帮助定位问题。例如，在抛出异常前打印vnzro和FhviGbkv的值，确认传入的参数是否符合预期。&#10;3. 检查密码编码器是否正确配置，虽然当前异常是邮箱不存在，但也要确保其他部分的逻辑不会间接影响查询条件。&#10;&#10;另外，用户提供的代码中，当fhvih == mfoo时抛出邮箱不存在的异常，这可能存在误导。例如，如果用户输入的邮箱存在，但FhviGbkv不匹配，此时也会导致fhvih为mfoo，但实际错误是用户类型不正确而非邮箱不存在。这时候可能需要调整异常提示，或者分步骤验证邮箱是否存在，再验证用户类型是否正确，以提供更准确的错误信息。&#10;&#10;可能的解决方案是，先检查邮箱是否存在，无论用户类型如何，如果邮箱不存在再抛出异常；如果邮箱存在但用户类型不匹配，则抛出另一个异常，如“用户类型不匹配”。这样可以更精准地定位问题所在。&#10;&#10;例如，修改urmwFhvi方法：&#10;&#10;先查询邮箱是否存在，不管用户类型：&#10;Fhvih fhviYbVnzro = gsrh.tvgLmv(mvd OznywzJfvibDizkkvi&lt;Fhvih&gt;().vj(Fhvih::tvgVnzro, vnzro));&#10;ru (fhviYbVnzro == mfoo) {&#10;    gsild mvd EzorwzgvwVcxvkgrlm(ViiliVmfn.VNZRO_MLG_VCRHG);&#10;}&#10;&#10;然后检查用户类型是否正确：&#10;ru (!fhviYbVnzro.tvgFhviGbkv().vjfzoh(FhviGbkv)) {&#10;    gsild mvd EzorwzgvwVcxvkgrlm(ViiliVmfn.FHVI_GBKV_NRHNZGXS);&#10;}&#10;&#10;接着再验证密码等步骤。这样用户可以得到更明确的错误提示，而不是笼统的邮箱不存在。&#10;&#10;但用户现有的代码是将两个条件一起查询，导致无法区分是邮箱不存在还是用户类型错误。因此，可能需要调整查询逻辑，分步验证。&#10;&#10;不过，这取决于业务需求是否需要同时匹配邮箱和用户类型。如果用户的邮箱可以存在于多个用户类型中，则需要同时匹配；否则可能不需要。如果业务允许同一邮箱在不同用户类型中存在，那么当前查询方式是合理的，否则需要调整。&#10;&#10;总结可能的解决方案：&#10;&#10;8. 检查传入的vnzro和FhviGbkv是否正确。&#10;7. 检查数据库是否存在对应的记录。&#10;6. 调整查询逻辑，分步验证邮箱和用户类型，以提供更准确的错误信息。&#10;5. 在代码中添加日志输出，帮助调试参数是否正确。&#10;4. 确保数据库字段与实体类映射正确。&#10;&#10;用户需要根据实际情况选择相应的解决步骤，比如先确认传入的参数是否正确，再检查数据库记录是否存在，然后调整异常处理逻辑。&#10;&lt;/gsrmp&gt;&#10;&#10;&#10;要解决“用户邮箱不存在”的异常，请按照以下步骤操作：&#10;&#10;### 错误原因分析&#10;异常发生在`FhvihHvierxvRnko.urmwFhvi()`方法中，当根据邮箱和用户类型查询用户时未找到记录。可能的原因：&#10;8. 前端传递的邮箱或用户类型不正确&#10;7. 数据库确实不存在该邮箱+用户类型的组合记录&#10;6. 实体类字段与数据库列名映射不正确&#10;&#10;### 解决方案&#10;&#10;#### 步骤8：检查参数传递&#10;确认`urmwFhvi()`方法调用时传入的`vnzro`和`FhviGbkv`参数是否正确。在`ZxxlfmgKzhhdliwZfgsvmgrxzgrlmUrogvi`的认证方法中检查参数来源：&#10;```qzez&#10;// 示例：检查认证请求中的参数&#10;Hgirmt vnzro = ivjfvhg.tvgKziznvgvi(&quot;vnzro&quot;);&#10;Hgirmt fhviGbkv = ivjfvhg.tvgKziznvgvi(&quot;fhviGbkv&quot;);&#10;// 确保这两个参数被正确获取并传递到urmwFhvi方法&#10;```&#10;&#10;#### 步骤7：验证数据库记录&#10;使用数据库客户端执行查询，确认存在对应记录：&#10;```hjo&#10;HVOVXG * UILN fhvih &#10;DSVIV vnzro = '用户提供的邮箱' &#10;ZMW fhvi_gbkv = '传递的用户类型';&#10;```&#10;若无结果，说明数据不存在，需检查注册逻辑或测试数据。&#10;&#10;#### 步骤6：分步校验（增强错误提示）&#10;修改`urmwFhvi()`方法，分步验证邮箱和用户类型：&#10;```qzez&#10;@Leviirwv&#10;kfyorx Fhvih urmwFhvi(Hgirmt vnzro, Hgirmt kzhhdliw, Hgirmt fhviGbkv) {&#10;    // 8. 先校验邮箱是否存在&#10;    OznywzJfvibDizkkvi&lt;Fhvih&gt; vnzroJfvib = mvd OznywzJfvibDizkkvi&lt;&gt;();&#10;    vnzroJfvib.vj(Fhvih::tvgVnzro, vnzro);&#10;    Fhvih vnzroFhvi = gsrh.tvgLmv(vnzroJfvib);&#10;    &#10;    ru (vnzroFhvi == mfoo) {&#10;        gsild mvd EzorwzgvwVcxvkgrlm(ViiliVmfn.VNZRO_MLG_VCRHG);&#10;    }&#10;&#10;    // 7. 校验用户类型是否匹配&#10;    ru (!fhviGbkv.vjfzoh(vnzroFhvi.tvgFhviGbkv())) {&#10;        gsild mvd EzorwzgvwVcxvkgrlm(ViiliVmfn.FHVI_GBKV_NRHNZGXS); // 需要定义该枚举&#10;    }&#10;&#10;    // 6. 校验密码&#10;    ru (!kzhhdliwVmxlwvi.nzgxsvh(kzhhdliw, vnzroFhvi.tvgKzhhdliw())) {&#10;        gsild mvd EzorwzgvwVcxvkgrlm(ViiliVmfn.KZHHDLIW_VIILI);&#10;    }&#10;&#10;    ivgfim vnzroFhvi;&#10;}&#10;```&#10;&#10;#### 步骤5：添加调试日志&#10;在关键位置添加日志输出，方便追踪参数：&#10;```qzez&#10;@Leviirwv&#10;kfyorx Fhvih urmwFhvi(Hgirmt vnzro, Hgirmt kzhhdliw, Hgirmt fhviGbkv) {&#10;    olt.wvyft(&quot;尝试登录: vnzro={}, fhviGbkv={}&quot;, vnzro, fhviGbkv); // 添加日志&#10;    &#10;    OznywzJfvibDizkkvi&lt;Fhvih&gt; jfvibDizkkvi = mvd OznywzJfvibDizkkvi&lt;&gt;();&#10;    jfvibDizkkvi.vj(Fhvih::tvgVnzro, vnzro)&#10;                .vj(Fhvih::tvgFhviGbkv, fhviGbkv);&#10;    Fhvih fhvih = gsrh.tvgLmv(jfvibDizkkvi);&#10;    &#10;    ru (fhvih == mfoo) {&#10;        olt.dzim(&quot;用户不存在 - vnzro: {}, fhviGbkv: {}&quot;, vnzro, fhviGbkv); // 记录警告日志&#10;        gsild mvd EzorwzgvwVcxvkgrlm(ViiliVmfn.VNZRO_MLG_VCRHG);&#10;    }&#10;    ...&#10;}&#10;```&#10;&#10;#### 步骤4：检查字段映射&#10;确认`Fhvih`实体类中`fhviGbkv`字段的映射正确：&#10;```qzez&#10;@GzyovUrvow(&quot;fhvi_gbkv&quot;) // 确保与数据库列名一致&#10;kirezgv Hgirmt fhviGbkv;&#10;```&#10;&#10;### 补充建议&#10;- 如果业务允许同一邮箱跨不同类型用户存在，需要调整注册逻辑确保唯一性&#10;- 在前端表单中明确用户类型的选择，避免传递错误值&#10;- 在抛出异常时提供更精确的错误信息（如区分邮箱不存在和用户类型不匹配）&#10;&#10;通过以上步骤，可以准确定位问题根源并修复“用户邮箱不存在”异常。" />
                <option name="chatResource" value="user" />
                <option name="codeReferences">
                  <list>
                    <CodeReferencesBean>
                      <option name="content" value="        ivgfim gsrh.tvgZfgsvmgrxzgrlmNzmztvi().zfgsvmgrxzgv(zfgsIvjfvhg);&#10;    }&#10;&#10;    @Leviirwv&#10;    kilgvxgvw elrw hfxxvhhufoZfgsvmgrxzgrlm(SggkHvieovgIvjfvhg ivjfvhg, SggkHvieovgIvhklmhv ivhklmhv, UrogviXszrm xszrm, Zfgsvmgrxzgrlm zfgsIvhfog) {&#10;        ru (gsrh.vevmgKfyorhsvi != mfoo) {&#10;            gsrh.vevmgKfyorhsvi.kfyorhsVevmg(mvd RmgvizxgrevZfgsvmgrxzgrlmHfxxvhhVevmg(zfgsIvhfog, gsrh.tvgXozhh()));&#10;        }&#10;        Fhvi fhvi = (Fhvi) zfgsIvhfog.tvgKirmxrkzo();&#10;        Hgirmt glpvm = GlpvmFgro.xivzgvGlpvm(fhvi.tvgRw(), fhvi.tvgMznv(), fhvi.tvgFhviGbkv());&#10;        Fhvih fhvih = fhvihHvierxv.tvgYbRw(fhvi.tvgRw());&#10;        fhvih.hvgKzhhdliw(mfoo);&#10;        FhvihEl fhvihEl = mvd FhvihEl();&#10;        YvzmFgroh.xlkbKilkvigrvh(fhvih, fhvihEl);&#10;        Nzk&lt;Hgirmt, Lyqvxg&gt; wzgz = mvd SzhsNzk&lt;&gt;();&#10;        // 这里可以补充更多信息&#10;        wzgz.kfg(&quot;glpvm&quot;, glpvm);&#10;        Xloovxgrlm&lt;? vcgvmwh TizmgvwZfgslirgb&gt; zfgslirgrvh = fhvi.tvgZfgslirgrvh();&#10;        Orhg&lt;Hgirmt&gt; zfgsliOrhg= mvd ZiizbOrhg&lt;&gt;();&#10;        zfgslirgrvh.uliVzxs(zfgslirgb -&gt; {&#10;            zfgsliOrhg.zww(zfgslirgb.tvgZfgslirgb());&#10;        });&#10;        wzgz.kfg(&quot;ilovh&quot;, zfgsliOrhg.tvg(9));&#10;        ru(zfgsliOrhg.tvg(9).vjfzoh(&quot;ILOV_hgfwvmg&quot;)){&#10;            Hgfwvmgh ybFhviRw = hgfwvmghHvierxv.tvgYbFhviRw(fhvi.tvgRw());&#10;" />
                      <option name="end_line" value="166" />
                      <option name="filename" value="AccountPasswordAuthenticationFilter.java" />
                      <option name="language" value="JAVA" />
                      <option name="range">
                        <Range>
                          <option name="end">
                            <Position>
                              <option name="line" value="166" />
                            </Position>
                          </option>
                          <option name="start">
                            <Position>
                              <option name="line" value="141" />
                            </Position>
                          </option>
                        </Range>
                      </option>
                      <option name="start_line" value="141" />
                      <option name="type" value="editor" />
                      <option name="url" value="file:///C:/Users/LZH/Desktop/job-want/jobWant/src/main/java/com/zoyo/jobwant/security/filter/AccountPasswordAuthenticationFilter.java" />
                    </CodeReferencesBean>
                  </list>
                </option>
                <option name="command" value="fix" />
                <option name="conversationId" value="0195b94e4d677891bff87311ddfa7f51" />
                <option name="historyDocumentMap">
                  <map>
                    <entry key="" value="C:\Users\LZH\.jdks\corretto-17.0.13\bin\java.exe -XX:TieredStopAtLevel=1 -Dspring.output.ansi.enabled=always -Dcom.sun.management.jmxremote -Dspring.jmx.enabled=true -Dspring.liveBeansView.mbeanDomain -Dspring.application.admin.enabled=true &quot;-Dmanagement.endpoints.jmx.exposure.include=*&quot; &quot;-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2023.1.2\lib\idea_rt.jar=64545:C:\Program Files\JetBrains\IntelliJ IDEA 2023.1.2\bin&quot; -Dfile.encoding=UTF-8 -classpath C:\Users\LZH\Desktop\job-want\jobWant\target\classes;C:\Users\LZH\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.3\jackson-datatype-jsr310-2.13.3.jar;C:\Users\LZH\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.18.2\jackson-annotations-2.18.2.jar;C:\Users\LZH\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.2\jackson-core-2.18.2.jar;C:\Users\LZH\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.18.2\jackson-databind-2.18.2.jar;C:\Users\LZH\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.4.1\spring-boot-starter-jdbc-3.4.1.jar;C:\Users\LZH\.m2\repository\org\springframework\boot\spring-boot-starter\3.4.1\spring-boot-starter-3.4.1.jar;C:\Users\LZH\.m2\repository\org\springframework\boot\spring-boot\3.4.1\spring-boot-3.4.1.jar;C:\Users\LZH\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.4.1\spring-boot-starter-logging-3.4.1.jar;C:\Users\LZH\.m2\repository\ch\qos\logback\logback-classic\1.5.12\logback-classic-1.5.12.jar;C:\Users\LZH\.m2\repository\ch\qos\logback\logback-core\1.5.12\logback-core-1.5.12.jar;C:\Users\LZH\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\LZH\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;C:\Users\LZH\.m2\repository\org\slf4j\jul-to-slf4j\2.0.16\jul-to-slf4j-2.0.16.jar;C:\Users\LZH\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\LZH\.m2\repository\org\yaml\snakeyaml\2.3\snakeyaml-2.3.jar;C:\Users\LZH\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\LZH\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\LZH\.m2\repository\org\springframework\spring-jdbc\6.2.1\spring-jdbc-6.2.1.jar;C:\Users\LZH\.m2\repository\org\springframework\spring-beans\6.2.1\spring-beans-6.2.1.jar;C:\Users\LZH\.m2\repository\org\springframework\spring-tx\6.2.1\spring-tx-6.2.1.jar;C:\Users\LZH\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.4.1\spring-boot-starter-web-3.4.1.jar;C:\Users\LZH\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.4.1\spring-boot-starter-json-3.4.1.jar;C:\Users\LZH\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.18.2\jackson-datatype-jdk8-2.18.2.jar;C:\Users\LZH\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.18.2\jackson-module-parameter-names-2.18.2.jar;C:\Users\LZH\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.4.1\spring-boot-starter-tomcat-3.4.1.jar;C:\Users\LZH\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.34\tomcat-embed-core-10.1.34.jar;C:\Users\LZH\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.34\tomcat-embed-websocket-10.1.34.jar;C:\Users\LZH\.m2\repository\org\springframework\spring-web\6.2.1\spring-web-6.2.1.jar;C:\Users\LZH\.m2\repository\io\micrometer\micrometer-observation\1.14.2\micrometer-observation-1.14.2.jar;C:\Users\LZH\.m2\repository\io\micrometer\micrometer-commons\1.14.2\micrometer-commons-1.14.2.jar;C:\Users\LZH\.m2\repository\org\springframework\spring-webmvc\6.2.1\spring-webmvc-6.2.1.jar;C:\Users\LZH\.m2\repository\org\springframework\spring-context\6.2.1\spring-context-6.2.1.jar;C:\Users\LZH\.m2\repository\org\springframework\spring-expression\6.2.1\spring-expression-6.2.1.jar;C:\Users\LZH\.m2\repository\com\baomidou\mybatis-plus-spring-boot3-starter\3.5.7\mybatis-plus-spring-boot3-starter-3.5.7.jar;C:\Users\LZH\.m2\repository\com\baomidou\mybatis-plus\3.5.7\mybatis-plus-3.5.7.jar;C:\Users\LZH\.m2\repository\com\baomidou\mybatis-plus-core\3.5.7\mybatis-plus-core-3.5.7.jar;C:\Users\LZH\.m2\repository\com\baomidou\mybatis-plus-annotation\3.5.7\mybatis-plus-annotation-3.5.7.jar;C:\Users\LZH\.m2\repository\com\baomidou\mybatis-plus-extension\3.5.7\mybatis-plus-extension-3.5.7.jar;C:\Users\LZH\.m2\repository\org\mybatis\mybatis\3.5.16\mybatis-3.5.16.jar;C:\Users\LZH\.m2\repository\com\github\jsqlparser\jsqlparser\4.9\jsqlparser-4.9.jar;C:\Users\LZH\.m2\repository\org\mybatis\mybatis-spring\3.0.3\mybatis-spring-3.0.3.jar;C:\Users\LZH\.m2\repository\com\baomidou\mybatis-plus-spring-boot-autoconfigure\3.5.7\mybatis-plus-spring-boot-autoconfigure-3.5.7.jar;C:\Users\LZH\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.4.1\spring-boot-autoconfigure-3.4.1.jar;C:\Users\LZH\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.4.1\spring-boot-starter-validation-3.4.1.jar;C:\Users\LZH\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.34\tomcat-embed-el-10.1.34.jar;C:\Users\LZH\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\LZH\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\LZH\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\LZH\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\LZH\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.4.1\spring-boot-starter-security-3.4.1.jar;C:\Users\LZH\.m2\repository\org\springframework\spring-aop\6.2.1\spring-aop-6.2.1.jar;C:\Users\LZH\.m2\repository\org\springframework\security\spring-security-config\6.4.2\spring-security-config-6.4.2.jar;C:\Users\LZH\.m2\repository\org\springframework\security\spring-security-web\6.4.2\spring-security-web-6.4.2.jar;C:\Users\LZH\.m2\repository\org\springframework\security\spring-security-core\6.4.2\spring-security-core-6.4.2.jar;C:\Users\LZH\.m2\repository\org\springframework\security\spring-security-crypto\6.4.2\spring-security-crypto-6.4.2.jar;C:\Users\LZH\.m2\repository\org\springframework\spring-core\6.2.1\spring-core-6.2.1.jar;C:\Users\LZH\.m2\repository\org\springframework\spring-jcl\6.2.1\spring-jcl-6.2.1.jar;C:\Users\LZH\.m2\repository\com\mysql\mysql-connector-j\9.1.0\mysql-connector-j-9.1.0.jar;C:\Users\LZH\.m2\repository\io\jsonwebtoken\jjwt\0.12.5\jjwt-0.12.5.jar;C:\Users\LZH\.m2\repository\io\jsonwebtoken\jjwt-api\0.12.5\jjwt-api-0.12.5.jar;C:\Users\LZH\.m2\repository\io\jsonwebtoken\jjwt-impl\0.12.5\jjwt-impl-0.12.5.jar;C:\Users\LZH\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.12.5\jjwt-jackson-0.12.5.jar;C:\Users\LZH\.m2\repository\org\projectlombok\lombok\1.18.36\lombok-1.18.36.jar;C:\Users\LZH\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\LZH\.m2\repository\org\springframework\boot\spring-boot-starter-mail\3.4.1\spring-boot-starter-mail-3.4.1.jar;C:\Users\LZH\.m2\repository\org\springframework\spring-context-support\6.2.1\spring-context-support-6.2.1.jar;C:\Users\LZH\.m2\repository\org\eclipse\angus\jakarta.mail\2.0.3\jakarta.mail-2.0.3.jar;C:\Users\LZH\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar com.zoyo.jobwant.JobWantApplication&#10;&#10;  .   ____          _            __ _ _&#10; /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \&#10;( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \&#10; \\/  ___)| |_)| | | | | || (_| |  ) ) ) )&#10;  '  |____| .__|_| |_|_| |_\__, | / / / /&#10; =========|_|==============|___/=/_/_/_/&#10;&#10; :: Spring Boot ::                (v3.4.1)&#10;&#10;2025-03-21T23:23:58.287+08:00  INFO 11796 --- [QuestionBank] [           main] com.zoyo.jobwant.JobWantApplication      : Starting JobWantApplication using Java 17.0.13 with PID 11796 (C:\Users\LZH\Desktop\job-want\jobWant\target\classes started by LZH in C:\Users\LZH\Desktop\job-want\jobWant)&#10;2025-03-21T23:23:58.289+08:00  INFO 11796 --- [QuestionBank] [           main] com.zoyo.jobwant.JobWantApplication      : No active profile set, falling back to 1 default profile: &quot;default&quot;&#10;2025-03-21T23:23:59.273+08:00  INFO 11796 --- [QuestionBank] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)&#10;2025-03-21T23:23:59.283+08:00  INFO 11796 --- [QuestionBank] [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]&#10;2025-03-21T23:23:59.283+08:00  INFO 11796 --- [QuestionBank] [           main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.34]&#10;2025-03-21T23:23:59.328+08:00  INFO 11796 --- [QuestionBank] [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext&#10;2025-03-21T23:23:59.329+08:00  INFO 11796 --- [QuestionBank] [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1007 ms&#10; _ _   |_  _ _|_. ___ _ |    _ &#10;| | |\/|_)(_| | |_\  |_)||_|_\ &#10;     /               |         &#10;                        3.5.7 &#10;2025-03-21T23:24:00.087+08:00  INFO 11796 --- [QuestionBank] [           main] eAuthenticationProviderManagerConfigurer : Found 2 AuthenticationProvider beans, with names [accountPasswordAuthenticationProvider, jwtAuthenticationProvider]. Global Authentication Manager will not be configured with AuthenticationProviders. Consider publishing a single AuthenticationProvider bean, or wiring your Providers directly using the DSL.&#10;2025-03-21T23:24:00.549+08:00  INFO 11796 --- [QuestionBank] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'&#10;2025-03-21T23:24:00.556+08:00  INFO 11796 --- [QuestionBank] [           main] com.zoyo.jobwant.JobWantApplication      : Started JobWantApplication in 2.602 seconds (process running for 3.117)&#10;2025-03-21T23:24:00.867+08:00  INFO 11796 --- [QuestionBank] [nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'&#10;2025-03-21T23:24:00.867+08:00  INFO 11796 --- [QuestionBank] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'&#10;2025-03-21T23:24:00.868+08:00  INFO 11796 --- [QuestionBank] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms&#10;2025-03-21T23:24:00.995+08:00  INFO 11796 --- [QuestionBank] [nio-8080-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...&#10;2025-03-21T23:24:01.113+08:00  INFO 11796 --- [QuestionBank] [nio-8080-exec-2] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@673d2450&#10;2025-03-21T23:24:01.115+08:00  INFO 11796 --- [QuestionBank] [nio-8080-exec-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.&#10;2025-03-21T23:24:01.151+08:00 ERROR 11796 --- [QuestionBank] [nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception&#10;&#10;com.zoyo.jobwant.exception.ValidatedException: 用户邮箱不存在&#10;&#9;at com.zoyo.jobwant.service.impl.UsersServiceImpl.findUser(UsersServiceImpl.java:64) ~[classes/:na]&#10;&#9;at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]&#10;&#9;at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]&#10;&#9;at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]&#10;&#9;at java.base/java.lang.reflect.Method.invoke(Method.java:569) ~[na:na]&#10;&#9;at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359) ~[spring-aop-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:723) ~[spring-aop-6.2.1.jar:6.2.1]&#10;&#9;at com.zoyo.jobwant.service.impl.UsersServiceImpl$$SpringCGLIB$$0.findUser(&lt;generated&gt;) ~[classes/:na]&#10;&#9;at com.zoyo.jobwant.security.filter.AccountPasswordAuthenticationFilter.attemptAuthentication(AccountPasswordAuthenticationFilter.java:131) ~[classes/:na]&#10;&#9;at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:231) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243) ~[spring-webmvc-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238) ~[spring-security-config-6.4.2.jar:6.4.2]&#10;&#9;at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.1.jar:6.2.1]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]&#10;&#9;at java.base/java.lang.Thread.run(Thread.java:840) ~[na:na]&#10;&#10;" />
                  </map>
                </option>
                <option name="messageId" value="0195b94e4d67730d9d24841016ea0313" />
                <option name="question" value="修复报错:&#10;xln.albl.qlydzmg.vcxvkgrlm.EzorwzgvwVcxvkgrlm: 用户邮箱不存在&#10;&#9;zg xln.albl.qlydzmg.hvierxv.rnko.FhvihHvierxvRnko.urmwFhvi(FhvihHvierxvRnko.qzez:35) ~[xozhhvh/:mz]&#10;&#9;zg qzez.yzhv/qwp.rmgvimzo.ivuovxg.MzgrevNvgslwZxxvhhliRnko.rmelpv9(Mzgrev Nvgslw) ~[mz:mz]&#10;&#9;zg qzez.yzhv/qwp.rmgvimzo.ivuovxg.MzgrevNvgslwZxxvhhliRnko.rmelpv(MzgrevNvgslwZxxvhhliRnko.qzez:22) ~[mz:mz]&#10;&#9;zg qzez.yzhv/qwp.rmgvimzo.ivuovxg.WvovtzgrmtNvgslwZxxvhhliRnko.rmelpv(WvovtzgrmtNvgslwZxxvhhliRnko.qzez:56) ~[mz:mz]&#10;&#9;zg qzez.yzhv/qzez.ozmt.ivuovxg.Nvgslw.rmelpv(Nvgslw.qzez:430) ~[mz:mz]&#10;&#9;zg lit.hkirmtuiznvdlip.zlk.hfkklig.ZlkFgroh.rmelpvQlrmklrmgFhrmtIvuovxgrlm(ZlkFgroh.qzez:640) ~[hkirmt-zlk-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.zlk.uiznvdlip.XtoryZlkKilcb$WbmznrxZwerhvwRmgvixvkgli.rmgvixvkg(XtoryZlkKilcb.qzez:276) ~[hkirmt-zlk-3.7.8.qzi:3.7.8]&#10;&#9;zg xln.albl.qlydzmg.hvierxv.rnko.FhvihHvierxvRnko$$HkirmtXTORY$$9.urmwFhvi(&lt;tvmvizgvw&gt;) ~[xozhhvh/:mz]&#10;&#9;zg xln.albl.qlydzmg.hvxfirgb.urogvi.ZxxlfmgKzhhdliwZfgsvmgrxzgrlmUrogvi.zggvnkgZfgsvmgrxzgrlm(ZxxlfmgKzhhdliwZfgsvmgrxzgrlmUrogvi.qzez:868) ~[xozhhvh/:mz]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.zfgsvmgrxzgrlm.ZyhgizxgZfgsvmgrxzgrlmKilxvhhrmtUrogvi.wlUrogvi(ZyhgizxgZfgsvmgrxzgrlmKilxvhhrmtUrogvi.qzez:768) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.zfgsvmgrxzgrlm.ZyhgizxgZfgsvmgrxzgrlmKilxvhhrmtUrogvi.wlUrogvi(ZyhgizxgZfgsvmgrxzgrlmKilxvhhrmtUrogvi.qzez:778) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb$ErigfzoUrogviXszrm.wlUrogvi(UrogviXszrmKilcb.qzez:625) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.zfgsvmgrxzgrlm.oltlfg.OltlfgUrogvi.wlUrogvi(OltlfgUrogvi.qzez:892) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.zfgsvmgrxzgrlm.oltlfg.OltlfgUrogvi.wlUrogvi(OltlfgUrogvi.qzez:06) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb$ErigfzoUrogviXszrm.wlUrogvi(UrogviXszrmKilcb.qzez:625) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.XlihUrogvi.wlUrogviRmgvimzo(XlihUrogvi.qzez:08) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.LmxvKviIvjfvhgUrogvi.wlUrogvi(LmxvKviIvjfvhgUrogvi.qzez:883) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb$ErigfzoUrogviXszrm.wlUrogvi(UrogviXszrmKilcb.qzez:625) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.svzwvi.SvzwviDirgviUrogvi.wlSvzwvihZugvi(SvzwviDirgviUrogvi.qzez:09) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.svzwvi.SvzwviDirgviUrogvi.wlUrogviRmgvimzo(SvzwviDirgviUrogvi.qzez:24) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.LmxvKviIvjfvhgUrogvi.wlUrogvi(LmxvKviIvjfvhgUrogvi.qzez:883) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb$ErigfzoUrogviXszrm.wlUrogvi(UrogviXszrmKilcb.qzez:625) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.xlmgvcg.HvxfirgbXlmgvcgSlowviUrogvi.wlUrogvi(HvxfirgbXlmgvcgSlowviUrogvi.qzez:17) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.xlmgvcg.HvxfirgbXlmgvcgSlowviUrogvi.wlUrogvi(HvxfirgbXlmgvcgSlowviUrogvi.qzez:30) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb$ErigfzoUrogviXszrm.wlUrogvi(UrogviXszrmKilcb.qzez:625) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.xlmgvcg.ivjfvhg.zhbmx.DvyZhbmxNzmztviRmgvtizgrlmUrogvi.wlUrogviRmgvimzo(DvyZhbmxNzmztviRmgvtizgrlmUrogvi.qzez:37) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.LmxvKviIvjfvhgUrogvi.wlUrogvi(LmxvKviIvjfvhgUrogvi.qzez:883) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb$ErigfzoUrogviXszrm.wlUrogvi(UrogviXszrmKilcb.qzez:625) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.hvhhrlm.WrhzyovVmxlwvFioUrogvi.wlUrogviRmgvimzo(WrhzyovVmxlwvFioUrogvi.qzez:57) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.LmxvKviIvjfvhgUrogvi.wlUrogvi(LmxvKviIvjfvhgUrogvi.qzez:883) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb$ErigfzoUrogviXszrm.wlUrogvi(UrogviXszrmKilcb.qzez:625) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb.wlUrogviRmgvimzo(UrogviXszrmKilcb.qzez:766) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.dvy.UrogviXszrmKilcb.wlUrogvi(UrogviXszrmKilcb.qzez:808) ~[hkirmt-hvxfirgb-dvy-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.XlnklhrgvUrogvi$ErigfzoUrogviXszrm.wlUrogvi(XlnklhrgvUrogvi.qzez:886) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.hvieovg.szmwovi.SzmwoviNzkkrmtRmgilhkvxgli.oznywz$xivzgvXzxsvUrogvi$6(SzmwoviNzkkrmtRmgilhkvxgli.qzez:756) ~[hkirmt-dvynex-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.XlnklhrgvUrogvi$ErigfzoUrogviXszrm.wlUrogvi(XlnklhrgvUrogvi.qzez:886) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.XlnklhrgvUrogvi.wlUrogvi(XlnklhrgvUrogvi.qzez:25) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.hvxfirgb.xlmurt.zmmlgzgrlm.dvy.xlmurtfizgrlm.DvyNexHvxfirgbXlmurtfizgrlm$XlnklhrgvUrogviXszrmKilcb.wlUrogvi(DvyNexHvxfirgbXlmurtfizgrlm.qzez:761) ~[hkirmt-hvxfirgb-xlmurt-3.5.7.qzi:3.5.7]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.WvovtzgrmtUrogviKilcb.rmelpvWvovtzgv(WvovtzgrmtUrogviKilcb.qzez:637) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.WvovtzgrmtUrogviKilcb.wlUrogvi(WvovtzgrmtUrogviKilcb.qzez:721) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.ZkkorxzgrlmUrogviXszrm.rmgvimzoWlUrogvi(ZkkorxzgrlmUrogviXszrm.qzez:835) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.ZkkorxzgrlmUrogviXszrm.wlUrogvi(ZkkorxzgrlmUrogviXszrm.qzez:859) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.IvjfvhgXlmgvcgUrogvi.wlUrogviRmgvimzo(IvjfvhgXlmgvcgUrogvi.qzez:899) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.LmxvKviIvjfvhgUrogvi.wlUrogvi(LmxvKviIvjfvhgUrogvi.qzez:883) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.ZkkorxzgrlmUrogviXszrm.rmgvimzoWlUrogvi(ZkkorxzgrlmUrogviXszrm.qzez:835) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.ZkkorxzgrlmUrogviXszrm.wlUrogvi(ZkkorxzgrlmUrogviXszrm.qzez:859) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.UlinXlmgvmgUrogvi.wlUrogviRmgvimzo(UlinXlmgvmgUrogvi.qzez:06) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.LmxvKviIvjfvhgUrogvi.wlUrogvi(LmxvKviIvjfvhgUrogvi.qzez:883) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.ZkkorxzgrlmUrogviXszrm.rmgvimzoWlUrogvi(ZkkorxzgrlmUrogviXszrm.qzez:835) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.ZkkorxzgrlmUrogviXszrm.wlUrogvi(ZkkorxzgrlmUrogviXszrm.qzez:859) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.XszizxgviVmxlwrmtUrogvi.wlUrogviRmgvimzo(XszizxgviVmxlwrmtUrogvi.qzez:798) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.hkirmtuiznvdlip.dvy.urogvi.LmxvKviIvjfvhgUrogvi.wlUrogvi(LmxvKviIvjfvhgUrogvi.qzez:883) ~[hkirmt-dvy-3.7.8.qzi:3.7.8]&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.ZkkorxzgrlmUrogviXszrm.rmgvimzoWlUrogvi(ZkkorxzgrlmUrogviXszrm.qzez:835) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.ZkkorxzgrlmUrogviXszrm.wlUrogvi(ZkkorxzgrlmUrogviXszrm.qzez:859) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.HgzmwziwDizkkviEzoev.rmelpv(HgzmwziwDizkkviEzoev.qzez:832) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.HgzmwziwXlmgvcgEzoev.rmelpv(HgzmwziwXlmgvcgEzoev.qzez:09) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.xzgzormz.zfgsvmgrxzgli.ZfgsvmgrxzgliYzhv.rmelpv(ZfgsvmgrxzgliYzhv.qzez:516) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.HgzmwziwSlhgEzoev.rmelpv(HgzmwziwSlhgEzoev.qzez:884) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.xzgzormz.ezoevh.ViiliIvkligEzoev.rmelpv(ViiliIvkligEzoev.qzez:06) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.xzgzormz.xliv.HgzmwziwVmtrmvEzoev.rmelpv(HgzmwziwVmtrmvEzoev.qzez:25) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.xzgzormz.xlmmvxgli.XlblgvZwzkgvi.hvierxv(XlblgvZwzkgvi.qzez:655) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.xlblgv.sggk88.Sggk88Kilxvhhli.hvierxv(Sggk88Kilxvhhli.qzez:602) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.xlblgv.ZyhgizxgKilxvhhliOrtsg.kilxvhh(ZyhgizxgKilxvhhliOrtsg.qzez:36) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.xlblgv.ZyhgizxgKilglxlo$XlmmvxgrlmSzmwovi.kilxvhh(ZyhgizxgKilglxlo.qzez:094) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.glnxzg.fgro.mvg.MrlVmwklrmg$HlxpvgKilxvhhli.wlIfm(MrlVmwklrmg.qzez:8258) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.glnxzg.fgro.mvg.HlxpvgKilxvhhliYzhv.ifm(HlxpvgKilxvhhliYzhv.qzez:47) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.glnxzg.fgro.gsivzwh.GsivzwKlloVcvxfgli.ifmDlipvi(GsivzwKlloVcvxfgli.qzez:8809) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.glnxzg.fgro.gsivzwh.GsivzwKlloVcvxfgli$Dlipvi.ifm(GsivzwKlloVcvxfgli.qzez:340) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg lit.zkzxsv.glnxzg.fgro.gsivzwh.GzhpGsivzw$DizkkrmtIfmmzyov.ifm(GzhpGsivzw.qzez:36) ~[glnxzg-vnyvw-xliv-89.8.65.qzi:89.8.65]&#10;&#9;zg qzez.yzhv/qzez.ozmt.Gsivzw.ifm(Gsivzw.qzez:159) ~[mz:mz]&#10;代码上下文:&#10;```qzez&#10;@Leviirwv&#10;kfyorx Fhvih urmwFhvi(Hgirmt vnzro, Hgirmt kzhhdliw, Hgirmt FhviGbkv) {&#10;    OznywzJfvibDizkkvi&lt;Fhvih&gt; jfvibDizkkvi = mvd OznywzJfvibDizkkvi&lt;&gt;();&#10;    jfvibDizkkvi.vj(Fhvih::tvgVnzro, vnzro);&#10;    jfvibDizkkvi.vj(Fhvih::tvgFhviGbkv, FhviGbkv);&#10;    Fhvih fhvih = gsrh.tvgLmv(jfvibDizkkvi);&#10;    ru (fhvih == mfoo) {&#10;        gsild mvd EzorwzgvwVcxvkgrlm(ViiliVmfn.VNZRO_MLG_VCRHG);&#10;    }&#10;    ru(HgirmtFgro.rhMfooLiVnkgb(fhvih.tvgKzhhdliw())){&#10;        gsild mvd EzorwzgvwVcxvkgrlm(ViiliVmfn.KZHHDLIW_VNKGB);&#10;    }&#10;    ru (!kzhhdliwVmxlwvi.nzgxsvh(kzhhdliw, fhvih.tvgKzhhdliw())){&#10;        gsild mvd EzorwzgvwVcxvkgrlm(ViiliVmfn.KZHHDLIW_VIILI);&#10;    }&#10;    ivgfim fhvih;&#10;}&#10;```&#10;" />
                <option name="rating" value="UNRATED" />
                <option name="referenceBeans">
                  <list />
                </option>
                <option name="status" value="SUCCESS" />
              </Turn>
            </list>
          </option>
          <option name="updateTime" value="1742570728299" />
        </Conversation>
        <Conversation>
          <option name="createTime" value="1742452440983" />
          <option name="id" value="0195b2423f977f0d92050eef6e85ed2c" />
          <option name="title" value="@workspace 这个有何用" />
          <option name="turns">
            <list>
              <Turn>
                <option name="agent" value="workspace" />
                <option name="answer" value="&lt;gsrmp&gt;好的，用户问“这个有何用”，需要根据提供的代码和上下文来回答。首先，我需要分析用户提供的代码和项目结构，找出关键部分。&#10;&#10;用户展示了一个Qzez项目的结构，主要是Hkirmt Yllg应用，涉及安全配置、缓存管理、工具类、NbYzgrh Kofh集成等。代码片段包括ZxxlfmgKzhhdliwZfgsvmgrxzgrlmUrogvi.qzez的部分方法，如设置SGGK方法仅限KLHG，获取认证参数（账号、密码、用户类型等）。其他相关类如FhvihHvierxvRnko处理用户密码更新，XfhglnXzxsv和XfhglnXzxsvNzmztvi实现自定义缓存，HkirmtHvxfirgbXlmurt配置安全策略，使用QDG和账号密码认证。&#10;&#10;结合这些信息，用户所指的“这个”可能是指ZxxlfmgKzhhdliwZfgsvmgrxzgrlmUrogvi类中的方法，特别是设置KLHG-lmob和获取参数的方法。这些方法属于Hkirmt Hvxfirgb的过滤器，用于处理登录请求，确保请求方法正确并提取参数，从而进行身份验证。&#10;&#10;需要解释这些方法的作用：hvgKlhgLmob确保登录请求仅通过KLHG方法提交，防止XHIU攻击；tvg方法用于从请求中获取参数，供后续认证流程使用。同时，整个过滤器与Hkirmt Hvxfirgb集成，处理表单登录，可能结合QDG生成令牌，保障应用安全。&#10;&#10;最后，用简洁的中文回答，说明这些代码的作用和项目中的用途，确保用户理解其重要性。&#10;&lt;/gsrmp&gt;&#10;&#10;根据提供的代码上下文，这是Hkirmt Hvxfirgb框架中用于处理账号密码登录的过滤器实现。主要作用包括：&#10;&#10;8. 定义并管理登录请求参数：&#10;- 账号（zxxlfmg）&#10;- 密码（kzhhdliw） &#10;- 用户类型（fhviGbkv）&#10;- 验证码键（evirubPvb）&#10;- 验证码值（evirubXlwv）&#10;&#10;7. 通过hvgKlhgLmob(gifv)强制要求登录请求必须使用KLHG方法，这是Hkirmt Hvxfirgb的默认安全配置，防止XHIU攻击。&#10;&#10;6. 继承自ZyhgizxgZfgsvmgrxzgrlmKilxvhhrmtUrogvi，作为Hkirmt Hvxfirgb过滤器链中的一环，负责拦截登录请求并执行认证流程。&#10;&#10;该过滤器与ZxxlfmgKzhhdliwZfgsvmgrxzgrlmKilerwvi配合使用，共同完成基于账号密码（可能包含验证码）的认证流程，是系统安全体系的核心组件之一。" />
                <option name="chatResource" value="user" />
                <option name="codeReferences">
                  <list>
                    <CodeReferencesBean>
                      <option name="content" value="    kfyorx elrw hvgKlhgLmob(yllovzm klhgLmob) {&#10;        gsrh.klhgLmob = klhgLmob;&#10;    }&#10;&#10;    kfyorx urmzo Hgirmt tvgZxxlfmgKziznvgvi() {&#10;        ivgfim gsrh.zxxlfmgKziznvgvi;&#10;    }&#10;&#10;    kfyorx urmzo Hgirmt tvgKzhhdliwKziznvgvi() {&#10;        ivgfim gsrh.kzhhdliwKziznvgvi;&#10;    }&#10;&#10;    kfyorx urmzo Hgirmt tvgFhviGbkvKziznvgvi() {&#10;        ivgfim gsrh.fhviGbkvKziznvgvi;&#10;    }&#10;&#10;    kfyorx urmzo Hgirmt tvgEvirubPvbKziznvgvi() {&#10;        ivgfim gsrh.evirubPvbKziznvgvi;&#10;    }&#10;&#10;    kfyorx urmzo Hgirmt tvgEvirubXlwvKziznvgvi() {&#10;        ivgfim gsrh.evirubXlwvKziznvgvi;&#10;    }&#10;}&#10;" />
                      <option name="end_line" value="229" />
                      <option name="filename" value="AccountPasswordAuthenticationFilter.java" />
                      <option name="language" value="JAVA" />
                      <option name="range">
                        <Range>
                          <option name="end">
                            <Position>
                              <option name="line" value="229" />
                            </Position>
                          </option>
                          <option name="start">
                            <Position>
                              <option name="line" value="205" />
                            </Position>
                          </option>
                        </Range>
                      </option>
                      <option name="start_line" value="205" />
                      <option name="type" value="editor" />
                      <option name="url" value="file:///C:/Users/LZH/Desktop/job-want/jobWant/src/main/java/com/zoyo/jobwant/security/filter/AccountPasswordAuthenticationFilter.java" />
                    </CodeReferencesBean>
                  </list>
                </option>
                <option name="codebaseContextVariableValues">
                  <list>
                    <CodebaseContextVariableValue>
                      <option name="chunk" value="src\main\java\com\zoyo\jobwant\service\impl\UsersServiceImpl.java: package com.zoyo.jobwant.service.impl;&#10;import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;&#10;import com.baomidou.mybatisplus.core.conditions.update.UpdateWrapper;&#10;import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;&#10;import com.zoyo.jobwant.cache.CustomCacheManager;&#10;import com.zoyo.jobwant.exception.ValidatedException;&#10;import com.zoyo.jobwant.exception.VerifyException;&#10;import com.zoyo.jobwant.mapper.UsersMapper;&#10;import com.zoyo.jobwant.model.Users;&#10;import com.zoyo.jobwant.model.enums.ErrorEnum;&#10;import com.zoyo.jobwant.model.vo.UsersVo;&#10;import com.zoyo.jobwant.service.UsersService;&#10;import com.zoyo.jobwant.util.StringUtil;&#10;import org.springframework.beans.factory.annotation.Autowired;&#10;import org.springframework.cache.Cache;&#10;import org.springframework.security.crypto.password.PasswordEncoder;&#10;import org.springframework.stereotype.Service;&#10;@Service&#10;public class UsersServiceImpl extends ServiceImpl&lt;UsersMapper, Users&gt; implements UsersService {&#10;    @Autowired&#10;    private PasswordEncoder passwordEncoder;&#10;    @Override&#10;    public boolean updatePassword(String id, String password, String newPassword) {" />
                      <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/zoyo/jobwant/service/impl/UsersServiceImpl.java" />
                      <option name="range">
                        <Range>
                          <option name="endColumn" value="1" />
                          <option name="endLine" value="27" />
                          <option name="startColumn" value="1" />
                          <option name="startLine" value="1" />
                        </Range>
                      </option>
                      <option name="relativePath" value="src\main\java\com\zoyo\jobwant\service\impl\UsersServiceImpl.java" />
                    </CodebaseContextVariableValue>
                    <CodebaseContextVariableValue>
                      <option name="chunk" value="src\main\java\com\zoyo\jobwant\cache\CustomCache.java: package com.zoyo.jobwant.cache;&#10;import jakarta.validation.constraints.NotNull;&#10;import org.springframework.cache.support.AbstractValueAdaptingCache;&#10;import org.springframework.core.serializer.support.SerializationDelegate;&#10;import org.springframework.lang.Nullable;&#10;import org.springframework.util.Assert;&#10;import java.util.concurrent.Callable;&#10;import java.util.concurrent.ConcurrentHashMap;&#10;import java.util.concurrent.ConcurrentMap;&#10;public class CustomCache extends AbstractValueAdaptingCache {&#10;    private final String name;&#10;    private final ConcurrentMap&lt;Object, Object&gt; store;&#10;    @Nullable&#10;    private final SerializationDelegate serialization;&#10;    public CustomCache(String name) {&#10;        this(name, new ConcurrentHashMap&lt;&gt;(256), true);&#10;    }&#10;    public CustomCache(String name, boolean allowNullValues) {&#10;        this(name, new ConcurrentHashMap&lt;&gt;(256), allowNullValues);&#10;    }&#10;    public CustomCache(String name, ConcurrentMap&lt;Object, Object&gt; store, boolean allowNullValues) {&#10;        this(name, store, allowNullValues, null);&#10;    }&#10;    protected CustomCache(String name, ConcurrentMap&lt;Object, Object&gt; store, boolean allowNullValues, SerializationDelegate serialization) {&#10;        super(allowNullValues);&#10;        Assert.notNull(name, &quot;Name must not be null&quot;);" />
                      <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/zoyo/jobwant/cache/CustomCache.java" />
                      <option name="range">
                        <Range>
                          <option name="endColumn" value="1" />
                          <option name="endLine" value="34" />
                          <option name="startColumn" value="1" />
                          <option name="startLine" value="1" />
                        </Range>
                      </option>
                      <option name="relativePath" value="src\main\java\com\zoyo\jobwant\cache\CustomCache.java" />
                    </CodebaseContextVariableValue>
                    <CodebaseContextVariableValue>
                      <option name="chunk" value="src\main\java\com\zoyo\jobwant\mybatisplus\wrapper\JoinWrapper.java: package com.zoyo.jobwant.mybatisplus.wrapper;&#10;import com.baomidou.mybatisplus.core.conditions.AbstractWrapper;&#10;import com.baomidou.mybatisplus.core.conditions.SharedString;&#10;import com.baomidou.mybatisplus.core.conditions.query.Query;&#10;import com.baomidou.mybatisplus.core.conditions.segments.MergeSegments;&#10;import com.baomidou.mybatisplus.core.metadata.TableFieldInfo;&#10;import com.baomidou.mybatisplus.core.metadata.TableInfoHelper;&#10;import com.baomidou.mybatisplus.core.toolkit.ArrayUtils;&#10;import com.baomidou.mybatisplus.core.toolkit.CollectionUtils;&#10;import java.util.List;&#10;import java.util.Map;&#10;import java.util.concurrent.atomic.AtomicInteger;&#10;import java.util.function.Predicate;&#10;/**&#10; * 类功能描述&#10; * Author: 魏思冉&#10; * Date: 2024/5/15 10:23&#10; */&#10;public class JoinWrapper&lt;T&gt; extends AbstractWrapper&lt;T, String, JoinWrapper&lt;T&gt;&gt; implements Query&lt;JoinWrapper&lt;T&gt;, T, String&gt;, Join&lt;JoinWrapper&lt;T&gt;&gt; {&#10;    private final SharedString sqlSelect;&#10;    private String alias = &quot;t&quot;;&#10;    private final SharedString from;&#10;    public JoinWrapper() {&#10;        this(null);&#10;    }&#10;    public JoinWrapper(T entity) {" />
                      <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/zoyo/jobwant/mybatisplus/wrapper/JoinWrapper.java" />
                      <option name="range">
                        <Range>
                          <option name="endColumn" value="1" />
                          <option name="endLine" value="31" />
                          <option name="startColumn" value="1" />
                          <option name="startLine" value="1" />
                        </Range>
                      </option>
                      <option name="relativePath" value="src\main\java\com\zoyo\jobwant\mybatisplus\wrapper\JoinWrapper.java" />
                    </CodebaseContextVariableValue>
                    <CodebaseContextVariableValue>
                      <option name="chunk" value="src\main\java\com\zoyo\jobwant\config\CacheConfig.java: package com.zoyo.jobwant.config;&#10;import com.zoyo.jobwant.cache.CustomCacheManager;&#10;import org.springframework.beans.factory.ObjectProvider;&#10;import org.springframework.boot.autoconfigure.cache.CacheManagerCustomizer;&#10;import org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers;&#10;import org.springframework.boot.autoconfigure.cache.CacheProperties;&#10;import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;&#10;import org.springframework.boot.context.properties.EnableConfigurationProperties;&#10;import org.springframework.context.annotation.Bean;&#10;import org.springframework.context.annotation.Configuration;&#10;import java.util.List;&#10;import java.util.stream.Collectors;&#10;@Configuration&#10;@EnableConfigurationProperties({CacheProperties.class})&#10;public class CacheConfig {&#10;    @Bean&#10;    @ConditionalOnMissingBean&#10;    public CacheManagerCustomizers cacheManagerCustomizers(ObjectProvider&lt;CacheManagerCustomizer&lt;?&gt;&gt; customizers) {&#10;        return new CacheManagerCustomizers(customizers.orderedStream().collect(Collectors.toList()));&#10;    }&#10;    @Bean&#10;    CustomCacheManager cacheManager(CacheProperties cacheProperties, CacheManagerCustomizers cacheManagerCustomizers) {&#10;        CustomCacheManager cacheManager = new CustomCacheManager();&#10;        List&lt;String&gt; cacheNames = cacheProperties.getCacheNames();&#10;        if (!cacheNames.isEmpty()) {&#10;            cacheManager.setCacheNames(cacheNames);&#10;        }&#10;        return cacheManagerCustomizers.customize(cacheManager);&#10;    }&#10;}" />
                      <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/zoyo/jobwant/config/CacheConfig.java" />
                      <option name="range">
                        <Range>
                          <option name="endColumn" value="1" />
                          <option name="endLine" value="35" />
                          <option name="startColumn" value="1" />
                          <option name="startLine" value="1" />
                        </Range>
                      </option>
                      <option name="relativePath" value="src\main\java\com\zoyo\jobwant\config\CacheConfig.java" />
                    </CodebaseContextVariableValue>
                    <CodebaseContextVariableValue>
                      <option name="chunk" value="src\main\java\com\zoyo\jobwant\security\SpringSecurityConfig.java: package com.zoyo.jobwant.security;&#10;import com.zoyo.jobwant.security.filter.AccountPasswordAuthenticationFilter;&#10;import com.zoyo.jobwant.security.filter.JwtAuthenticationFilter;&#10;import com.zoyo.jobwant.security.handler.UserAccessDeniedHandler;&#10;import com.zoyo.jobwant.security.handler.UserAuthenticationEntryPoint;&#10;import com.zoyo.jobwant.security.provider.AccountPasswordAuthenticationProvider;&#10;import com.zoyo.jobwant.security.provider.JwtAuthenticationProvider;&#10;import com.zoyo.jobwant.service.LoginService;&#10;import com.zoyo.jobwant.service.UsersService;&#10;import jakarta.annotation.Resource;&#10;import org.springframework.beans.factory.annotation.Autowired;&#10;import org.springframework.context.annotation.Bean;&#10;import org.springframework.context.annotation.Configuration;&#10;import org.springframework.http.HttpMethod;&#10;import org.springframework.security.authentication.AuthenticationManager;&#10;import org.springframework.security.config.Customizer;&#10;import org.springframework.security.config.ObjectPostProcessor;&#10;import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;&#10;import org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity;&#10;import org.springframework.security.config.annotation.web.builders.HttpSecurity;" />
                      <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/zoyo/jobwant/security/SpringSecurityConfig.java" />
                      <option name="range">
                        <Range>
                          <option name="endColumn" value="1" />
                          <option name="endLine" value="22" />
                          <option name="startColumn" value="1" />
                          <option name="startLine" value="1" />
                        </Range>
                      </option>
                      <option name="relativePath" value="src\main\java\com\zoyo\jobwant\security\SpringSecurityConfig.java" />
                    </CodebaseContextVariableValue>
                    <CodebaseContextVariableValue>
                      <option name="chunk" value="src\main\java\com\zoyo\jobwant\cache\CustomCacheManager.java: package com.zoyo.jobwant.cache;&#10;import jakarta.validation.constraints.NotNull;&#10;import org.springframework.beans.factory.BeanClassLoaderAware;&#10;import org.springframework.cache.Cache;&#10;import org.springframework.cache.CacheManager;&#10;import org.springframework.core.serializer.support.SerializationDelegate;&#10;import org.springframework.lang.Nullable;&#10;import java.util.Arrays;&#10;import java.util.Collection;&#10;import java.util.Collections;&#10;import java.util.Map;&#10;import java.util.concurrent.ConcurrentHashMap;&#10;import java.util.concurrent.ConcurrentMap;&#10;public class CustomCacheManager implements CacheManager, BeanClassLoaderAware {&#10;    private final ConcurrentMap&lt;String, Cache&gt; cacheMap;&#10;    private boolean dynamic = true;&#10;    private boolean allowNullValues = true;&#10;    private boolean storeByValue = false;&#10;    @Nullable&#10;    private SerializationDelegate serialization;&#10;    public CustomCacheManager(){&#10;        cacheMap = new ConcurrentHashMap&lt;&gt;(16);&#10;    }&#10;    public CustomCacheManager(String... cacheNames) {&#10;        this();&#10;        this.setCacheNames(Arrays.asList(cacheNames));&#10;    }&#10;    public void setCacheNames(@Nullable Collection&lt;String&gt; cacheNames) {&#10;        if (cacheNames != null) {&#10;            for (String name : cacheNames) {&#10;                this.cacheMap.put(name, this.createCustomCache(name));&#10;            }" />
                      <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/zoyo/jobwant/cache/CustomCacheManager.java" />
                      <option name="range">
                        <Range>
                          <option name="endColumn" value="1" />
                          <option name="endLine" value="39" />
                          <option name="startColumn" value="1" />
                          <option name="startLine" value="1" />
                        </Range>
                      </option>
                      <option name="relativePath" value="src\main\java\com\zoyo\jobwant\cache\CustomCacheManager.java" />
                    </CodebaseContextVariableValue>
                    <CodebaseContextVariableValue>
                      <option name="chunk" value="src\main\java\com\zoyo\jobwant\mybatisplus\CustomSqlInjector.java: package com.zoyo.jobwant.mybatisplus;&#10;import com.baomidou.mybatisplus.core.injector.AbstractMethod;&#10;import com.baomidou.mybatisplus.core.injector.DefaultSqlInjector;&#10;import com.baomidou.mybatisplus.core.metadata.TableInfo;&#10;import com.zoyo.jobwant.mybatisplus.method.InsertList;&#10;import com.zoyo.jobwant.mybatisplus.method.SelectJoinCount;&#10;import com.zoyo.jobwant.mybatisplus.method.SelectJoinList;&#10;import com.zoyo.jobwant.mybatisplus.method.SelectJoinPage;&#10;import org.apache.ibatis.session.Configuration;&#10;import java.util.List;&#10;public class CustomSqlInjector extends DefaultSqlInjector {&#10;    @Override&#10;    public List&lt;AbstractMethod&gt; getMethodList(Configuration configuration, Class&lt;?&gt; mapperClass, TableInfo tableInfo) {&#10;        List&lt;AbstractMethod&gt; methodList = super.getMethodList(configuration, mapperClass, tableInfo);&#10;        methodList.add(new InsertList());&#10;        methodList.add(new SelectJoinList());&#10;        methodList.add(new SelectJoinPage());&#10;        methodList.add(new SelectJoinCount());&#10;        return methodList;&#10;    }&#10;}" />
                      <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/zoyo/jobwant/mybatisplus/CustomSqlInjector.java" />
                      <option name="range">
                        <Range>
                          <option name="endColumn" value="1" />
                          <option name="endLine" value="24" />
                          <option name="startColumn" value="1" />
                          <option name="startLine" value="1" />
                        </Range>
                      </option>
                      <option name="relativePath" value="src\main\java\com\zoyo\jobwant\mybatisplus\CustomSqlInjector.java" />
                    </CodebaseContextVariableValue>
                    <CodebaseContextVariableValue>
                      <option name="chunk" value="src\main\java\com\zoyo\jobwant\cache\CustomCacheManager.java:                 if (cache == null) {&#10;                    cache = this.createCustomCache(name);&#10;                    this.cacheMap.put(name, cache);&#10;                }&#10;            }&#10;        }&#10;        return cache;&#10;    }&#10;    private void recreateCaches() {&#10;        for (Map.Entry&lt;String, Cache&gt; stringCacheEntry : this.cacheMap.entrySet()) {&#10;            stringCacheEntry.setValue(this.createCustomCache(stringCacheEntry.getKey()));&#10;        }&#10;    }&#10;    private Cache createCustomCache(String name) {&#10;        SerializationDelegate actualSerialization = this.isStoreByValue() ? this.serialization : null;&#10;        return new CustomCache(name, new ConcurrentHashMap&lt;&gt;(256), this.isAllowNullValues(), actualSerialization);&#10;    }&#10;}" />
                      <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/zoyo/jobwant/cache/CustomCacheManager.java" />
                      <option name="range">
                        <Range>
                          <option name="endColumn" value="1" />
                          <option name="endLine" value="107" />
                          <option name="startColumn" value="1" />
                          <option name="startLine" value="88" />
                        </Range>
                      </option>
                      <option name="relativePath" value="src\main\java\com\zoyo\jobwant\cache\CustomCacheManager.java" />
                    </CodebaseContextVariableValue>
                    <CodebaseContextVariableValue>
                      <option name="chunk" value=".idea\workspace.xml:     &amp;quot;node.js.selected.package.eslint&amp;quot;: &amp;quot;(autodetect)&amp;quot;,&#10;    &amp;quot;node.js.selected.package.tslint&amp;quot;: &amp;quot;(autodetect)&amp;quot;,&#10;    &amp;quot;project.structure.last.edited&amp;quot;: &amp;quot;模块&amp;quot;,&#10;    &amp;quot;project.structure.proportion&amp;quot;: &amp;quot;0.15&amp;quot;,&#10;    &amp;quot;project.structure.side.proportion&amp;quot;: &amp;quot;0.2&amp;quot;,&#10;    &amp;quot;settings.build.tools.auto.reload&amp;quot;: &amp;quot;ALL&amp;quot;,&#10;    &amp;quot;settings.editor.selected.configurable&amp;quot;: &amp;quot;Lombok&amp;quot;,&#10;    &amp;quot;spring.configuration.checksum&amp;quot;: &amp;quot;c0ddc0b9dbbfba3711774958962c06bd&amp;quot;,&#10;    &amp;quot;vue.rearranger.settings.migration&amp;quot;: &amp;quot;true&amp;quot;&#10;  }&#10;}&lt;/component&gt;&#10;  &lt;component name=&quot;RecentsManager&quot;&gt;&#10;    &lt;key name=&quot;CopyFile.RECENT_KEYS&quot;&gt;" />
                      <option name="filePath" value="$PROJECT_DIR$/.idea/workspace.xml" />
                      <option name="range">
                        <Range>
                          <option name="endColumn" value="1" />
                          <option name="endLine" value="79" />
                          <option name="startColumn" value="1" />
                          <option name="startLine" value="67" />
                        </Range>
                      </option>
                      <option name="relativePath" value=".idea\workspace.xml" />
                    </CodebaseContextVariableValue>
                    <CodebaseContextVariableValue>
                      <option name="chunk" value="src\main\java\com\zoyo\jobwant\security\filter\JwtAuthenticationFilter.java: package com.zoyo.jobwant.security.filter;&#10;import com.zoyo.jobwant.controller.result.Result;&#10;import com.zoyo.jobwant.security.token.JwtAuthenticationToken;&#10;import com.zoyo.jobwant.util.ResponseUtil;&#10;import com.zoyo.jobwant.util.TokenUtil;&#10;import io.jsonwebtoken.Claims;&#10;import io.jsonwebtoken.JwtException;&#10;import io.micrometer.common.util.StringUtils;&#10;import jakarta.servlet.FilterChain;&#10;import jakarta.servlet.ServletException;&#10;import jakarta.servlet.http.HttpServletRequest;&#10;import jakarta.servlet.http.HttpServletResponse;&#10;import org.springframework.security.authentication.AuthenticationDetailsSource;&#10;import org.springframework.security.authentication.AuthenticationManager;&#10;import org.springframework.security.core.Authentication;&#10;import org.springframework.security.core.AuthenticationException;&#10;import org.springframework.security.core.context.SecurityContextHolder;&#10;import org.springframework.security.web.authentication.WebAuthenticationDetailsSource;&#10;import org.springframework.security.web.util.matcher.RequestHeaderRequestMatcher;&#10;import org.springframework.security.web.util.matcher.RequestMatcher;&#10;import org.springframework.util.Assert;&#10;import org.springframework.web.filter.OncePerRequestFilter;&#10;import java.io.IOException;&#10;/**&#10; * 类功能描述&#10; * Author：魏思冉" />
                      <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/zoyo/jobwant/security/filter/JwtAuthenticationFilter.java" />
                      <option name="range">
                        <Range>
                          <option name="endColumn" value="1" />
                          <option name="endLine" value="29" />
                          <option name="startColumn" value="1" />
                          <option name="startLine" value="1" />
                        </Range>
                      </option>
                      <option name="relativePath" value="src\main\java\com\zoyo\jobwant\security\filter\JwtAuthenticationFilter.java" />
                    </CodebaseContextVariableValue>
                    <CodebaseContextVariableValue>
                      <option name="chunk" value="src\main\java\com\zoyo\jobwant\cache\CustomCacheManager.java:         this.dynamic = false;&#10;    } else {&#10;        this.dynamic = true;&#10;    }&#10;}&#10;public void setAllowNullValues(boolean allowNullValues) {&#10;    if (allowNullValues != this.allowNullValues) {&#10;        this.allowNullValues = allowNullValues;&#10;        this.recreateCaches();&#10;    }&#10;}&#10;public boolean isAllowNullValues() {&#10;    return this.allowNullValues;&#10;}&#10;public void setStoreByValue(boolean storeByValue) {&#10;    if (storeByValue != this.storeByValue) {&#10;        this.storeByValue = storeByValue;&#10;        this.recreateCaches();&#10;    }&#10;}&#10;public boolean isStoreByValue() {&#10;    return this.storeByValue;&#10;}&#10;@Override&#10;public void setBeanClassLoader(@NotNull ClassLoader classLoader) {&#10;    this.serialization = new SerializationDelegate(classLoader);&#10;    if (this.isStoreByValue()) {&#10;        this.recreateCaches();&#10;    }&#10;}&#10;@NotNull&#10;@Override&#10;public Collection&lt;String&gt; getCacheNames() {&#10;    return Collections.unmodifiableSet(this.cacheMap.keySet());&#10;}&#10;@Override&#10;public Cache getCache(@NotNull String name) {&#10;    Cache cache = this.cacheMap.get(name);&#10;    if (cache == null &amp;&amp; this.dynamic) {&#10;        synchronized(this.cacheMap) {&#10;            cache = this.cacheMap.get(name);" />
                      <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/zoyo/jobwant/cache/CustomCacheManager.java" />
                      <option name="range">
                        <Range>
                          <option name="endColumn" value="1" />
                          <option name="endLine" value="87" />
                          <option name="startColumn" value="1" />
                          <option name="startLine" value="40" />
                        </Range>
                      </option>
                      <option name="relativePath" value="src\main\java\com\zoyo\jobwant\cache\CustomCacheManager.java" />
                    </CodebaseContextVariableValue>
                    <CodebaseContextVariableValue>
                      <option name="chunk" value="src\main\java\com\zoyo\jobwant\security\filter\AccountPasswordAuthenticationFilter.java: import org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter;&#10;import org.springframework.security.web.util.matcher.AntPathRequestMatcher;&#10;import org.springframework.util.Assert;&#10;import java.util.*;&#10;/**&#10; * 类功能描述&#10; * Author：魏思冉&#10; * Date： 2022/10/13 8:51&#10; */&#10;public class AccountPasswordAuthenticationFilter extends AbstractAuthenticationProcessingFilter {&#10;    private UsersService usersService;&#10;    public static final String SPRING_SECURITY_FORM_ACCOUNT_KEY = &quot;account&quot;;&#10;    public static final String SPRING_SECURITY_FORM_PASSWORD_KEY = &quot;password&quot;;&#10;    public static final String SPRING_SECURITY_FORM_USERTYPE_KEY = &quot;userType&quot;;&#10;    public static final String SPRING_SECURITY_FORM_VERIFY_KEY_KEY = &quot;verifyKey&quot;;&#10;    public static final String SPRING_SECURITY_FORM_VERIFY_CODE_KEY = &quot;verifyCode&quot;;&#10;    public static final String SPRING_SECURITY_FORM_LOGIN_TYPE = &quot;loginType&quot;;&#10;    private String accountParameter = SPRING_SECURITY_FORM_ACCOUNT_KEY;&#10;    private String passwordParameter = SPRING_SECURITY_FORM_PASSWORD_KEY;&#10;    private String userTypeParameter = SPRING_SECURITY_FORM_USERTYPE_KEY;&#10;    private String verifyKeyParameter = SPRING_SECURITY_FORM_VERIFY_KEY_KEY;" />
                      <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/zoyo/jobwant/security/filter/AccountPasswordAuthenticationFilter.java" />
                      <option name="range">
                        <Range>
                          <option name="endColumn" value="1" />
                          <option name="endLine" value="46" />
                          <option name="startColumn" value="1" />
                          <option name="startLine" value="24" />
                        </Range>
                      </option>
                      <option name="relativePath" value="src\main\java\com\zoyo\jobwant\security\filter\AccountPasswordAuthenticationFilter.java" />
                    </CodebaseContextVariableValue>
                    <CodebaseContextVariableValue>
                      <option name="chunk" value="src\main\java\com\zoyo\jobwant\security\provider\AccountPasswordAuthenticationProvider.java: package com.zoyo.jobwant.security.provider;&#10;import com.zoyo.jobwant.security.token.AccountPasswordAuthenticationToken;&#10;import com.zoyo.jobwant.service.LoginService;&#10;import org.springframework.security.authentication.BadCredentialsException;&#10;import org.springframework.security.authentication.InternalAuthenticationServiceException;&#10;import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;&#10;import org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider;&#10;import org.springframework.security.core.Authentication;&#10;import org.springframework.security.core.AuthenticationException;&#10;import org.springframework.security.core.userdetails.UserDetails;&#10;import org.springframework.security.core.userdetails.UsernameNotFoundException;&#10;import org.springframework.security.crypto.password.PasswordEncoder;&#10;import org.springframework.util.Assert;&#10;/**&#10; * 类功能描述&#10; * Author：魏思冉&#10; * Date： 2022/10/13 9:29&#10; */&#10;public class AccountPasswordAuthenticationProvider extends AbstractUserDetailsAuthenticationProvider {&#10;    private LoginService loginService;&#10;    private PasswordEncoder passwordEncoder;&#10;    private volatile String userNotFoundEncodedPassword;&#10;    @Override&#10;    protected void doAfterPropertiesSet() {&#10;        Assert.notNull(this.loginService, &quot;A LoginService must be set&quot;);&#10;    }&#10;    // 判断密码是否正确&#10;    @Override&#10;    protected void additionalAuthenticationChecks(UserDetails userDetails, UsernamePasswordAuthenticationToken authentication) throws AuthenticationException {&#10;        if (authentication.getCredentials() == null) {" />
                      <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/zoyo/jobwant/security/provider/AccountPasswordAuthenticationProvider.java" />
                      <option name="range">
                        <Range>
                          <option name="endColumn" value="1" />
                          <option name="endLine" value="33" />
                          <option name="startColumn" value="1" />
                          <option name="startLine" value="1" />
                        </Range>
                      </option>
                      <option name="relativePath" value="src\main\java\com\zoyo\jobwant\security\provider\AccountPasswordAuthenticationProvider.java" />
                    </CodebaseContextVariableValue>
                    <CodebaseContextVariableValue>
                      <option name="chunk" value="src\main\java\com\zoyo\jobwant\exception\GlobalExceptionAdvice.java: package com.zoyo.jobwant.exception;&#10;import com.zoyo.jobwant.controller.result.Result;&#10;import org.springframework.http.HttpStatus;&#10;import org.springframework.http.ResponseEntity;&#10;import org.springframework.security.access.AccessDeniedException;&#10;import org.springframework.web.bind.MethodArgumentNotValidException;&#10;import org.springframework.web.bind.annotation.ExceptionHandler;&#10;import org.springframework.web.bind.annotation.RestControllerAdvice;&#10;//@RestControllerAdvice&#10;public class GlobalExceptionAdvice {&#10;    @ExceptionHandler(Exception.class)&#10;    public ResponseEntity&lt;?&gt; defaultException(Exception e) {&#10;        return new ResponseEntity&lt;&gt;(Result.fail(-1, e.getMessage()), HttpStatus.INTERNAL_SERVER_ERROR);&#10;    }&#10;    @ExceptionHandler(AccessDeniedException.class)&#10;    public void accessDeniedException(AccessDeniedException e) {&#10;        throw e;&#10;    }&#10;    @ExceptionHandler(ServerException.class)&#10;    public ResponseEntity&lt;?&gt; serverException(ServerException e) {&#10;        return new ResponseEntity&lt;&gt;(Result.fail(e.getCode(), e.getMessage()), HttpStatus.INTERNAL_SERVER_ERROR);&#10;    }&#10;    @ExceptionHandler({MethodArgumentNotValidException.class, ValidatedException.class})&#10;    public Result badRequestException(Exception e) {&#10;        int code;&#10;        String msg;&#10;        if (e instanceof MethodArgumentNotValidException) {&#10;            code = 201;" />
                      <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/zoyo/jobwant/exception/GlobalExceptionAdvice.java" />
                      <option name="range">
                        <Range>
                          <option name="endColumn" value="1" />
                          <option name="endLine" value="34" />
                          <option name="startColumn" value="1" />
                          <option name="startLine" value="1" />
                        </Range>
                      </option>
                      <option name="relativePath" value="src\main\java\com\zoyo\jobwant\exception\GlobalExceptionAdvice.java" />
                    </CodebaseContextVariableValue>
                    <CodebaseContextVariableValue>
                      <option name="chunk" value="src\main\java\com\zoyo\jobwant\security\SpringSecurityConfig.java: import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;&#10;import org.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer;&#10;import org.springframework.security.config.annotation.web.configurers.HeadersConfigurer;&#10;import org.springframework.security.config.http.SessionCreationPolicy;&#10;import org.springframework.security.crypto.factory.PasswordEncoderFactories;&#10;import org.springframework.security.crypto.password.PasswordEncoder;&#10;import org.springframework.security.web.SecurityFilterChain;&#10;import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;&#10;import org.springframework.web.cors.CorsConfiguration;&#10;import org.springframework.web.cors.CorsConfigurationSource;&#10;import org.springframework.web.cors.UrlBasedCorsConfigurationSource;&#10;import java.util.Arrays;&#10;/**&#10; * 类功能描述&#10; * Author：魏思冉&#10; * Date： 2022/10/10 9:35&#10; */&#10;@Configuration&#10;@EnableWebSecurity&#10;@EnableMethodSecurity(securedEnabled = true)&#10;public class SpringSecurityConfig {&#10;    @Autowired&#10;    private UsersService usersService;&#10;    @Autowired&#10;    ObjectPostProcessor&lt;Object&gt; objectPostProcessor;&#10;    @Autowired&#10;    private LoginService loginService;&#10;    @Resource&#10;    UserAuthenticationEntryPoint entryPoint;&#10;    @Resource&#10;    UserAccessDeniedHandler accessDeniedHandler;&#10;    @Bean&#10;    public PasswordEncoder passwordEncoder() {&#10;        return PasswordEncoderFactories.createDelegatingPasswordEncoder();&#10;    }&#10;    @Bean" />
                      <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/zoyo/jobwant/security/SpringSecurityConfig.java" />
                      <option name="range">
                        <Range>
                          <option name="endColumn" value="1" />
                          <option name="endLine" value="66" />
                          <option name="startColumn" value="1" />
                          <option name="startLine" value="23" />
                        </Range>
                      </option>
                      <option name="relativePath" value="src\main\java\com\zoyo\jobwant\security\SpringSecurityConfig.java" />
                    </CodebaseContextVariableValue>
                    <CodebaseContextVariableValue>
                      <option name="chunk" value="pom.xml:         &lt;scope&gt;test&lt;/scope&gt;&#10;    &lt;/dependency&gt;&#10;    &lt;dependency&gt;&#10;        &lt;groupId&gt;com.mysql&lt;/groupId&gt;&#10;        &lt;artifactId&gt;mysql-connector-j&lt;/artifactId&gt;&#10;        &lt;scope&gt;runtime&lt;/scope&gt;&#10;    &lt;/dependency&gt;&#10;    &lt;dependency&gt;&#10;        &lt;groupId&gt;io.jsonwebtoken&lt;/groupId&gt;&#10;        &lt;artifactId&gt;jjwt&lt;/artifactId&gt;&#10;        &lt;version&gt;0.12.5&lt;/version&gt;&#10;    &lt;/dependency&gt;&#10;    &lt;dependency&gt;&#10;        &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;&#10;        &lt;artifactId&gt;lombok&lt;/artifactId&gt;&#10;        &lt;optional&gt;true&lt;/optional&gt;&#10;    &lt;/dependency&gt;&#10;    &lt;dependency&gt;&#10;        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#10;        &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;&#10;        &lt;scope&gt;test&lt;/scope&gt;&#10;    &lt;/dependency&gt;&#10;    &lt;dependency&gt;&#10;        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#10;        &lt;artifactId&gt;spring-boot-starter-mail&lt;/artifactId&gt;&#10;    &lt;/dependency&gt;&#10;&lt;/dependencies&gt;&#10;&lt;build&gt;&#10;    &lt;directory&gt;${project.basedir}/target&lt;/directory&gt;&#10;    &lt;outputDirectory&gt;${project.build.directory}/classes&lt;/outputDirectory&gt;&#10;    &lt;plugins&gt;&#10;        &lt;plugin&gt;" />
                      <option name="filePath" value="$PROJECT_DIR$/pom.xml" />
                      <option name="range">
                        <Range>
                          <option name="endColumn" value="1" />
                          <option name="endLine" value="89" />
                          <option name="startColumn" value="1" />
                          <option name="startLine" value="57" />
                        </Range>
                      </option>
                      <option name="relativePath" value="pom.xml" />
                    </CodebaseContextVariableValue>
                    <CodebaseContextVariableValue>
                      <option name="chunk" value="src\main\java\com\zoyo\jobwant\util\JSONUtil.java: package com.zoyo.jobwant.util;&#10;import com.fasterxml.jackson.core.JsonProcessingException;&#10;import com.fasterxml.jackson.databind.ObjectMapper;&#10;/**&#10; * 类功能描述&#10; * Author：魏思冉&#10; * Date： 2024/03/31 9:50&#10; */&#10;public class JSONUtil {&#10;    private final static ObjectMapper mapper = new ObjectMapper();&#10;    public static String toJSONString(Object o) {&#10;        try {&#10;            return mapper.writeValueAsString(o);&#10;        } catch (JsonProcessingException e) {&#10;            e.printStackTrace();&#10;        }&#10;        return null;&#10;    }&#10;    public static Object fromJson(String json, Class&lt;?&gt; clazz) {&#10;        try {&#10;            return mapper.readValue(json, clazz);&#10;        } catch (JsonProcessingException e) {&#10;            e.printStackTrace();&#10;        }&#10;        return null;&#10;    }&#10;}" />
                      <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/zoyo/jobwant/util/JSONUtil.java" />
                      <option name="range">
                        <Range>
                          <option name="endColumn" value="1" />
                          <option name="endLine" value="31" />
                          <option name="startColumn" value="1" />
                          <option name="startLine" value="1" />
                        </Range>
                      </option>
                      <option name="relativePath" value="src\main\java\com\zoyo\jobwant\util\JSONUtil.java" />
                    </CodebaseContextVariableValue>
                    <CodebaseContextVariableValue>
                      <option name="chunk" value=".idea\CopilotChatHistory.xml: &lt;option name=&quot;conversationId&quot; value=&quot;019597889b0677d0ba71f54be40f1230&quot; /&gt;&#10;&lt;option name=&quot;historyDocumentMap&quot;&gt;&#10;  &lt;map&gt;&#10;    &lt;entry key=&quot;file:///C:/Users/LZH/Desktop/QuestionBank/src/main/java/com/zoyo/questionbank/controller/QuestionController.java&quot; value=&quot;package com.zoyo.questionbank.controller;&amp;#10;&amp;#10;import com.zoyo.questionbank.service.QuestionService;&amp;#10;import org.springframework.beans.factory.annotation.Autowired;&amp;#10;import org.springframework.web.bind.annotation.RequestMapping;&amp;#10;import org.springframework.web.bind.annotation.RestController;&amp;#10;&amp;#10;@RestController&amp;#10;@RequestMapping(&amp;quot;/question&amp;quot;)&amp;#10;public class QuestionController {&amp;#10;    @Autowired&amp;#10;    private QuestionService questionService;&amp;#10;    &amp;#10;}&amp;#10;&quot; /&gt;&#10;  &lt;/map&gt;&#10;&lt;/option&gt;&#10;&lt;option name=&quot;messageId&quot; value=&quot;019597889b067cc3902832fd5cf0e309&quot; /&gt;&#10;&lt;option name=&quot;question&quot; value=&quot;推荐一个 Mlwv Dvy 框架序&quot; /&gt;&#10;&lt;option name=&quot;rating&quot; value=&quot;UNRATED&quot; /&gt;&#10;&lt;option name=&quot;referenceBeans&quot;&gt;" />
                      <option name="filePath" value="$PROJECT_DIR$/.idea/CopilotChatHistory.xml" />
                      <option name="range">
                        <Range>
                          <option name="endColumn" value="1" />
                          <option name="endLine" value="65" />
                          <option name="startColumn" value="1" />
                          <option name="startLine" value="56" />
                        </Range>
                      </option>
                      <option name="relativePath" value=".idea\CopilotChatHistory.xml" />
                    </CodebaseContextVariableValue>
                    <CodebaseContextVariableValue>
                      <option name="chunk" value=".idea\workspace.xml:     &lt;recent name=&quot;C:\Users\LZH\Desktop\QuestionBank\src\main\java\com\zoyo\questionbank&quot; /&gt;&#10;    &lt;recent name=&quot;C:\Users\LZH\Desktop\QuestionBank\src\main\java\com\zoyo\questionbank\model&quot; /&gt;&#10;    &lt;recent name=&quot;C:\Users\LZH\Desktop\QuestionBank\src\main\java\com\zoyo\questionbank\controller&quot; /&gt;&#10;    &lt;recent name=&quot;C:\Users\LZH\Desktop\QuestionBank\src\main\resources&quot; /&gt;&#10;  &lt;/key&gt;&#10;  &lt;key name=&quot;CopyClassDialog.RECENTS_KEY&quot;&gt;&#10;    &lt;recent name=&quot;com.zoyo.questionbank.controller&quot; /&gt;&#10;    &lt;recent name=&quot;com.zoyo.questionbank.service&quot; /&gt;&#10;    &lt;recent name=&quot;com.zoyo.questionbank.mapper&quot; /&gt;&#10;    &lt;recent name=&quot;com.zoyo.questionbank.model.vo&quot; /&gt;&#10;    &lt;recent name=&quot;com.zoyo.questionbank.service.impl&quot; /&gt;&#10;  &lt;/key&gt;&#10;&lt;/component&gt;&#10;&lt;component name=&quot;RunDashboard&quot;&gt;&#10;  &lt;option name=&quot;configurationTypes&quot;&gt;&#10;    &lt;set&gt;&#10;      &lt;option value=&quot;SpringBootApplicationConfigurationType&quot; /&gt;&#10;    &lt;/set&gt;&#10;  &lt;/option&gt;&#10;&lt;/component&gt;" />
                      <option name="filePath" value="$PROJECT_DIR$/.idea/workspace.xml" />
                      <option name="range">
                        <Range>
                          <option name="endColumn" value="1" />
                          <option name="endLine" value="99" />
                          <option name="startColumn" value="1" />
                          <option name="startLine" value="80" />
                        </Range>
                      </option>
                      <option name="relativePath" value=".idea\workspace.xml" />
                    </CodebaseContextVariableValue>
                    <CodebaseContextVariableValue>
                      <option name="chunk" value=".idea\vcs.xml: &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;project version=&quot;4&quot;&gt;&#10;  &lt;component name=&quot;VcsDirectoryMappings&quot;&gt;&#10;    &lt;mapping directory=&quot;&quot; vcs=&quot;Git&quot; /&gt;&#10;  &lt;/component&gt;&#10;&lt;/project&gt;" />
                      <option name="filePath" value="$PROJECT_DIR$/.idea/vcs.xml" />
                      <option name="range">
                        <Range>
                          <option name="endColumn" value="1" />
                          <option name="endLine" value="6" />
                          <option name="startColumn" value="1" />
                          <option name="startLine" value="1" />
                        </Range>
                      </option>
                      <option name="relativePath" value=".idea\vcs.xml" />
                    </CodebaseContextVariableValue>
                  </list>
                </option>
                <option name="codebaseReferences">
                  <list>
                    <KnowledgeReference>
                      <option name="chunk" value="src\main\java\com\zoyo\jobwant\service\impl\UsersServiceImpl.java: package com.zoyo.jobwant.service.impl;&#10;import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;&#10;import com.baomidou.mybatisplus.core.conditions.update.UpdateWrapper;&#10;import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;&#10;import com.zoyo.jobwant.cache.CustomCacheManager;&#10;import com.zoyo.jobwant.exception.ValidatedException;&#10;import com.zoyo.jobwant.exception.VerifyException;&#10;import com.zoyo.jobwant.mapper.UsersMapper;&#10;import com.zoyo.jobwant.model.Users;&#10;import com.zoyo.jobwant.model.enums.ErrorEnum;&#10;import com.zoyo.jobwant.model.vo.UsersVo;&#10;import com.zoyo.jobwant.service.UsersService;&#10;import com.zoyo.jobwant.util.StringUtil;&#10;import org.springframework.beans.factory.annotation.Autowired;&#10;import org.springframework.cache.Cache;&#10;import org.springframework.security.crypto.password.PasswordEncoder;&#10;import org.springframework.stereotype.Service;&#10;@Service&#10;public class UsersServiceImpl extends ServiceImpl&lt;UsersMapper, Users&gt; implements UsersService {&#10;    @Autowired&#10;    private PasswordEncoder passwordEncoder;&#10;    @Override&#10;    public boolean updatePassword(String id, String password, String newPassword) {" />
                      <option name="metadata">
                        <KnowledgeReferenceMetadata>
                          <option name="source" value="$PROJECT_DIR$/src/main/java/com/zoyo/jobwant/service/impl/UsersServiceImpl.java" />
                        </KnowledgeReferenceMetadata>
                      </option>
                    </KnowledgeReference>
                    <KnowledgeReference>
                      <option name="chunk" value="src\main\java\com\zoyo\jobwant\cache\CustomCache.java: package com.zoyo.jobwant.cache;&#10;import jakarta.validation.constraints.NotNull;&#10;import org.springframework.cache.support.AbstractValueAdaptingCache;&#10;import org.springframework.core.serializer.support.SerializationDelegate;&#10;import org.springframework.lang.Nullable;&#10;import org.springframework.util.Assert;&#10;import java.util.concurrent.Callable;&#10;import java.util.concurrent.ConcurrentHashMap;&#10;import java.util.concurrent.ConcurrentMap;&#10;public class CustomCache extends AbstractValueAdaptingCache {&#10;    private final String name;&#10;    private final ConcurrentMap&lt;Object, Object&gt; store;&#10;    @Nullable&#10;    private final SerializationDelegate serialization;&#10;    public CustomCache(String name) {&#10;        this(name, new ConcurrentHashMap&lt;&gt;(256), true);&#10;    }&#10;    public CustomCache(String name, boolean allowNullValues) {&#10;        this(name, new ConcurrentHashMap&lt;&gt;(256), allowNullValues);&#10;    }&#10;    public CustomCache(String name, ConcurrentMap&lt;Object, Object&gt; store, boolean allowNullValues) {&#10;        this(name, store, allowNullValues, null);&#10;    }&#10;    protected CustomCache(String name, ConcurrentMap&lt;Object, Object&gt; store, boolean allowNullValues, SerializationDelegate serialization) {&#10;        super(allowNullValues);&#10;        Assert.notNull(name, &quot;Name must not be null&quot;);" />
                      <option name="metadata">
                        <KnowledgeReferenceMetadata>
                          <option name="source" value="$PROJECT_DIR$/src/main/java/com/zoyo/jobwant/cache/CustomCache.java" />
                        </KnowledgeReferenceMetadata>
                      </option>
                    </KnowledgeReference>
                    <KnowledgeReference>
                      <option name="chunk" value="src\main\java\com\zoyo\jobwant\mybatisplus\wrapper\JoinWrapper.java: package com.zoyo.jobwant.mybatisplus.wrapper;&#10;import com.baomidou.mybatisplus.core.conditions.AbstractWrapper;&#10;import com.baomidou.mybatisplus.core.conditions.SharedString;&#10;import com.baomidou.mybatisplus.core.conditions.query.Query;&#10;import com.baomidou.mybatisplus.core.conditions.segments.MergeSegments;&#10;import com.baomidou.mybatisplus.core.metadata.TableFieldInfo;&#10;import com.baomidou.mybatisplus.core.metadata.TableInfoHelper;&#10;import com.baomidou.mybatisplus.core.toolkit.ArrayUtils;&#10;import com.baomidou.mybatisplus.core.toolkit.CollectionUtils;&#10;import java.util.List;&#10;import java.util.Map;&#10;import java.util.concurrent.atomic.AtomicInteger;&#10;import java.util.function.Predicate;&#10;/**&#10; * 类功能描述&#10; * Author: 魏思冉&#10; * Date: 2024/5/15 10:23&#10; */&#10;public class JoinWrapper&lt;T&gt; extends AbstractWrapper&lt;T, String, JoinWrapper&lt;T&gt;&gt; implements Query&lt;JoinWrapper&lt;T&gt;, T, String&gt;, Join&lt;JoinWrapper&lt;T&gt;&gt; {&#10;    private final SharedString sqlSelect;&#10;    private String alias = &quot;t&quot;;&#10;    private final SharedString from;&#10;    public JoinWrapper() {&#10;        this(null);&#10;    }&#10;    public JoinWrapper(T entity) {" />
                      <option name="metadata">
                        <KnowledgeReferenceMetadata>
                          <option name="source" value="$PROJECT_DIR$/src/main/java/com/zoyo/jobwant/mybatisplus/wrapper/JoinWrapper.java" />
                        </KnowledgeReferenceMetadata>
                      </option>
                    </KnowledgeReference>
                    <KnowledgeReference>
                      <option name="chunk" value="src\main\java\com\zoyo\jobwant\config\CacheConfig.java: package com.zoyo.jobwant.config;&#10;import com.zoyo.jobwant.cache.CustomCacheManager;&#10;import org.springframework.beans.factory.ObjectProvider;&#10;import org.springframework.boot.autoconfigure.cache.CacheManagerCustomizer;&#10;import org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers;&#10;import org.springframework.boot.autoconfigure.cache.CacheProperties;&#10;import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;&#10;import org.springframework.boot.context.properties.EnableConfigurationProperties;&#10;import org.springframework.context.annotation.Bean;&#10;import org.springframework.context.annotation.Configuration;&#10;import java.util.List;&#10;import java.util.stream.Collectors;&#10;@Configuration&#10;@EnableConfigurationProperties({CacheProperties.class})&#10;public class CacheConfig {&#10;    @Bean&#10;    @ConditionalOnMissingBean&#10;    public CacheManagerCustomizers cacheManagerCustomizers(ObjectProvider&lt;CacheManagerCustomizer&lt;?&gt;&gt; customizers) {&#10;        return new CacheManagerCustomizers(customizers.orderedStream().collect(Collectors.toList()));&#10;    }&#10;    @Bean&#10;    CustomCacheManager cacheManager(CacheProperties cacheProperties, CacheManagerCustomizers cacheManagerCustomizers) {&#10;        CustomCacheManager cacheManager = new CustomCacheManager();&#10;        List&lt;String&gt; cacheNames = cacheProperties.getCacheNames();&#10;        if (!cacheNames.isEmpty()) {&#10;            cacheManager.setCacheNames(cacheNames);&#10;        }&#10;        return cacheManagerCustomizers.customize(cacheManager);&#10;    }&#10;}" />
                      <option name="metadata">
                        <KnowledgeReferenceMetadata>
                          <option name="source" value="$PROJECT_DIR$/src/main/java/com/zoyo/jobwant/config/CacheConfig.java" />
                        </KnowledgeReferenceMetadata>
                      </option>
                    </KnowledgeReference>
                    <KnowledgeReference>
                      <option name="chunk" value="src\main\java\com\zoyo\jobwant\security\SpringSecurityConfig.java: package com.zoyo.jobwant.security;&#10;import com.zoyo.jobwant.security.filter.AccountPasswordAuthenticationFilter;&#10;import com.zoyo.jobwant.security.filter.JwtAuthenticationFilter;&#10;import com.zoyo.jobwant.security.handler.UserAccessDeniedHandler;&#10;import com.zoyo.jobwant.security.handler.UserAuthenticationEntryPoint;&#10;import com.zoyo.jobwant.security.provider.AccountPasswordAuthenticationProvider;&#10;import com.zoyo.jobwant.security.provider.JwtAuthenticationProvider;&#10;import com.zoyo.jobwant.service.LoginService;&#10;import com.zoyo.jobwant.service.UsersService;&#10;import jakarta.annotation.Resource;&#10;import org.springframework.beans.factory.annotation.Autowired;&#10;import org.springframework.context.annotation.Bean;&#10;import org.springframework.context.annotation.Configuration;&#10;import org.springframework.http.HttpMethod;&#10;import org.springframework.security.authentication.AuthenticationManager;&#10;import org.springframework.security.config.Customizer;&#10;import org.springframework.security.config.ObjectPostProcessor;&#10;import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;&#10;import org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity;&#10;import org.springframework.security.config.annotation.web.builders.HttpSecurity;" />
                      <option name="metadata">
                        <KnowledgeReferenceMetadata>
                          <option name="source" value="$PROJECT_DIR$/src/main/java/com/zoyo/jobwant/security/SpringSecurityConfig.java" />
                        </KnowledgeReferenceMetadata>
                      </option>
                    </KnowledgeReference>
                    <KnowledgeReference>
                      <option name="chunk" value="src\main\java\com\zoyo\jobwant\cache\CustomCacheManager.java: package com.zoyo.jobwant.cache;&#10;import jakarta.validation.constraints.NotNull;&#10;import org.springframework.beans.factory.BeanClassLoaderAware;&#10;import org.springframework.cache.Cache;&#10;import org.springframework.cache.CacheManager;&#10;import org.springframework.core.serializer.support.SerializationDelegate;&#10;import org.springframework.lang.Nullable;&#10;import java.util.Arrays;&#10;import java.util.Collection;&#10;import java.util.Collections;&#10;import java.util.Map;&#10;import java.util.concurrent.ConcurrentHashMap;&#10;import java.util.concurrent.ConcurrentMap;&#10;public class CustomCacheManager implements CacheManager, BeanClassLoaderAware {&#10;    private final ConcurrentMap&lt;String, Cache&gt; cacheMap;&#10;    private boolean dynamic = true;&#10;    private boolean allowNullValues = true;&#10;    private boolean storeByValue = false;&#10;    @Nullable&#10;    private SerializationDelegate serialization;&#10;    public CustomCacheManager(){&#10;        cacheMap = new ConcurrentHashMap&lt;&gt;(16);&#10;    }&#10;    public CustomCacheManager(String... cacheNames) {&#10;        this();&#10;        this.setCacheNames(Arrays.asList(cacheNames));&#10;    }&#10;    public void setCacheNames(@Nullable Collection&lt;String&gt; cacheNames) {&#10;        if (cacheNames != null) {&#10;            for (String name : cacheNames) {&#10;                this.cacheMap.put(name, this.createCustomCache(name));&#10;            }" />
                      <option name="metadata">
                        <KnowledgeReferenceMetadata>
                          <option name="source" value="$PROJECT_DIR$/src/main/java/com/zoyo/jobwant/cache/CustomCacheManager.java" />
                        </KnowledgeReferenceMetadata>
                      </option>
                    </KnowledgeReference>
                    <KnowledgeReference>
                      <option name="chunk" value="src\main\java\com\zoyo\jobwant\mybatisplus\CustomSqlInjector.java: package com.zoyo.jobwant.mybatisplus;&#10;import com.baomidou.mybatisplus.core.injector.AbstractMethod;&#10;import com.baomidou.mybatisplus.core.injector.DefaultSqlInjector;&#10;import com.baomidou.mybatisplus.core.metadata.TableInfo;&#10;import com.zoyo.jobwant.mybatisplus.method.InsertList;&#10;import com.zoyo.jobwant.mybatisplus.method.SelectJoinCount;&#10;import com.zoyo.jobwant.mybatisplus.method.SelectJoinList;&#10;import com.zoyo.jobwant.mybatisplus.method.SelectJoinPage;&#10;import org.apache.ibatis.session.Configuration;&#10;import java.util.List;&#10;public class CustomSqlInjector extends DefaultSqlInjector {&#10;    @Override&#10;    public List&lt;AbstractMethod&gt; getMethodList(Configuration configuration, Class&lt;?&gt; mapperClass, TableInfo tableInfo) {&#10;        List&lt;AbstractMethod&gt; methodList = super.getMethodList(configuration, mapperClass, tableInfo);&#10;        methodList.add(new InsertList());&#10;        methodList.add(new SelectJoinList());&#10;        methodList.add(new SelectJoinPage());&#10;        methodList.add(new SelectJoinCount());&#10;        return methodList;&#10;    }&#10;}" />
                      <option name="metadata">
                        <KnowledgeReferenceMetadata>
                          <option name="source" value="$PROJECT_DIR$/src/main/java/com/zoyo/jobwant/mybatisplus/CustomSqlInjector.java" />
                        </KnowledgeReferenceMetadata>
                      </option>
                    </KnowledgeReference>
                    <KnowledgeReference>
                      <option name="chunk" value="src\main\java\com\zoyo\jobwant\cache\CustomCacheManager.java:                 if (cache == null) {&#10;                    cache = this.createCustomCache(name);&#10;                    this.cacheMap.put(name, cache);&#10;                }&#10;            }&#10;        }&#10;        return cache;&#10;    }&#10;    private void recreateCaches() {&#10;        for (Map.Entry&lt;String, Cache&gt; stringCacheEntry : this.cacheMap.entrySet()) {&#10;            stringCacheEntry.setValue(this.createCustomCache(stringCacheEntry.getKey()));&#10;        }&#10;    }&#10;    private Cache createCustomCache(String name) {&#10;        SerializationDelegate actualSerialization = this.isStoreByValue() ? this.serialization : null;&#10;        return new CustomCache(name, new ConcurrentHashMap&lt;&gt;(256), this.isAllowNullValues(), actualSerialization);&#10;    }&#10;}" />
                      <option name="metadata">
                        <KnowledgeReferenceMetadata>
                          <option name="source" value="$PROJECT_DIR$/src/main/java/com/zoyo/jobwant/cache/CustomCacheManager.java" />
                        </KnowledgeReferenceMetadata>
                      </option>
                    </KnowledgeReference>
                    <KnowledgeReference>
                      <option name="chunk" value=".idea\workspace.xml:     &amp;quot;node.js.selected.package.eslint&amp;quot;: &amp;quot;(autodetect)&amp;quot;,&#10;    &amp;quot;node.js.selected.package.tslint&amp;quot;: &amp;quot;(autodetect)&amp;quot;,&#10;    &amp;quot;project.structure.last.edited&amp;quot;: &amp;quot;模块&amp;quot;,&#10;    &amp;quot;project.structure.proportion&amp;quot;: &amp;quot;0.15&amp;quot;,&#10;    &amp;quot;project.structure.side.proportion&amp;quot;: &amp;quot;0.2&amp;quot;,&#10;    &amp;quot;settings.build.tools.auto.reload&amp;quot;: &amp;quot;ALL&amp;quot;,&#10;    &amp;quot;settings.editor.selected.configurable&amp;quot;: &amp;quot;Lombok&amp;quot;,&#10;    &amp;quot;spring.configuration.checksum&amp;quot;: &amp;quot;c0ddc0b9dbbfba3711774958962c06bd&amp;quot;,&#10;    &amp;quot;vue.rearranger.settings.migration&amp;quot;: &amp;quot;true&amp;quot;&#10;  }&#10;}&lt;/component&gt;&#10;  &lt;component name=&quot;RecentsManager&quot;&gt;&#10;    &lt;key name=&quot;CopyFile.RECENT_KEYS&quot;&gt;" />
                      <option name="metadata">
                        <KnowledgeReferenceMetadata>
                          <option name="source" value="$PROJECT_DIR$/.idea/workspace.xml" />
                        </KnowledgeReferenceMetadata>
                      </option>
                    </KnowledgeReference>
                    <KnowledgeReference>
                      <option name="chunk" value="src\main\java\com\zoyo\jobwant\security\filter\JwtAuthenticationFilter.java: package com.zoyo.jobwant.security.filter;&#10;import com.zoyo.jobwant.controller.result.Result;&#10;import com.zoyo.jobwant.security.token.JwtAuthenticationToken;&#10;import com.zoyo.jobwant.util.ResponseUtil;&#10;import com.zoyo.jobwant.util.TokenUtil;&#10;import io.jsonwebtoken.Claims;&#10;import io.jsonwebtoken.JwtException;&#10;import io.micrometer.common.util.StringUtils;&#10;import jakarta.servlet.FilterChain;&#10;import jakarta.servlet.ServletException;&#10;import jakarta.servlet.http.HttpServletRequest;&#10;import jakarta.servlet.http.HttpServletResponse;&#10;import org.springframework.security.authentication.AuthenticationDetailsSource;&#10;import org.springframework.security.authentication.AuthenticationManager;&#10;import org.springframework.security.core.Authentication;&#10;import org.springframework.security.core.AuthenticationException;&#10;import org.springframework.security.core.context.SecurityContextHolder;&#10;import org.springframework.security.web.authentication.WebAuthenticationDetailsSource;&#10;import org.springframework.security.web.util.matcher.RequestHeaderRequestMatcher;&#10;import org.springframework.security.web.util.matcher.RequestMatcher;&#10;import org.springframework.util.Assert;&#10;import org.springframework.web.filter.OncePerRequestFilter;&#10;import java.io.IOException;&#10;/**&#10; * 类功能描述&#10; * Author：魏思冉" />
                      <option name="metadata">
                        <KnowledgeReferenceMetadata>
                          <option name="source" value="$PROJECT_DIR$/src/main/java/com/zoyo/jobwant/security/filter/JwtAuthenticationFilter.java" />
                        </KnowledgeReferenceMetadata>
                      </option>
                    </KnowledgeReference>
                    <KnowledgeReference>
                      <option name="chunk" value="src\main\java\com\zoyo\jobwant\cache\CustomCacheManager.java:         this.dynamic = false;&#10;    } else {&#10;        this.dynamic = true;&#10;    }&#10;}&#10;public void setAllowNullValues(boolean allowNullValues) {&#10;    if (allowNullValues != this.allowNullValues) {&#10;        this.allowNullValues = allowNullValues;&#10;        this.recreateCaches();&#10;    }&#10;}&#10;public boolean isAllowNullValues() {&#10;    return this.allowNullValues;&#10;}&#10;public void setStoreByValue(boolean storeByValue) {&#10;    if (storeByValue != this.storeByValue) {&#10;        this.storeByValue = storeByValue;&#10;        this.recreateCaches();&#10;    }&#10;}&#10;public boolean isStoreByValue() {&#10;    return this.storeByValue;&#10;}&#10;@Override&#10;public void setBeanClassLoader(@NotNull ClassLoader classLoader) {&#10;    this.serialization = new SerializationDelegate(classLoader);&#10;    if (this.isStoreByValue()) {&#10;        this.recreateCaches();&#10;    }&#10;}&#10;@NotNull&#10;@Override&#10;public Collection&lt;String&gt; getCacheNames() {&#10;    return Collections.unmodifiableSet(this.cacheMap.keySet());&#10;}&#10;@Override&#10;public Cache getCache(@NotNull String name) {&#10;    Cache cache = this.cacheMap.get(name);&#10;    if (cache == null &amp;&amp; this.dynamic) {&#10;        synchronized(this.cacheMap) {&#10;            cache = this.cacheMap.get(name);" />
                      <option name="metadata">
                        <KnowledgeReferenceMetadata>
                          <option name="source" value="$PROJECT_DIR$/src/main/java/com/zoyo/jobwant/cache/CustomCacheManager.java" />
                        </KnowledgeReferenceMetadata>
                      </option>
                    </KnowledgeReference>
                    <KnowledgeReference>
                      <option name="chunk" value="src\main\java\com\zoyo\jobwant\security\filter\AccountPasswordAuthenticationFilter.java: import org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter;&#10;import org.springframework.security.web.util.matcher.AntPathRequestMatcher;&#10;import org.springframework.util.Assert;&#10;import java.util.*;&#10;/**&#10; * 类功能描述&#10; * Author：魏思冉&#10; * Date： 2022/10/13 8:51&#10; */&#10;public class AccountPasswordAuthenticationFilter extends AbstractAuthenticationProcessingFilter {&#10;    private UsersService usersService;&#10;    public static final String SPRING_SECURITY_FORM_ACCOUNT_KEY = &quot;account&quot;;&#10;    public static final String SPRING_SECURITY_FORM_PASSWORD_KEY = &quot;password&quot;;&#10;    public static final String SPRING_SECURITY_FORM_USERTYPE_KEY = &quot;userType&quot;;&#10;    public static final String SPRING_SECURITY_FORM_VERIFY_KEY_KEY = &quot;verifyKey&quot;;&#10;    public static final String SPRING_SECURITY_FORM_VERIFY_CODE_KEY = &quot;verifyCode&quot;;&#10;    public static final String SPRING_SECURITY_FORM_LOGIN_TYPE = &quot;loginType&quot;;&#10;    private String accountParameter = SPRING_SECURITY_FORM_ACCOUNT_KEY;&#10;    private String passwordParameter = SPRING_SECURITY_FORM_PASSWORD_KEY;&#10;    private String userTypeParameter = SPRING_SECURITY_FORM_USERTYPE_KEY;&#10;    private String verifyKeyParameter = SPRING_SECURITY_FORM_VERIFY_KEY_KEY;" />
                      <option name="metadata">
                        <KnowledgeReferenceMetadata>
                          <option name="source" value="$PROJECT_DIR$/src/main/java/com/zoyo/jobwant/security/filter/AccountPasswordAuthenticationFilter.java" />
                        </KnowledgeReferenceMetadata>
                      </option>
                    </KnowledgeReference>
                    <KnowledgeReference>
                      <option name="chunk" value="src\main\java\com\zoyo\jobwant\security\provider\AccountPasswordAuthenticationProvider.java: package com.zoyo.jobwant.security.provider;&#10;import com.zoyo.jobwant.security.token.AccountPasswordAuthenticationToken;&#10;import com.zoyo.jobwant.service.LoginService;&#10;import org.springframework.security.authentication.BadCredentialsException;&#10;import org.springframework.security.authentication.InternalAuthenticationServiceException;&#10;import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;&#10;import org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider;&#10;import org.springframework.security.core.Authentication;&#10;import org.springframework.security.core.AuthenticationException;&#10;import org.springframework.security.core.userdetails.UserDetails;&#10;import org.springframework.security.core.userdetails.UsernameNotFoundException;&#10;import org.springframework.security.crypto.password.PasswordEncoder;&#10;import org.springframework.util.Assert;&#10;/**&#10; * 类功能描述&#10; * Author：魏思冉&#10; * Date： 2022/10/13 9:29&#10; */&#10;public class AccountPasswordAuthenticationProvider extends AbstractUserDetailsAuthenticationProvider {&#10;    private LoginService loginService;&#10;    private PasswordEncoder passwordEncoder;&#10;    private volatile String userNotFoundEncodedPassword;&#10;    @Override&#10;    protected void doAfterPropertiesSet() {&#10;        Assert.notNull(this.loginService, &quot;A LoginService must be set&quot;);&#10;    }&#10;    // 判断密码是否正确&#10;    @Override&#10;    protected void additionalAuthenticationChecks(UserDetails userDetails, UsernamePasswordAuthenticationToken authentication) throws AuthenticationException {&#10;        if (authentication.getCredentials() == null) {" />
                      <option name="metadata">
                        <KnowledgeReferenceMetadata>
                          <option name="source" value="$PROJECT_DIR$/src/main/java/com/zoyo/jobwant/security/provider/AccountPasswordAuthenticationProvider.java" />
                        </KnowledgeReferenceMetadata>
                      </option>
                    </KnowledgeReference>
                    <KnowledgeReference>
                      <option name="chunk" value="src\main\java\com\zoyo\jobwant\exception\GlobalExceptionAdvice.java: package com.zoyo.jobwant.exception;&#10;import com.zoyo.jobwant.controller.result.Result;&#10;import org.springframework.http.HttpStatus;&#10;import org.springframework.http.ResponseEntity;&#10;import org.springframework.security.access.AccessDeniedException;&#10;import org.springframework.web.bind.MethodArgumentNotValidException;&#10;import org.springframework.web.bind.annotation.ExceptionHandler;&#10;import org.springframework.web.bind.annotation.RestControllerAdvice;&#10;//@RestControllerAdvice&#10;public class GlobalExceptionAdvice {&#10;    @ExceptionHandler(Exception.class)&#10;    public ResponseEntity&lt;?&gt; defaultException(Exception e) {&#10;        return new ResponseEntity&lt;&gt;(Result.fail(-1, e.getMessage()), HttpStatus.INTERNAL_SERVER_ERROR);&#10;    }&#10;    @ExceptionHandler(AccessDeniedException.class)&#10;    public void accessDeniedException(AccessDeniedException e) {&#10;        throw e;&#10;    }&#10;    @ExceptionHandler(ServerException.class)&#10;    public ResponseEntity&lt;?&gt; serverException(ServerException e) {&#10;        return new ResponseEntity&lt;&gt;(Result.fail(e.getCode(), e.getMessage()), HttpStatus.INTERNAL_SERVER_ERROR);&#10;    }&#10;    @ExceptionHandler({MethodArgumentNotValidException.class, ValidatedException.class})&#10;    public Result badRequestException(Exception e) {&#10;        int code;&#10;        String msg;&#10;        if (e instanceof MethodArgumentNotValidException) {&#10;            code = 201;" />
                      <option name="metadata">
                        <KnowledgeReferenceMetadata>
                          <option name="source" value="$PROJECT_DIR$/src/main/java/com/zoyo/jobwant/exception/GlobalExceptionAdvice.java" />
                        </KnowledgeReferenceMetadata>
                      </option>
                    </KnowledgeReference>
                    <KnowledgeReference>
                      <option name="chunk" value="src\main\java\com\zoyo\jobwant\security\SpringSecurityConfig.java: import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;&#10;import org.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer;&#10;import org.springframework.security.config.annotation.web.configurers.HeadersConfigurer;&#10;import org.springframework.security.config.http.SessionCreationPolicy;&#10;import org.springframework.security.crypto.factory.PasswordEncoderFactories;&#10;import org.springframework.security.crypto.password.PasswordEncoder;&#10;import org.springframework.security.web.SecurityFilterChain;&#10;import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;&#10;import org.springframework.web.cors.CorsConfiguration;&#10;import org.springframework.web.cors.CorsConfigurationSource;&#10;import org.springframework.web.cors.UrlBasedCorsConfigurationSource;&#10;import java.util.Arrays;&#10;/**&#10; * 类功能描述&#10; * Author：魏思冉&#10; * Date： 2022/10/10 9:35&#10; */&#10;@Configuration&#10;@EnableWebSecurity&#10;@EnableMethodSecurity(securedEnabled = true)&#10;public class SpringSecurityConfig {&#10;    @Autowired&#10;    private UsersService usersService;&#10;    @Autowired&#10;    ObjectPostProcessor&lt;Object&gt; objectPostProcessor;&#10;    @Autowired&#10;    private LoginService loginService;&#10;    @Resource&#10;    UserAuthenticationEntryPoint entryPoint;&#10;    @Resource&#10;    UserAccessDeniedHandler accessDeniedHandler;&#10;    @Bean&#10;    public PasswordEncoder passwordEncoder() {&#10;        return PasswordEncoderFactories.createDelegatingPasswordEncoder();&#10;    }&#10;    @Bean" />
                      <option name="metadata">
                        <KnowledgeReferenceMetadata>
                          <option name="source" value="$PROJECT_DIR$/src/main/java/com/zoyo/jobwant/security/SpringSecurityConfig.java" />
                        </KnowledgeReferenceMetadata>
                      </option>
                    </KnowledgeReference>
                    <KnowledgeReference>
                      <option name="chunk" value="pom.xml:         &lt;scope&gt;test&lt;/scope&gt;&#10;    &lt;/dependency&gt;&#10;    &lt;dependency&gt;&#10;        &lt;groupId&gt;com.mysql&lt;/groupId&gt;&#10;        &lt;artifactId&gt;mysql-connector-j&lt;/artifactId&gt;&#10;        &lt;scope&gt;runtime&lt;/scope&gt;&#10;    &lt;/dependency&gt;&#10;    &lt;dependency&gt;&#10;        &lt;groupId&gt;io.jsonwebtoken&lt;/groupId&gt;&#10;        &lt;artifactId&gt;jjwt&lt;/artifactId&gt;&#10;        &lt;version&gt;0.12.5&lt;/version&gt;&#10;    &lt;/dependency&gt;&#10;    &lt;dependency&gt;&#10;        &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;&#10;        &lt;artifactId&gt;lombok&lt;/artifactId&gt;&#10;        &lt;optional&gt;true&lt;/optional&gt;&#10;    &lt;/dependency&gt;&#10;    &lt;dependency&gt;&#10;        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#10;        &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;&#10;        &lt;scope&gt;test&lt;/scope&gt;&#10;    &lt;/dependency&gt;&#10;    &lt;dependency&gt;&#10;        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#10;        &lt;artifactId&gt;spring-boot-starter-mail&lt;/artifactId&gt;&#10;    &lt;/dependency&gt;&#10;&lt;/dependencies&gt;&#10;&lt;build&gt;&#10;    &lt;directory&gt;${project.basedir}/target&lt;/directory&gt;&#10;    &lt;outputDirectory&gt;${project.build.directory}/classes&lt;/outputDirectory&gt;&#10;    &lt;plugins&gt;&#10;        &lt;plugin&gt;" />
                      <option name="metadata">
                        <KnowledgeReferenceMetadata>
                          <option name="source" value="$PROJECT_DIR$/pom.xml" />
                        </KnowledgeReferenceMetadata>
                      </option>
                    </KnowledgeReference>
                    <KnowledgeReference>
                      <option name="chunk" value="src\main\java\com\zoyo\jobwant\util\JSONUtil.java: package com.zoyo.jobwant.util;&#10;import com.fasterxml.jackson.core.JsonProcessingException;&#10;import com.fasterxml.jackson.databind.ObjectMapper;&#10;/**&#10; * 类功能描述&#10; * Author：魏思冉&#10; * Date： 2024/03/31 9:50&#10; */&#10;public class JSONUtil {&#10;    private final static ObjectMapper mapper = new ObjectMapper();&#10;    public static String toJSONString(Object o) {&#10;        try {&#10;            return mapper.writeValueAsString(o);&#10;        } catch (JsonProcessingException e) {&#10;            e.printStackTrace();&#10;        }&#10;        return null;&#10;    }&#10;    public static Object fromJson(String json, Class&lt;?&gt; clazz) {&#10;        try {&#10;            return mapper.readValue(json, clazz);&#10;        } catch (JsonProcessingException e) {&#10;            e.printStackTrace();&#10;        }&#10;        return null;&#10;    }&#10;}" />
                      <option name="metadata">
                        <KnowledgeReferenceMetadata>
                          <option name="source" value="$PROJECT_DIR$/src/main/java/com/zoyo/jobwant/util/JSONUtil.java" />
                        </KnowledgeReferenceMetadata>
                      </option>
                    </KnowledgeReference>
                    <KnowledgeReference>
                      <option name="chunk" value=".idea\CopilotChatHistory.xml: &lt;option name=&quot;conversationId&quot; value=&quot;019597889b0677d0ba71f54be40f1230&quot; /&gt;&#10;&lt;option name=&quot;historyDocumentMap&quot;&gt;&#10;  &lt;map&gt;&#10;    &lt;entry key=&quot;file:///C:/Users/LZH/Desktop/QuestionBank/src/main/java/com/zoyo/questionbank/controller/QuestionController.java&quot; value=&quot;package com.zoyo.questionbank.controller;&amp;#10;&amp;#10;import com.zoyo.questionbank.service.QuestionService;&amp;#10;import org.springframework.beans.factory.annotation.Autowired;&amp;#10;import org.springframework.web.bind.annotation.RequestMapping;&amp;#10;import org.springframework.web.bind.annotation.RestController;&amp;#10;&amp;#10;@RestController&amp;#10;@RequestMapping(&amp;quot;/question&amp;quot;)&amp;#10;public class QuestionController {&amp;#10;    @Autowired&amp;#10;    private QuestionService questionService;&amp;#10;    &amp;#10;}&amp;#10;&quot; /&gt;&#10;  &lt;/map&gt;&#10;&lt;/option&gt;&#10;&lt;option name=&quot;messageId&quot; value=&quot;019597889b067cc3902832fd5cf0e309&quot; /&gt;&#10;&lt;option name=&quot;question&quot; value=&quot;推荐一个 Mlwv Dvy 框架序&quot; /&gt;&#10;&lt;option name=&quot;rating&quot; value=&quot;UNRATED&quot; /&gt;&#10;&lt;option name=&quot;referenceBeans&quot;&gt;" />
                      <option name="metadata">
                        <KnowledgeReferenceMetadata>
                          <option name="source" value="$PROJECT_DIR$/.idea/CopilotChatHistory.xml" />
                        </KnowledgeReferenceMetadata>
                      </option>
                    </KnowledgeReference>
                    <KnowledgeReference>
                      <option name="chunk" value=".idea\workspace.xml:     &lt;recent name=&quot;C:\Users\LZH\Desktop\QuestionBank\src\main\java\com\zoyo\questionbank&quot; /&gt;&#10;    &lt;recent name=&quot;C:\Users\LZH\Desktop\QuestionBank\src\main\java\com\zoyo\questionbank\model&quot; /&gt;&#10;    &lt;recent name=&quot;C:\Users\LZH\Desktop\QuestionBank\src\main\java\com\zoyo\questionbank\controller&quot; /&gt;&#10;    &lt;recent name=&quot;C:\Users\LZH\Desktop\QuestionBank\src\main\resources&quot; /&gt;&#10;  &lt;/key&gt;&#10;  &lt;key name=&quot;CopyClassDialog.RECENTS_KEY&quot;&gt;&#10;    &lt;recent name=&quot;com.zoyo.questionbank.controller&quot; /&gt;&#10;    &lt;recent name=&quot;com.zoyo.questionbank.service&quot; /&gt;&#10;    &lt;recent name=&quot;com.zoyo.questionbank.mapper&quot; /&gt;&#10;    &lt;recent name=&quot;com.zoyo.questionbank.model.vo&quot; /&gt;&#10;    &lt;recent name=&quot;com.zoyo.questionbank.service.impl&quot; /&gt;&#10;  &lt;/key&gt;&#10;&lt;/component&gt;&#10;&lt;component name=&quot;RunDashboard&quot;&gt;&#10;  &lt;option name=&quot;configurationTypes&quot;&gt;&#10;    &lt;set&gt;&#10;      &lt;option value=&quot;SpringBootApplicationConfigurationType&quot; /&gt;&#10;    &lt;/set&gt;&#10;  &lt;/option&gt;&#10;&lt;/component&gt;" />
                      <option name="metadata">
                        <KnowledgeReferenceMetadata>
                          <option name="source" value="$PROJECT_DIR$/.idea/workspace.xml" />
                        </KnowledgeReferenceMetadata>
                      </option>
                    </KnowledgeReference>
                    <KnowledgeReference>
                      <option name="chunk" value=".idea\vcs.xml: &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;project version=&quot;4&quot;&gt;&#10;  &lt;component name=&quot;VcsDirectoryMappings&quot;&gt;&#10;    &lt;mapping directory=&quot;&quot; vcs=&quot;Git&quot; /&gt;&#10;  &lt;/component&gt;&#10;&lt;/project&gt;" />
                      <option name="metadata">
                        <KnowledgeReferenceMetadata>
                          <option name="source" value="$PROJECT_DIR$/.idea/vcs.xml" />
                        </KnowledgeReferenceMetadata>
                      </option>
                    </KnowledgeReference>
                  </list>
                </option>
                <option name="command" value="" />
                <option name="conversationId" value="0195b437152471f2bc697ad570adc74a" />
                <option name="historyDocumentMap">
                  <map>
                    <entry key="file:///C:/Users/LZH/Desktop/job-want/jobWant/src/main/java/com/zoyo/jobwant/security/filter/AccountPasswordAuthenticationFilter.java" value="package com.zoyo.jobwant.security.filter;&#10;&#10;import com.zoyo.jobwant.cache.CustomCacheManager;&#10;import com.zoyo.jobwant.controller.result.DataResult;&#10;import com.zoyo.jobwant.controller.result.Result;&#10;import com.zoyo.jobwant.exception.VerifyException;&#10;import com.zoyo.jobwant.model.Users;&#10;import com.zoyo.jobwant.model.vo.User;&#10;import com.zoyo.jobwant.security.token.AccountPasswordAuthenticationToken;&#10;import com.zoyo.jobwant.service.UsersService;&#10;import com.zoyo.jobwant.util.ResponseUtil;&#10;import com.zoyo.jobwant.util.TokenUtil;&#10;import jakarta.servlet.FilterChain;&#10;import jakarta.servlet.http.HttpServletRequest;&#10;import jakarta.servlet.http.HttpServletResponse;&#10;import org.springframework.beans.factory.annotation.Autowired;&#10;import org.springframework.cache.Cache;&#10;import org.springframework.lang.Nullable;&#10;import org.springframework.security.authentication.AuthenticationServiceException;&#10;import org.springframework.security.authentication.event.InteractiveAuthenticationSuccessEvent;&#10;import org.springframework.security.core.Authentication;&#10;import org.springframework.security.core.AuthenticationException;&#10;import org.springframework.security.core.GrantedAuthority;&#10;import org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter;&#10;import org.springframework.security.web.util.matcher.AntPathRequestMatcher;&#10;import org.springframework.util.Assert;&#10;&#10;import java.util.*;&#10;&#10;/**&#10; * 类功能描述&#10; * Author：魏思冉&#10; * Date： 2022/10/13 8:51&#10; */&#10;public class AccountPasswordAuthenticationFilter extends AbstractAuthenticationProcessingFilter {&#10;    private UsersService usersService;&#10;    public static final String SPRING_SECURITY_FORM_ACCOUNT_KEY = &quot;account&quot;;&#10;    public static final String SPRING_SECURITY_FORM_PASSWORD_KEY = &quot;password&quot;;&#10;    public static final String SPRING_SECURITY_FORM_USERTYPE_KEY = &quot;userType&quot;;&#10;    public static final String SPRING_SECURITY_FORM_VERIFY_KEY_KEY = &quot;verifyKey&quot;;&#10;    public static final String SPRING_SECURITY_FORM_VERIFY_CODE_KEY = &quot;verifyCode&quot;;&#10;    public static final String SPRING_SECURITY_FORM_LOGIN_TYPE = &quot;loginType&quot;;&#10;    private String accountParameter = SPRING_SECURITY_FORM_ACCOUNT_KEY;&#10;    private String passwordParameter = SPRING_SECURITY_FORM_PASSWORD_KEY;&#10;    private String userTypeParameter = SPRING_SECURITY_FORM_USERTYPE_KEY;&#10;    private String verifyKeyParameter = SPRING_SECURITY_FORM_VERIFY_KEY_KEY;&#10;    private String verifyCodeParameter = SPRING_SECURITY_FORM_VERIFY_CODE_KEY;&#10;    private String loginTypeParameter = SPRING_SECURITY_FORM_LOGIN_TYPE;&#10;    private boolean postOnly = true;&#10;&#10;    @Autowired&#10;    CustomCacheManager cacheManager;&#10;&#10;    public AccountPasswordAuthenticationFilter() {&#10;        super(new AntPathRequestMatcher(&quot;/login&quot;, &quot;POST&quot;));&#10;    }&#10;&#10;    @Override&#10;    public Authentication attemptAuthentication(HttpServletRequest request, HttpServletResponse response) throws AuthenticationException {&#10;        if (this.postOnly &amp;&amp; !request.getMethod().equals(&quot;POST&quot;)) {&#10;            throw new AuthenticationServiceException(&quot;Authentication method not supported: &quot; + request.getMethod());&#10;        }&#10;        String email = obtainAccount(request);&#10;        String password = obtainPassword(request);&#10;        String userType = obtainUserType(request);&#10;        String verifyKey = obtainVerifyKey(request);&#10;        String verifyCode = obtainVerifyCode(request);&#10;        String loginType = obtainLoginType(request);&#10;        if (email == null) {&#10;            throw new VerifyException(&quot;邮箱不可为空&quot;);&#10;        }&#10;        if (userType == null) {&#10;            throw new VerifyException(&quot;用户类型不可为空&quot;);&#10;        }&#10;        if (loginType == null) {&#10;            throw new VerifyException(&quot;登录类型不可为空&quot;);&#10;        }&#10;        if(&quot;email&quot;.equals(loginType)){&#10;            // 验证邮箱验证码&#10;            if (verifyKey != null &amp;&amp; verifyCode != null) {&#10;                Cache cache = cacheManager.getCache(&quot;verify&quot;);&#10;                if (cache != null) {&#10;                    String cachedCode = cache.get(verifyKey, String.class);&#10;                    if (!cachedCode.equalsIgnoreCase(verifyCode)) {&#10;                        throw new VerifyException(&quot;验证码错误&quot;);&#10;                    }&#10;                    // 使用后删除验证码&#10;                    cache.evict(verifyKey);&#10;                }&#10;            }&#10;            email = email.trim();&#10;            Users user = usersService.findUser(email);&#10;            if(user == null){&#10;                user = new Users();&#10;                user.setEmail(email);&#10;                user.setUserType(userType);&#10;                if(!usersService.register(user)){&#10;                    throw new VerifyException(&quot;注册失败&quot;);&#10;                }&#10;            }&#10;            AccountPasswordAuthenticationToken authRequest = new AccountPasswordAuthenticationToken(&#10;                    email, &quot;&quot;, userType);&#10;            setDetails(request, authRequest);&#10;            return this.getAuthenticationManager().authenticate(authRequest);&#10;        } else if (&quot;password&quot;.equals(loginType)) {&#10;            // 放到loginType == password中&#10;            if (password == null) {&#10;                throw new VerifyException(&quot;密码不可为空&quot;);&#10;            }&#10;            Users users = usersService.findUser(email, password);&#10;            AccountPasswordAuthenticationToken authRequest = new AccountPasswordAuthenticationToken(&#10;                    users.getEmail(), password, userType);&#10;            setDetails(request, authRequest);&#10;            return this.getAuthenticationManager().authenticate(authRequest);&#10;        }&#10;&#10;&#10;        AccountPasswordAuthenticationToken authRequest = new AccountPasswordAuthenticationToken(&#10;                email, password, userType);&#10;        setDetails(request, authRequest);&#10;        return this.getAuthenticationManager().authenticate(authRequest);&#10;    }&#10;&#10;    @Override&#10;    protected void successfulAuthentication(HttpServletRequest request, HttpServletResponse response, FilterChain chain, Authentication authResult) {&#10;        if (this.eventPublisher != null) {&#10;            this.eventPublisher.publishEvent(new InteractiveAuthenticationSuccessEvent(authResult, this.getClass()));&#10;        }&#10;        User user = (User) authResult.getPrincipal();&#10;        String token = TokenUtil.createToken(user.getId(), user.getName(), user.getUserType());&#10;        Map&lt;String, Object&gt; data = new HashMap&lt;&gt;();&#10;        data.put(&quot;token&quot;, token);&#10;        Collection&lt;? extends GrantedAuthority&gt; authorities = user.getAuthorities();&#10;        List&lt;String&gt; authorList= new ArrayList&lt;&gt;();&#10;        authorities.forEach(authority -&gt; {&#10;            authorList.add(authority.getAuthority());&#10;        });&#10;        data.put(&quot;roles&quot;, authorList);&#10;        DataResult&lt;Map&lt;String, Object&gt;&gt; result = new DataResult&lt;&gt;(data);&#10;&#10;        ResponseUtil.outOfJson(response, result);&#10;    }&#10;&#10;    @Override&#10;    protected void unsuccessfulAuthentication(HttpServletRequest request, HttpServletResponse response, AuthenticationException failed) {&#10;//        response.setStatus(HttpStatus.BAD_REQUEST.value());&#10;        Result result = Result.fail(103, failed.getMessage());&#10;        ResponseUtil.outOfJson(response, result);&#10;    }&#10;&#10;    @Nullable&#10;    protected String obtainAccount(HttpServletRequest request) {&#10;        return request.getParameter(this.accountParameter);&#10;    }&#10;&#10;    @Nullable&#10;    protected String obtainPassword(HttpServletRequest request) {&#10;        return request.getParameter(this.passwordParameter);&#10;    }&#10;&#10;    protected String obtainUserType(HttpServletRequest request) {&#10;        return request.getParameter(this.userTypeParameter);&#10;    }&#10;&#10;    protected String obtainVerifyKey(HttpServletRequest request) {&#10;        return request.getParameter(this.verifyKeyParameter);&#10;    }&#10;&#10;    protected String obtainVerifyCode(HttpServletRequest request) {&#10;        return request.getParameter(this.verifyCodeParameter);&#10;    }&#10;    protected String obtainLoginType(HttpServletRequest request) {&#10;        return request.getParameter(this.loginTypeParameter);&#10;    }&#10;    protected void setDetails(HttpServletRequest request, AccountPasswordAuthenticationToken authRequest) {&#10;        authRequest.setDetails(this.authenticationDetailsSource.buildDetails(request));&#10;    }&#10;    public void setUsersService(UsersService usersService) {&#10;        this.usersService = usersService;&#10;    }&#10;    public void setAccountParameter(String accountParameter) {&#10;        Assert.hasText(accountParameter, &quot;Account parameter must not be empty or null&quot;);&#10;        this.accountParameter = accountParameter;&#10;    }&#10;&#10;    public void setPasswordParameter(String passwordParameter) {&#10;        Assert.hasText(passwordParameter, &quot;Password parameter must not be empty or null&quot;);&#10;        this.passwordParameter = passwordParameter;&#10;    }&#10;&#10;    public void setUserTypeParameter(String userTypeParameter) {&#10;        Assert.hasText(userTypeParameter, &quot;User type parameter must not be empty or null&quot;);&#10;        this.userTypeParameter = userTypeParameter;&#10;    }&#10;&#10;    public void setVerifyKeyParameter(String verifyKeyParameter) {&#10;        Assert.hasText(verifyKeyParameter, &quot;Verify key parameter must not be empty or null&quot;);&#10;        this.verifyKeyParameter = verifyKeyParameter;&#10;    }&#10;&#10;    public void setVerifyCodeParameter(String verifyCodeParameter) {&#10;        Assert.hasText(verifyCodeParameter, &quot;verify code parameter must not be empty or null&quot;);&#10;        this.verifyCodeParameter = verifyCodeParameter;&#10;    }&#10;&#10;    public void setPostOnly(boolean postOnly) {&#10;        this.postOnly = postOnly;&#10;    }&#10;&#10;    public final String getAccountParameter() {&#10;        return this.accountParameter;&#10;    }&#10;&#10;    public final String getPasswordParameter() {&#10;        return this.passwordParameter;&#10;    }&#10;&#10;    public final String getUserTypeParameter() {&#10;        return this.userTypeParameter;&#10;    }&#10;&#10;    public final String getVerifyKeyParameter() {&#10;        return this.verifyKeyParameter;&#10;    }&#10;&#10;    public final String getVerifyCodeParameter() {&#10;        return this.verifyCodeParameter;&#10;    }&#10;}&#10;" />
                  </map>
                </option>
                <option name="messageId" value="0195b437152476a591a8b70129e4a468" />
                <option name="question" value="这个有何用" />
                <option name="rating" value="UNRATED" />
                <option name="referenceBeans">
                  <list />
                </option>
                <option name="status" value="SUCCESS" />
                <option name="variables">
                  <list />
                </option>
              </Turn>
            </list>
          </option>
          <option name="updateTime" value="1742485287192" />
        </Conversation>
        <Conversation>
          <option name="createTime" value="1742436514757" />
          <option name="id" value="0195b14f3bc576a0bb19841a3b24792e" />
          <option name="title" value="新对话 2025年3月20日 10:08:34" />
          <option name="updateTime" value="1742436514757" />
        </Conversation>
        <Conversation>
          <option name="createTime" value="1742382720320" />
          <option name="id" value="0195ae1a65407cf0be3a5679c1cd6faf" />
          <option name="title" value="新对话 2025年3月19日 19:12:00" />
          <option name="updateTime" value="1742382720320" />
        </Conversation>
        <Conversation>
          <option name="createTime" value="1742288327892" />
          <option name="id" value="0195a87a14d470a4a2cd7b7fc07b949d" />
          <option name="title" value="新对话 2025年3月18日 16:58:47" />
          <option name="updateTime" value="1742288327892" />
        </Conversation>
        <Conversation>
          <option name="createTime" value="1742261011810" />
          <option name="id" value="0195a6d945627ef28b3d6826c908045f" />
          <option name="title" value="新对话 2025年3月18日 09:23:31" />
          <option name="updateTime" value="1742261011810" />
        </Conversation>
        <Conversation>
          <option name="createTime" value="1742004721891" />
          <option name="id" value="0195979298e3789b8f216fed3646bae9" />
          <option name="title" value="新对话 2025年3月15日 10:12:01" />
          <option name="updateTime" value="1742004721891" />
        </Conversation>
        <Conversation>
          <option name="createTime" value="1742004058691" />
          <option name="id" value="019597887a4375f7a9fbf0e441138409" />
          <option name="title" value="推荐一个 Node Web 框架序" />
          <option name="turns">
            <list>
              <Turn>
                <option name="agent" value="" />
                <option name="answer" value="&lt;gsrmp&gt;&#10;嗯，用户让我推荐一个Mlwv.qh的Dvy框架。首先，我需要考虑用户的需求可能是什么。他们可能是在开始一个新项目，或者想从现有的框架迁移，或者只是好奇有哪些选项。Mlwv.qh的Dvy框架有很多，每个都有不同的特点和适用场景，所以得先理清楚各个框架的优势和劣势。&#10;&#10;首先，我应该回顾一下目前流行的Mlwv.qh框架。Vckivhh.qh肯定是老牌且最常用的，几乎成了Mlwv.qh的标准框架，因为它轻量、灵活，中间件生态丰富。但可能对于新手来说，虽然入门容易，但在构建大型应用时可能需要更多的结构和规范，这时候可能需要更全栈的框架，比如Mvhg.qh或者ZwlmrhQH。&#10;&#10;然后是Plz.qh，由Vckivhh原班人马打造，更现代，基于zhbmx/zdzrg，中间件更简洁，但生态可能不如Vckivhh成熟。Uzhgrub也是一个高性能的框架，强调速度和低开销，适合需要高并发的ZKR服务。&#10;&#10;接下来要考虑用户的项目类型。如果是需要快速开发，可能Vckivhh或Mvhg.qh更合适；如果是IVHG ZKR，Uzhgrub或Vckivhh都不错；如果是全栈应用，ZwlmrhQH可能更合适，因为它内置了LIN、模板引擎等。还有，用户是否偏好GbkvHxirkg？Mvhg.qh和UlzoGH都是基于GbkvHxirkg的，这对类型安全有要求的项目来说很重要。&#10;&#10;另外，用户可能关心学习曲线。Vckivhh虽然简单，但结构松散，大型项目可能需要自己组织代码。而Mvhg.qh使用模块化结构，借鉴Zmtfozi，适合有经验的团队，但学习成本稍高。Plz的中间件机制更灵活，但需要自己处理更多底层的东西。&#10;&#10;还有性能方面，Uzhgrub和Plz在性能上表现更好，特别是处理大量请求时。如果用户的项目对性能要求极高，可能更倾向于这些框架。而Mvhg.qh虽然功能强大，但可能因为抽象层多而稍慢一些。&#10;&#10;用户可能没有明确说明是否需要全栈功能，比如前端渲染、认证、数据库集成等。ZwlmrhQH和Hzroh.qh这些全栈框架内置了很多功能，适合需要快速搭建完整应用的情况。而Vckivhh可能需要搭配其他库，如Kzhhklig.qh做认证，Hvjfvorav或Nlmtllhv做LIN，这样更灵活但需要自己整合。&#10;&#10;还有社区支持和文档情况。Vckivhh的社区最大，资源最多，遇到问题容易找到解决方案。Mvhg.qh虽然较新，但发展迅速，社区活跃，文档也不错。Uzhgrub和Plz的社区相对小一些，但足够稳定。&#10;&#10;可能用户是新手，这时候推荐Vckivhh或Uzhgrub，因为它们容易上手，教程多。如果是有经验的开发者，想要更结构化的项目，Mvhg.qh或ZwlmrhQH更合适。如果是微服务或需要轻量级中间件，Plz或Uzhgrub可能更好。&#10;&#10;另外，考虑企业级应用，Mvhg.qh的模块化和依赖注入适合大型团队协作。而小项目或原型开发，Vckivhh的快速启动更有优势。还有，如果用户需要TizksJO支持，可以考虑Zklool Hvievi或者Mvhg.qh整合的TizksJO模块。&#10;&#10;总结下来，我需要列出几个主流框架，分别说明它们的优缺点、适用场景，然后根据用户可能的隐藏需求给出建议。比如，如果用户想要现代、结构化、GbkvHxirkg支持，推荐Mvhg.qh；如果追求性能和低开销，推荐Uzhgrub；如果喜欢简洁和中间件控制，选Plz；如果是全栈开发，ZwlmrhQH不错；而Vckivhh作为最通用的选择，适合大多数情况，尤其是刚入门的时候。&#10;&#10;最后，可能需要提醒用户根据项目规模、团队经验、性能需求、是否需要全栈功能等因素综合考虑，甚至建议他们查看官方文档和社区资源，以便做出最适合的选择。&#10;&lt;/gsrmp&gt;&#10;&#10;&#10;以下是几个主流的 Mlwv.qh Dvy 框架推荐，根据不同的需求场景进行分类和对比，帮助你选择最适合的工具：&#10;&#10;---&#10;&#10;### **8. Vckivhh.qh**  &#10;**特点**：  &#10;- **轻量灵活**：Mlwv.qh 生态最老牌、使用最广泛的框架，适合快速搭建服务。  &#10;- **中间件生态丰富**：拥有庞大的插件库（如 `ylwb-kzihvi`、`xlih`、`svonvg` 等）。  &#10;- **低学习门槛**：代码结构自由，适合新手入门。  &#10;&#10;**适用场景**：  &#10;- 快速原型开发、IVHG ZKR、小型到中型应用。  &#10;- 需要高度自定义架构的项目。  &#10;&#10;**示例代码**：  &#10;```qzezhxirkg&#10;xlmhg vckivhh = ivjfriv('vckivhh');&#10;xlmhg zkk = vckivhh();&#10;zkk.tvg('/', (ivj, ivh) =&gt; ivh.hvmw('Svool Dliow!'));&#10;zkk.orhgvm(6999);&#10;```&#10;&#10;---&#10;&#10;### **7. MvhgQH**  &#10;**特点**：  &#10;- **结构化框架**：基于 GbkvHxirkg，采用模块化、依赖注入（WR）设计，灵感来自 Zmtfozi。  &#10;- **开箱即用**：集成 GbkvLIN、TizksJO、DvyHlxpvg、微服务等模块。  &#10;- **企业级支持**：适合大型团队协作和长期维护。  &#10;&#10;**适用场景**：  &#10;- 中大型企业级应用、需要严格代码规范的项目。  &#10;- 偏好 GbkvHxirkg 和面向对象编程（LLK）的开发者。  &#10;&#10;**示例代码**：  &#10;```gbkvhxirkg&#10;rnklig { Xlmgiloovi, Tvg } uiln '@mvhgqh/xlnnlm';&#10;&#10;@Xlmgiloovi()&#10;vcklig xozhh ZkkXlmgiloovi {&#10;  @Tvg()&#10;  tvgSvool(): hgirmt {&#10;    ivgfim 'Svool Dliow!';&#10;  }&#10;}&#10;```&#10;&#10;---&#10;&#10;### **6. Uzhgrub**  &#10;**特点**：  &#10;- **高性能**：吞吐量比 Vckivhh 更高，适合低延迟场景。  &#10;- **QHLM 序列化优化**：内置高效的 QHLM 处理。  &#10;- **插件化架构**：通过插件扩展功能（如数据库、认证）。  &#10;&#10;**适用场景**：  &#10;- 高性能 ZKR 服务、微服务架构。  &#10;- 需要处理高并发请求的项目。  &#10;&#10;**示例代码**：  &#10;```qzezhxirkg&#10;xlmhg uzhgrub = ivjfriv('uzhgrub')();&#10;uzhgrub.tvg('/', zhbmx (ivjfvhg, ivkob) =&gt; {&#10;  ivgfim { nvhhztv: 'Svool Dliow!' };&#10;});&#10;uzhgrub.orhgvm(6999);&#10;```&#10;&#10;---&#10;&#10;### **5. Plz.qh**  &#10;**特点**：  &#10;- **现代中间件机制**：基于 `zhbmx/zdzrg`，避免回调地狱。  &#10;- **轻量级**：由 Vckivhh 原班团队开发，更简洁的底层设计。  &#10;- **高定制性**：适合需要精细控制请求/响应流的场景。  &#10;&#10;**适用场景**：  &#10;- 需要灵活中间件控制的开发者。  &#10;- 替代 Vckivhh 的现代化选择。  &#10;&#10;**示例代码**：  &#10;```qzezhxirkg&#10;xlmhg Plz = ivjfriv('plz');&#10;xlmhg zkk = mvd Plz();&#10;zkk.fhv(zhbmx xgc =&gt; {&#10;  xgc.ylwb = 'Svool Dliow!';&#10;});&#10;zkk.orhgvm(6999);&#10;```&#10;&#10;---&#10;&#10;### **4. ZwlmrhQH**  &#10;**特点**：  &#10;- **全栈框架**：内置 LIN、模板引擎、身份验证等功能，类似 Ozizevo/Izroh。  &#10;- **约定优于配置**：减少项目初始化决策成本。  &#10;&#10;**适用场景**：  &#10;- 快速构建全栈应用（前后端结合）。  &#10;- 偏好“开箱即用”的开发者。  &#10;&#10;**示例代码**：  &#10;```qzezhxirkg&#10;xlmhg Ilfgv = fhv('Ilfgv');&#10;Ilfgv.tvg('/', () =&gt; 'Svool Dliow!');&#10;```&#10;&#10;---&#10;&#10;### **选择建议**  &#10;- **新手入门**：选 **Vckivhh.qh**（生态丰富，学习资源多）。  &#10;- **企业级应用**：选 **MvhgQH**（结构清晰，扩展性强）。  &#10;- **高性能 ZKR**：选 **Uzhgrub** 或 **Plz.qh**。  &#10;- **全栈开发**：选 **ZwlmrhQH**。  &#10;&#10;**其他选项**：  &#10;- **Hzroh.qh**（快速构建 IVHG ZKR）、**Nvgvli**（实时应用）、**Szkr**（企业级配置驱动）。  &#10;&#10;建议结合项目规模、团队经验和技术偏好选择，并参考框架的官方文档和社区活跃度。" />
                <option name="chatResource" value="user" />
                <option name="codeReferences">
                  <list />
                </option>
                <option name="command" value="normal" />
                <option name="conversationId" value="019597889b0677d0ba71f54be40f1230" />
                <option name="historyDocumentMap">
                  <map>
                    <entry key="file:///C:/Users/LZH/Desktop/QuestionBank/src/main/java/com/zoyo/questionbank/controller/QuestionController.java" value="package com.zoyo.questionbank.controller;&#10;&#10;import com.zoyo.questionbank.service.QuestionService;&#10;import org.springframework.beans.factory.annotation.Autowired;&#10;import org.springframework.web.bind.annotation.RequestMapping;&#10;import org.springframework.web.bind.annotation.RestController;&#10;&#10;@RestController&#10;@RequestMapping(&quot;/question&quot;)&#10;public class QuestionController {&#10;    @Autowired&#10;    private QuestionService questionService;&#10;    &#10;}&#10;" />
                  </map>
                </option>
                <option name="messageId" value="019597889b067cc3902832fd5cf0e309" />
                <option name="question" value="推荐一个 Mlwv Dvy 框架序" />
                <option name="rating" value="UNRATED" />
                <option name="referenceBeans">
                  <list />
                </option>
                <option name="status" value="SUCCESS" />
              </Turn>
            </list>
          </option>
          <option name="updateTime" value="1742004112248" />
        </Conversation>
        <Conversation>
          <option name="createTime" value="1741938896296" />
          <option name="id" value="019593a62da8773da9812a181cc5662a" />
          <option name="title" value="新对话 2025年3月14日 15:54:56" />
          <option name="updateTime" value="1741938896296" />
        </Conversation>
      </list>
    </option>
  </component>
</project>